webpackJsonp([0xa174756f5820],{572:function(e,t){e.exports={pathContext:{docHtml:'<h1 id="automated-sync-policy"><a href="#automated-sync-policy" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Automated Sync Policy</h1>\n<p>Argo CD has the ability to automatically sync an application when it detects differences between\nthe desired manifests in Git, and the live state in the cluster. A benefit of automatic sync is that\nCI/CD pipelines no longer need direct access to the Argo CD API server to perform the deployment.\nInstead, the pipeline makes a commit and push to the Git repository with the changes to the\nmanifests in the tracking Git repo.</p>\n<p>To configure automated sync run:</p>\n<pre><code class="language-bash">argocd app set &#x3C;APPNAME> --sync-policy automated\n</code></pre>\n<p>Alternatively, if creating the application an application manifest, specify a syncPolicy with an\n<code>automated</code> policy.</p>\n<pre><code class="language-yaml">spec:\n  syncPolicy:\n    automated: {}\n</code></pre>\n<h2 id="automatic-pruning"><a href="#automatic-pruning" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Automatic Pruning</h2>\n<p>By default (and as a safety mechanism), automated sync will not delete resources when Argo CD detects\nthe resource is no longer defined in Git. To prune the resources, a manual sync can always be\nperformed (with pruning checked). Pruning can also be enabled to happen automatically as part of the\nautomated sync by running:</p>\n<pre><code class="language-bash">argocd app set &#x3C;APPNAME> --auto-prune\n</code></pre>\n<p>Or by setting the prune option to true in the automated sync policy:</p>\n<pre><code class="language-yaml">spec:\n  syncPolicy:\n    automated:\n      prune: true\n</code></pre>\n<h2 id="automated-sync-semantics"><a href="#automated-sync-semantics" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Automated Sync Semantics</h2>\n<ul>\n<li>An automated sync will only be performed if the application is OutOfSync. Applications in a\nSynced or error state will not attempt automated sync.</li>\n<li>Automated sync will only attempt one synchronization per unique combination of commit SHA1 and\napplication parameters. If the most recent successful sync in the history was already performed\nagainst the same commit-SHA and parameters, a second sync will not be attempted.</li>\n<li>Automatic sync will not reattempt a sync if the previous sync attempt against the same commit-SHA\nand parameters had failed.</li>\n<li>Rollback cannot be performed against an application with automated sync enabled.</li>\n</ul>',docPath:"argo-cd/docs/user-guide/auto_sync",proj:"argo-cd"}}}});
//# sourceMappingURL=path---docs-argo-cd-docs-user-guide-auto-sync-html-2042a6c9b8878390f48a.js.map