{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-dot-prop-readme-html-2736e56f54bed57f7bc8.js","webpack:///./.cache/json/docs-argo-ci-node-modules-dot-prop-readme-html.json"],"names":["webpackJsonp","2254","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,umEAAg3CC,QAAA,uCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-dot-prop-readme-html-2736e56f54bed57f7bc8.js","sourcesContent":["webpackJsonp([164848417873373],{\n\n/***/ 2254:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>dot-prop <a href=\\\"https://travis-ci.org/sindresorhus/dot-prop\\\"><img src=\\\"https://travis-ci.org/sindresorhus/dot-prop.svg?branch=master\\\" alt=\\\"Build Status\\\"></a></h1>\\n<blockquote>\\n<p>Get, set, or delete a property from a nested object using a dot path</p>\\n</blockquote>\\n<h2>Install</h2>\\n<pre><code>$ npm install --save dot-prop\\n</code></pre>\\n<h2>Usage</h2>\\n<pre><code class=\\\"language-js\\\">const dotProp = require('dot-prop');\\n\\n// getter\\ndotProp.get({foo: {bar: 'unicorn'}}, 'foo.bar');\\n//=> 'unicorn'\\n\\ndotProp.get({foo: {bar: 'a'}}, 'foo.notDefined.deep');\\n//=> undefined\\n\\ndotProp.get({foo: {bar: 'a'}}, 'foo.notDefined.deep', 'default value');\\n//=> 'default value'\\n\\ndotProp.get({foo: {'dot.dot': 'unicorn'}}, 'foo.dot\\\\\\\\.dot');\\n//=> 'unicorn'\\n\\n// setter\\nconst obj = {foo: {bar: 'a'}};\\ndotProp.set(obj, 'foo.bar', 'b');\\nconsole.log(obj);\\n//=> {foo: {bar: 'b'}}\\n\\nconst foo = dotProp.set({}, 'foo.bar', 'c');\\nconsole.log(foo);\\n//=> {foo: {bar: 'c'}}\\n\\ndotProp.set(obj, 'foo.baz', 'x');\\nconsole.log(obj);\\n//=> {foo: {bar: 'b', baz: 'x'}}\\n\\n// has\\ndotProp.has({foo: {bar: 'unicorn'}}, 'foo.bar');\\n//=> true\\n\\n// deleter\\nconst obj = {foo: {bar: 'a'}};\\ndotProp.delete(obj, 'foo.bar');\\nconsole.log(obj);\\n//=> {foo: {}}\\n\\nobj.foo.bar = {x: 'y', y: 'x'};\\ndotProp.delete(obj, 'foo.bar.x');\\nconsole.log(obj);\\n//=> {foo: {bar: {y: 'x'}}}\\n</code></pre>\\n<h2>API</h2>\\n<h3>get(obj, path, [defaultValue])</h3>\\n<h3>set(obj, path, value)</h3>\\n<p>Returns the object.</p>\\n<h3>has(obj, path)</h3>\\n<h3>delete(obj, path)</h3>\\n<h4>obj</h4>\\n<p>Type: <code>Object</code></p>\\n<p>Object to get, set, or delete the <code>path</code> value.</p>\\n<h4>path</h4>\\n<p>Type: <code>string</code></p>\\n<p>Path of the property in the object, using <code>.</code> to separate each nested key.</p>\\n<p>Use <code>\\\\\\\\.</code> if you have a <code>.</code> in the key.</p>\\n<h4>value</h4>\\n<p>Type: <code>any</code></p>\\n<p>Value to set at <code>path</code>.</p>\\n<h4>defaultValue</h4>\\n<p>Type: <code>any</code></p>\\n<p>Default value.</p>\\n<h2>License</h2>\\n<p>MIT © <a href=\\\"https://sindresorhus.com\\\">Sindre Sorhus</a></p>\",\"docPath\":\"argo-ci/node_modules/dot-prop/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-dot-prop-readme-html-2736e56f54bed57f7bc8.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>dot-prop <a href=\\\"https://travis-ci.org/sindresorhus/dot-prop\\\"><img src=\\\"https://travis-ci.org/sindresorhus/dot-prop.svg?branch=master\\\" alt=\\\"Build Status\\\"></a></h1>\\n<blockquote>\\n<p>Get, set, or delete a property from a nested object using a dot path</p>\\n</blockquote>\\n<h2>Install</h2>\\n<pre><code>$ npm install --save dot-prop\\n</code></pre>\\n<h2>Usage</h2>\\n<pre><code class=\\\"language-js\\\">const dotProp = require('dot-prop');\\n\\n// getter\\ndotProp.get({foo: {bar: 'unicorn'}}, 'foo.bar');\\n//=> 'unicorn'\\n\\ndotProp.get({foo: {bar: 'a'}}, 'foo.notDefined.deep');\\n//=> undefined\\n\\ndotProp.get({foo: {bar: 'a'}}, 'foo.notDefined.deep', 'default value');\\n//=> 'default value'\\n\\ndotProp.get({foo: {'dot.dot': 'unicorn'}}, 'foo.dot\\\\\\\\.dot');\\n//=> 'unicorn'\\n\\n// setter\\nconst obj = {foo: {bar: 'a'}};\\ndotProp.set(obj, 'foo.bar', 'b');\\nconsole.log(obj);\\n//=> {foo: {bar: 'b'}}\\n\\nconst foo = dotProp.set({}, 'foo.bar', 'c');\\nconsole.log(foo);\\n//=> {foo: {bar: 'c'}}\\n\\ndotProp.set(obj, 'foo.baz', 'x');\\nconsole.log(obj);\\n//=> {foo: {bar: 'b', baz: 'x'}}\\n\\n// has\\ndotProp.has({foo: {bar: 'unicorn'}}, 'foo.bar');\\n//=> true\\n\\n// deleter\\nconst obj = {foo: {bar: 'a'}};\\ndotProp.delete(obj, 'foo.bar');\\nconsole.log(obj);\\n//=> {foo: {}}\\n\\nobj.foo.bar = {x: 'y', y: 'x'};\\ndotProp.delete(obj, 'foo.bar.x');\\nconsole.log(obj);\\n//=> {foo: {bar: {y: 'x'}}}\\n</code></pre>\\n<h2>API</h2>\\n<h3>get(obj, path, [defaultValue])</h3>\\n<h3>set(obj, path, value)</h3>\\n<p>Returns the object.</p>\\n<h3>has(obj, path)</h3>\\n<h3>delete(obj, path)</h3>\\n<h4>obj</h4>\\n<p>Type: <code>Object</code></p>\\n<p>Object to get, set, or delete the <code>path</code> value.</p>\\n<h4>path</h4>\\n<p>Type: <code>string</code></p>\\n<p>Path of the property in the object, using <code>.</code> to separate each nested key.</p>\\n<p>Use <code>\\\\\\\\.</code> if you have a <code>.</code> in the key.</p>\\n<h4>value</h4>\\n<p>Type: <code>any</code></p>\\n<p>Value to set at <code>path</code>.</p>\\n<h4>defaultValue</h4>\\n<p>Type: <code>any</code></p>\\n<p>Default value.</p>\\n<h2>License</h2>\\n<p>MIT © <a href=\\\"https://sindresorhus.com\\\">Sindre Sorhus</a></p>\",\"docPath\":\"argo-ci/node_modules/dot-prop/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-dot-prop-readme-html.json\n// module id = 2254\n// module chunks = 164848417873373"],"sourceRoot":""}