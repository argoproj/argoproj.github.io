{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-cookie-5a12857984cef9afe4dd.js","webpack:///./.cache/json/docs-argo-ci-node-modules-cookie.json"],"names":["webpackJsonp","2205","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,ouSAAq4RC,QAAA,qCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-cookie-5a12857984cef9afe4dd.js","sourcesContent":["webpackJsonp([160742102618876],{\n\n/***/ 2205:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>cookie</h1>\\n<p><a href=\\\"https://npmjs.org/package/cookie\\\"><img src=\\\"https://img.shields.io/npm/v/cookie.svg\\\" alt=\\\"NPM Version\\\"></a>\\n<a href=\\\"https://npmjs.org/package/cookie\\\"><img src=\\\"https://img.shields.io/npm/dm/cookie.svg\\\" alt=\\\"NPM Downloads\\\"></a>\\n<a href=\\\"https://nodejs.org/en/download\\\"><img src=\\\"https://img.shields.io/node/v/cookie.svg\\\" alt=\\\"Node.js Version\\\"></a>\\n<a href=\\\"https://travis-ci.org/jshttp/cookie\\\"><img src=\\\"https://img.shields.io/travis/jshttp/cookie/master.svg\\\" alt=\\\"Build Status\\\"></a>\\n<a href=\\\"https://coveralls.io/r/jshttp/cookie?branch=master\\\"><img src=\\\"https://img.shields.io/coveralls/jshttp/cookie/master.svg\\\" alt=\\\"Test Coverage\\\"></a></p>\\n<p>Basic HTTP cookie parser and serializer for HTTP servers.</p>\\n<h2>Installation</h2>\\n<pre><code class=\\\"language-sh\\\">$ npm install cookie\\n</code></pre>\\n<h2>API</h2>\\n<pre><code class=\\\"language-js\\\">var cookie = require('cookie');\\n</code></pre>\\n<h3>cookie.parse(str, options)</h3>\\n<p>Parse an HTTP <code>Cookie</code> header string and returning an object of all cookie name-value pairs.\\nThe <code>str</code> argument is the string representing a <code>Cookie</code> header value and <code>options</code> is an\\noptional object containing additional parsing options.</p>\\n<pre><code class=\\\"language-js\\\">var cookies = cookie.parse('foo=bar; equation=E%3Dmc%5E2');\\n// { foo: 'bar', equation: 'E=mc^2' }\\n</code></pre>\\n<h4>Options</h4>\\n<p><code>cookie.parse</code> accepts these properties in the options object.</p>\\n<h5>decode</h5>\\n<p>Specifies a function that will be used to decode a cookie's value. Since the value of a cookie\\nhas a limited character set (and must be a simple string), this function can be used to decode\\na previously-encoded cookie value into a JavaScript string or other object.</p>\\n<p>The default function is the global <code>decodeURIComponent</code>, which will decode any URL-encoded\\nsequences into their byte representations.</p>\\n<p><strong>note</strong> if an error is thrown from this function, the original, non-decoded cookie value will\\nbe returned as the cookie's value.</p>\\n<h3>cookie.serialize(name, value, options)</h3>\\n<p>Serialize a cookie name-value pair into a <code>Set-Cookie</code> header string. The <code>name</code> argument is the\\nname for the cookie, the <code>value</code> argument is the value to set the cookie to, and the <code>options</code>\\nargument is an optional object containing additional serialization options.</p>\\n<pre><code class=\\\"language-js\\\">var setCookie = cookie.serialize('foo', 'bar');\\n// foo=bar\\n</code></pre>\\n<h4>Options</h4>\\n<p><code>cookie.serialize</code> accepts these properties in the options object.</p>\\n<h5>domain</h5>\\n<p>Specifies the value for the <a href=\\\"https://tools.ietf.org/html/rfc6266#section-5.2.3\\\"><code>Domain</code> <code>Set-Cookie</code> attribute</a>. By default, no\\ndomain is set, and most clients will consider the cookie to apply to only the current domain.</p>\\n<h5>encode</h5>\\n<p>Specifies a function that will be used to encode a cookie's value. Since value of a cookie\\nhas a limited character set (and must be a simple string), this function can be used to encode\\na value into a string suited for a cookie's value.</p>\\n<p>The default function is the global <code>ecodeURIComponent</code>, which will encode a JavaScript string\\ninto UTF-8 byte sequences and then URL-encode any that fall outside of the cookie range.</p>\\n<h5>expires</h5>\\n<p>Specifies the <code>Date</code> object to be the value for the <a href=\\\"https://tools.ietf.org/html/rfc6266#section-5.2.1\\\"><code>Expires</code> <code>Set-Cookie</code> attribute</a>.\\nBy default, no expiration is set, and most clients will consider this a \\\"non-persistent cookie\\\" and\\nwill delete it on a condition like exiting a web browser application.</p>\\n<p><strong>note</strong> the <a href=\\\"https://tools.ietf.org/html/rfc6266#section-5.3\\\">cookie storage model specification</a> states that if both <code>expires</code> and\\n<code>magAge</code> are set, then <code>maxAge</code> takes precedence, but it is possiblke not all clients by obey this,\\nso if both are set, they should point to the same date and time.</p>\\n<h5>httpOnly</h5>\\n<p>Specifies the <code>boolean</code> value for the <a href=\\\"\\\"><code>HttpOnly</code> <code>Set-Cookie</code> attribute</a>. When truthy,\\nthe <code>HttpOnly</code> attribute is set, otherwise it is not. By default, the <code>HttpOnly</code> attribute is not set.</p>\\n<p><strong>note</strong> be careful when setting this to <code>true</code>, as compliant clients will not allow client-side\\nJavaScript to see the cookie in <code>document.cookie</code>.</p>\\n<h5>maxAge</h5>\\n<p>Specifies the <code>number</code> (in seconds) to be the value for the <a href=\\\"https://tools.ietf.org/html/rfc6266#section-5.2.2\\\"><code>Max-Age</code> <code>Set-Cookie</code> attribute</a>.\\nThe given number will be converted to an integer by rounding down. By default, no maximum age is set.</p>\\n<p><strong>note</strong> the <a href=\\\"https://tools.ietf.org/html/rfc6266#section-5.3\\\">cookie storage model specification</a> states that if both <code>expires</code> and\\n<code>magAge</code> are set, then <code>maxAge</code> takes precedence, but it is possiblke not all clients by obey this,\\nso if both are set, they should point to the same date and time.</p>\\n<h5>path</h5>\\n<p>Specifies the value for the <a href=\\\"https://tools.ietf.org/html/rfc6266#section-5.2.4\\\"><code>Path</code> <code>Set-Cookie</code> attribute</a>. By default, the path\\nis considered the <a href=\\\"https://tools.ietf.org/html/rfc6266#section-5.1.4\\\">\\\"default path\\\"</a>. By default, no maximum age is set, and most\\nclients will consider this a \\\"non-persistent cookie\\\" and will delete it on a condition like exiting\\na web browser application.</p>\\n<h5>sameSite</h5>\\n<p>Specifies the <code>boolean</code> or <code>string</code> to be the value for the <a href=\\\"https://tools.ietf.org/html/draft-west-first-party-cookies-07\\\"><code>SameSite</code> <code>Set-Cookie</code> attribute</a>.</p>\\n<ul>\\n<li><code>true</code> will set the <code>SameSite</code> attribute to <code>Strict</code> for strict same site enforcement.</li>\\n<li><code>false</code> will not set the <code>SameSite</code> attribute.</li>\\n<li><code>'lax'</code> will set the <code>SameSite</code> attribute to <code>Lax</code> for lax same site enforcement.</li>\\n<li><code>'strict'</code> will set the <code>SameSite</code> attribute to <code>Strict</code> for strict same site enforcement.</li>\\n</ul>\\n<p>More information about the different enforcement levels can be found in the specification\\n<a href=\\\"https://tools.ietf.org/html/draft-west-first-party-cookies-07#section-4.1.1\\\">https://tools.ietf.org/html/draft-west-first-party-cookies-07#section-4.1.1</a></p>\\n<p><strong>note</strong> This is an attribute that has not yet been fully standardized, and may change in the future.\\nThis also means many clients may ignore this attribute until they understand it.</p>\\n<h5>secure</h5>\\n<p>Specifies the <code>boolean</code> value for the <a href=\\\"\\\"><code>Secure</code> <code>Set-Cookie</code> attribute</a>. When truthy,\\nthe <code>Secure</code> attribute is set, otherwise it is not. By default, the <code>Secure</code> attribute is not set.</p>\\n<p><strong>note</strong> be careful when setting this to <code>true</code>, as compliant clients will not send the cookie back to\\nthe server in the future if the browser does not have an HTTPS connection.</p>\\n<h2>Example</h2>\\n<p>The following example uses this module in conjunction with the Node.js core HTTP server\\nto prompt a user for their name and display it back on future visits.</p>\\n<pre><code class=\\\"language-js\\\">var cookie = require('cookie');\\nvar escapeHtml = require('escape-html');\\nvar http = require('http');\\nvar url = require('url');\\n\\nfunction onRequest(req, res) {\\n  // Parse the query string\\n  var query = url.parse(req.url, true, true).query;\\n\\n  if (query &#x26;&#x26; query.name) {\\n    // Set a new cookie with the name\\n    res.setHeader('Set-Cookie', cookie.serialize('name', String(query.name), {\\n      httpOnly: true,\\n      maxAge: 60 * 60 * 24 * 7 // 1 week\\n    }));\\n\\n    // Redirect back after setting cookie\\n    res.statusCode = 302;\\n    res.setHeader('Location', req.headers.referer || '/');\\n    res.end();\\n    return;\\n  }\\n\\n  // Parse the cookies on the request\\n  var cookies = cookie.parse(req.headers.cookie || '');\\n\\n  // Get the visitor name set in the cookie\\n  var name = cookies.name;\\n\\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8');\\n\\n  if (name) {\\n    res.write('&#x3C;p>Welcome back, &#x3C;b>' + escapeHtml(name) + '&#x3C;/b>!&#x3C;/p>');\\n  } else {\\n    res.write('&#x3C;p>Hello, new visitor!&#x3C;/p>');\\n  }\\n\\n  res.write('&#x3C;form method=\\\"GET\\\">');\\n  res.write('&#x3C;input placeholder=\\\"enter your name\\\" name=\\\"name\\\"> &#x3C;input type=\\\"submit\\\" value=\\\"Set Name\\\">');\\n  res.end('&#x3C;/form');\\n}\\n\\nhttp.createServer(onRequest).listen(3000);\\n</code></pre>\\n<h2>Testing</h2>\\n<pre><code class=\\\"language-sh\\\">$ npm test\\n</code></pre>\\n<h2>References</h2>\\n<ul>\\n<li><a href=\\\"https://tools.ietf.org/html/rfc6266\\\">RFC 6266: HTTP State Management Mechanism</a></li>\\n<li><a href=\\\"https://tools.ietf.org/html/draft-west-first-party-cookies-07\\\">Same-site Cookies</a></li>\\n</ul>\\n<h2>License</h2>\\n<p><a href=\\\"LICENSE\\\">MIT</a></p>\",\"docPath\":\"argo-ci/node_modules/cookie/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-cookie-5a12857984cef9afe4dd.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>cookie</h1>\\n<p><a href=\\\"https://npmjs.org/package/cookie\\\"><img src=\\\"https://img.shields.io/npm/v/cookie.svg\\\" alt=\\\"NPM Version\\\"></a>\\n<a href=\\\"https://npmjs.org/package/cookie\\\"><img src=\\\"https://img.shields.io/npm/dm/cookie.svg\\\" alt=\\\"NPM Downloads\\\"></a>\\n<a href=\\\"https://nodejs.org/en/download\\\"><img src=\\\"https://img.shields.io/node/v/cookie.svg\\\" alt=\\\"Node.js Version\\\"></a>\\n<a href=\\\"https://travis-ci.org/jshttp/cookie\\\"><img src=\\\"https://img.shields.io/travis/jshttp/cookie/master.svg\\\" alt=\\\"Build Status\\\"></a>\\n<a href=\\\"https://coveralls.io/r/jshttp/cookie?branch=master\\\"><img src=\\\"https://img.shields.io/coveralls/jshttp/cookie/master.svg\\\" alt=\\\"Test Coverage\\\"></a></p>\\n<p>Basic HTTP cookie parser and serializer for HTTP servers.</p>\\n<h2>Installation</h2>\\n<pre><code class=\\\"language-sh\\\">$ npm install cookie\\n</code></pre>\\n<h2>API</h2>\\n<pre><code class=\\\"language-js\\\">var cookie = require('cookie');\\n</code></pre>\\n<h3>cookie.parse(str, options)</h3>\\n<p>Parse an HTTP <code>Cookie</code> header string and returning an object of all cookie name-value pairs.\\nThe <code>str</code> argument is the string representing a <code>Cookie</code> header value and <code>options</code> is an\\noptional object containing additional parsing options.</p>\\n<pre><code class=\\\"language-js\\\">var cookies = cookie.parse('foo=bar; equation=E%3Dmc%5E2');\\n// { foo: 'bar', equation: 'E=mc^2' }\\n</code></pre>\\n<h4>Options</h4>\\n<p><code>cookie.parse</code> accepts these properties in the options object.</p>\\n<h5>decode</h5>\\n<p>Specifies a function that will be used to decode a cookie's value. Since the value of a cookie\\nhas a limited character set (and must be a simple string), this function can be used to decode\\na previously-encoded cookie value into a JavaScript string or other object.</p>\\n<p>The default function is the global <code>decodeURIComponent</code>, which will decode any URL-encoded\\nsequences into their byte representations.</p>\\n<p><strong>note</strong> if an error is thrown from this function, the original, non-decoded cookie value will\\nbe returned as the cookie's value.</p>\\n<h3>cookie.serialize(name, value, options)</h3>\\n<p>Serialize a cookie name-value pair into a <code>Set-Cookie</code> header string. The <code>name</code> argument is the\\nname for the cookie, the <code>value</code> argument is the value to set the cookie to, and the <code>options</code>\\nargument is an optional object containing additional serialization options.</p>\\n<pre><code class=\\\"language-js\\\">var setCookie = cookie.serialize('foo', 'bar');\\n// foo=bar\\n</code></pre>\\n<h4>Options</h4>\\n<p><code>cookie.serialize</code> accepts these properties in the options object.</p>\\n<h5>domain</h5>\\n<p>Specifies the value for the <a href=\\\"https://tools.ietf.org/html/rfc6266#section-5.2.3\\\"><code>Domain</code> <code>Set-Cookie</code> attribute</a>. By default, no\\ndomain is set, and most clients will consider the cookie to apply to only the current domain.</p>\\n<h5>encode</h5>\\n<p>Specifies a function that will be used to encode a cookie's value. Since value of a cookie\\nhas a limited character set (and must be a simple string), this function can be used to encode\\na value into a string suited for a cookie's value.</p>\\n<p>The default function is the global <code>ecodeURIComponent</code>, which will encode a JavaScript string\\ninto UTF-8 byte sequences and then URL-encode any that fall outside of the cookie range.</p>\\n<h5>expires</h5>\\n<p>Specifies the <code>Date</code> object to be the value for the <a href=\\\"https://tools.ietf.org/html/rfc6266#section-5.2.1\\\"><code>Expires</code> <code>Set-Cookie</code> attribute</a>.\\nBy default, no expiration is set, and most clients will consider this a \\\"non-persistent cookie\\\" and\\nwill delete it on a condition like exiting a web browser application.</p>\\n<p><strong>note</strong> the <a href=\\\"https://tools.ietf.org/html/rfc6266#section-5.3\\\">cookie storage model specification</a> states that if both <code>expires</code> and\\n<code>magAge</code> are set, then <code>maxAge</code> takes precedence, but it is possiblke not all clients by obey this,\\nso if both are set, they should point to the same date and time.</p>\\n<h5>httpOnly</h5>\\n<p>Specifies the <code>boolean</code> value for the <a href=\\\"\\\"><code>HttpOnly</code> <code>Set-Cookie</code> attribute</a>. When truthy,\\nthe <code>HttpOnly</code> attribute is set, otherwise it is not. By default, the <code>HttpOnly</code> attribute is not set.</p>\\n<p><strong>note</strong> be careful when setting this to <code>true</code>, as compliant clients will not allow client-side\\nJavaScript to see the cookie in <code>document.cookie</code>.</p>\\n<h5>maxAge</h5>\\n<p>Specifies the <code>number</code> (in seconds) to be the value for the <a href=\\\"https://tools.ietf.org/html/rfc6266#section-5.2.2\\\"><code>Max-Age</code> <code>Set-Cookie</code> attribute</a>.\\nThe given number will be converted to an integer by rounding down. By default, no maximum age is set.</p>\\n<p><strong>note</strong> the <a href=\\\"https://tools.ietf.org/html/rfc6266#section-5.3\\\">cookie storage model specification</a> states that if both <code>expires</code> and\\n<code>magAge</code> are set, then <code>maxAge</code> takes precedence, but it is possiblke not all clients by obey this,\\nso if both are set, they should point to the same date and time.</p>\\n<h5>path</h5>\\n<p>Specifies the value for the <a href=\\\"https://tools.ietf.org/html/rfc6266#section-5.2.4\\\"><code>Path</code> <code>Set-Cookie</code> attribute</a>. By default, the path\\nis considered the <a href=\\\"https://tools.ietf.org/html/rfc6266#section-5.1.4\\\">\\\"default path\\\"</a>. By default, no maximum age is set, and most\\nclients will consider this a \\\"non-persistent cookie\\\" and will delete it on a condition like exiting\\na web browser application.</p>\\n<h5>sameSite</h5>\\n<p>Specifies the <code>boolean</code> or <code>string</code> to be the value for the <a href=\\\"https://tools.ietf.org/html/draft-west-first-party-cookies-07\\\"><code>SameSite</code> <code>Set-Cookie</code> attribute</a>.</p>\\n<ul>\\n<li><code>true</code> will set the <code>SameSite</code> attribute to <code>Strict</code> for strict same site enforcement.</li>\\n<li><code>false</code> will not set the <code>SameSite</code> attribute.</li>\\n<li><code>'lax'</code> will set the <code>SameSite</code> attribute to <code>Lax</code> for lax same site enforcement.</li>\\n<li><code>'strict'</code> will set the <code>SameSite</code> attribute to <code>Strict</code> for strict same site enforcement.</li>\\n</ul>\\n<p>More information about the different enforcement levels can be found in the specification\\n<a href=\\\"https://tools.ietf.org/html/draft-west-first-party-cookies-07#section-4.1.1\\\">https://tools.ietf.org/html/draft-west-first-party-cookies-07#section-4.1.1</a></p>\\n<p><strong>note</strong> This is an attribute that has not yet been fully standardized, and may change in the future.\\nThis also means many clients may ignore this attribute until they understand it.</p>\\n<h5>secure</h5>\\n<p>Specifies the <code>boolean</code> value for the <a href=\\\"\\\"><code>Secure</code> <code>Set-Cookie</code> attribute</a>. When truthy,\\nthe <code>Secure</code> attribute is set, otherwise it is not. By default, the <code>Secure</code> attribute is not set.</p>\\n<p><strong>note</strong> be careful when setting this to <code>true</code>, as compliant clients will not send the cookie back to\\nthe server in the future if the browser does not have an HTTPS connection.</p>\\n<h2>Example</h2>\\n<p>The following example uses this module in conjunction with the Node.js core HTTP server\\nto prompt a user for their name and display it back on future visits.</p>\\n<pre><code class=\\\"language-js\\\">var cookie = require('cookie');\\nvar escapeHtml = require('escape-html');\\nvar http = require('http');\\nvar url = require('url');\\n\\nfunction onRequest(req, res) {\\n  // Parse the query string\\n  var query = url.parse(req.url, true, true).query;\\n\\n  if (query &#x26;&#x26; query.name) {\\n    // Set a new cookie with the name\\n    res.setHeader('Set-Cookie', cookie.serialize('name', String(query.name), {\\n      httpOnly: true,\\n      maxAge: 60 * 60 * 24 * 7 // 1 week\\n    }));\\n\\n    // Redirect back after setting cookie\\n    res.statusCode = 302;\\n    res.setHeader('Location', req.headers.referer || '/');\\n    res.end();\\n    return;\\n  }\\n\\n  // Parse the cookies on the request\\n  var cookies = cookie.parse(req.headers.cookie || '');\\n\\n  // Get the visitor name set in the cookie\\n  var name = cookies.name;\\n\\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8');\\n\\n  if (name) {\\n    res.write('&#x3C;p>Welcome back, &#x3C;b>' + escapeHtml(name) + '&#x3C;/b>!&#x3C;/p>');\\n  } else {\\n    res.write('&#x3C;p>Hello, new visitor!&#x3C;/p>');\\n  }\\n\\n  res.write('&#x3C;form method=\\\"GET\\\">');\\n  res.write('&#x3C;input placeholder=\\\"enter your name\\\" name=\\\"name\\\"> &#x3C;input type=\\\"submit\\\" value=\\\"Set Name\\\">');\\n  res.end('&#x3C;/form');\\n}\\n\\nhttp.createServer(onRequest).listen(3000);\\n</code></pre>\\n<h2>Testing</h2>\\n<pre><code class=\\\"language-sh\\\">$ npm test\\n</code></pre>\\n<h2>References</h2>\\n<ul>\\n<li><a href=\\\"https://tools.ietf.org/html/rfc6266\\\">RFC 6266: HTTP State Management Mechanism</a></li>\\n<li><a href=\\\"https://tools.ietf.org/html/draft-west-first-party-cookies-07\\\">Same-site Cookies</a></li>\\n</ul>\\n<h2>License</h2>\\n<p><a href=\\\"LICENSE\\\">MIT</a></p>\",\"docPath\":\"argo-ci/node_modules/cookie/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-cookie.json\n// module id = 2205\n// module chunks = 160742102618876"],"sourceRoot":""}