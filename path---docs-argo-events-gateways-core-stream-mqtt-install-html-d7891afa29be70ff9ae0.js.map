{"version":3,"sources":["webpack:///path---docs-argo-events-gateways-core-stream-mqtt-install-html-d7891afa29be70ff9ae0.js","webpack:///./.cache/json/docs-argo-events-gateways-core-stream-mqtt-install-html.json"],"names":["webpackJsonp","604","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,6zDAAkCC,QAAA,gDAAAC,KAAA","file":"path---docs-argo-events-gateways-core-stream-mqtt-install-html-d7891afa29be70ff9ae0.js","sourcesContent":["webpackJsonp([215736491478694],{\n\n/***/ 604:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>MQTT Gateway &#x26; Sensor</h1>\\n<ol>\\n<li><a href=\\\"#example-event-sources-definition\\\">Example event sources definition</a></li>\\n<li><a href=\\\"#install-gateway\\\">Install gateway</a></li>\\n<li><a href=\\\"#install-sensor\\\">Install sensor</a></li>\\n<li><a href=\\\"#trigger-workflow\\\">Trigger Workflow</a></li>\\n</ol>\\n<h2>Example event sources definition</h2>\\n<pre><code class=\\\"language-yaml\\\">apiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n name: mqtt-gateway-configmap\\ndata:\\n foo: |-\\n   url: tcp://mqtt.argo-events:1883 # mqtt service\\n   topic: foo # topic to listen to\\n bar: |-\\n   url: tcp://mqtt.argo-events:1883\\n   topic: bar\\n</code></pre>\\n<p>Create gateway event sources</p>\\n<pre><code class=\\\"language-yaml\\\">kubectl -n argo-events create -f  https://github.com/argoproj/argo-events/blob/master/examples/gateways/mqtt-gateway-configmap.yaml\\n</code></pre>\\n<h2>Install gateway</h2>\\n<ol>\\n<li>\\n<p><strong>Create gateway</strong></p>\\n<pre><code class=\\\"language-yaml\\\">kubectl -n argo-events create -f https://github.com/argoproj/argo-events/blob/master/examples/gateways/mqtt.yaml\\n</code></pre>\\n</li>\\n<li>\\n<p><strong>Check the status of the gateway</strong></p>\\n<pre><code class=\\\"language-yaml\\\">kubectl -n argo-events describe gateway mqtt-gateway\\n</code></pre>\\n<p>Make sure the gateway is in active state and all the event sources are in running state.</p>\\n</li>\\n</ol>\\n<h2>Install Sensor</h2>\\n<pre><code class=\\\"language-yaml\\\">kubectl -n argo-events create -f https://github.com/argoproj/argo-events/blob/master/examples/sensors/mqtt.yaml\\n</code></pre>\\n<h2>Trigger Workflow</h2>\\n<p>Publish message to topic <code>foo</code>. You might find this helpful <a href=\\\"https://www.ev3dev.org/docs/tutorials/sending-and-receiving-messages-with-mqtt/\\\">https://www.ev3dev.org/docs/tutorials/sending-and-receiving-messages-with-mqtt/</a></p>\",\"docPath\":\"argo-events/gateways/core/stream/mqtt/install\",\"proj\":\"argo-events\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-events-gateways-core-stream-mqtt-install-html-d7891afa29be70ff9ae0.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>MQTT Gateway &#x26; Sensor</h1>\\n<ol>\\n<li><a href=\\\"#example-event-sources-definition\\\">Example event sources definition</a></li>\\n<li><a href=\\\"#install-gateway\\\">Install gateway</a></li>\\n<li><a href=\\\"#install-sensor\\\">Install sensor</a></li>\\n<li><a href=\\\"#trigger-workflow\\\">Trigger Workflow</a></li>\\n</ol>\\n<h2>Example event sources definition</h2>\\n<pre><code class=\\\"language-yaml\\\">apiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n name: mqtt-gateway-configmap\\ndata:\\n foo: |-\\n   url: tcp://mqtt.argo-events:1883 # mqtt service\\n   topic: foo # topic to listen to\\n bar: |-\\n   url: tcp://mqtt.argo-events:1883\\n   topic: bar\\n</code></pre>\\n<p>Create gateway event sources</p>\\n<pre><code class=\\\"language-yaml\\\">kubectl -n argo-events create -f  https://github.com/argoproj/argo-events/blob/master/examples/gateways/mqtt-gateway-configmap.yaml\\n</code></pre>\\n<h2>Install gateway</h2>\\n<ol>\\n<li>\\n<p><strong>Create gateway</strong></p>\\n<pre><code class=\\\"language-yaml\\\">kubectl -n argo-events create -f https://github.com/argoproj/argo-events/blob/master/examples/gateways/mqtt.yaml\\n</code></pre>\\n</li>\\n<li>\\n<p><strong>Check the status of the gateway</strong></p>\\n<pre><code class=\\\"language-yaml\\\">kubectl -n argo-events describe gateway mqtt-gateway\\n</code></pre>\\n<p>Make sure the gateway is in active state and all the event sources are in running state.</p>\\n</li>\\n</ol>\\n<h2>Install Sensor</h2>\\n<pre><code class=\\\"language-yaml\\\">kubectl -n argo-events create -f https://github.com/argoproj/argo-events/blob/master/examples/sensors/mqtt.yaml\\n</code></pre>\\n<h2>Trigger Workflow</h2>\\n<p>Publish message to topic <code>foo</code>. You might find this helpful <a href=\\\"https://www.ev3dev.org/docs/tutorials/sending-and-receiving-messages-with-mqtt/\\\">https://www.ev3dev.org/docs/tutorials/sending-and-receiving-messages-with-mqtt/</a></p>\",\"docPath\":\"argo-events/gateways/core/stream/mqtt/install\",\"proj\":\"argo-events\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-events-gateways-core-stream-mqtt-install-html.json\n// module id = 604\n// module chunks = 215736491478694"],"sourceRoot":""}