{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-object-assign-readme-html-6cd980f7d1357ba697a0.js","webpack:///./.cache/json/docs-argo-ci-node-modules-object-assign-readme-html.json"],"names":["webpackJsonp","2987","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,81DAA+rCC,QAAA,4CAAAC,KAAA","file":"path---docs-argo-ci-node-modules-object-assign-readme-html-6cd980f7d1357ba697a0.js","sourcesContent":["webpackJsonp([220882282020366],{\n\n/***/ 2987:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>object-assign <a href=\\\"https://travis-ci.org/sindresorhus/object-assign\\\"><img src=\\\"https://travis-ci.org/sindresorhus/object-assign.svg?branch=master\\\" alt=\\\"Build Status\\\"></a></h1>\\n<blockquote>\\n<p>ES2015 <a href=\\\"http://www.2ality.com/2014/01/object-assign.html\\\"><code>Object.assign()</code></a> <a href=\\\"https://ponyfill.com\\\">ponyfill</a></p>\\n</blockquote>\\n<h2>Use the built-in</h2>\\n<p>Node.js 4 and up, as well as every evergreen browser (Chrome, Edge, Firefox, Opera, Safari),\\nsupport <code>Object.assign()</code> :tada:. If you target only those environments, then by all\\nmeans, use <code>Object.assign()</code> instead of this package.</p>\\n<h2>Install</h2>\\n<pre><code>$ npm install --save object-assign\\n</code></pre>\\n<h2>Usage</h2>\\n<pre><code class=\\\"language-js\\\">const objectAssign = require('object-assign');\\n\\nobjectAssign({foo: 0}, {bar: 1});\\n//=> {foo: 0, bar: 1}\\n\\n// multiple sources\\nobjectAssign({foo: 0}, {bar: 1}, {baz: 2});\\n//=> {foo: 0, bar: 1, baz: 2}\\n\\n// overwrites equal keys\\nobjectAssign({foo: 0}, {foo: 1}, {foo: 2});\\n//=> {foo: 2}\\n\\n// ignores null and undefined sources\\nobjectAssign({foo: 0}, null, {bar: 1}, undefined);\\n//=> {foo: 0, bar: 1}\\n</code></pre>\\n<h2>API</h2>\\n<h3>objectAssign(target, [source, ...])</h3>\\n<p>Assigns enumerable own properties of <code>source</code> objects to the <code>target</code> object and returns the <code>target</code> object. Additional <code>source</code> objects will overwrite previous ones.</p>\\n<h2>Resources</h2>\\n<ul>\\n<li><a href=\\\"https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign\\\">ES2015 spec - Object.assign</a></li>\\n</ul>\\n<h2>Related</h2>\\n<ul>\\n<li><a href=\\\"https://github.com/sindresorhus/deep-assign\\\">deep-assign</a> - Recursive <code>Object.assign()</code></li>\\n</ul>\\n<h2>License</h2>\\n<p>MIT © <a href=\\\"https://sindresorhus.com\\\">Sindre Sorhus</a></p>\",\"docPath\":\"argo-ci/node_modules/object-assign/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-object-assign-readme-html-6cd980f7d1357ba697a0.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>object-assign <a href=\\\"https://travis-ci.org/sindresorhus/object-assign\\\"><img src=\\\"https://travis-ci.org/sindresorhus/object-assign.svg?branch=master\\\" alt=\\\"Build Status\\\"></a></h1>\\n<blockquote>\\n<p>ES2015 <a href=\\\"http://www.2ality.com/2014/01/object-assign.html\\\"><code>Object.assign()</code></a> <a href=\\\"https://ponyfill.com\\\">ponyfill</a></p>\\n</blockquote>\\n<h2>Use the built-in</h2>\\n<p>Node.js 4 and up, as well as every evergreen browser (Chrome, Edge, Firefox, Opera, Safari),\\nsupport <code>Object.assign()</code> :tada:. If you target only those environments, then by all\\nmeans, use <code>Object.assign()</code> instead of this package.</p>\\n<h2>Install</h2>\\n<pre><code>$ npm install --save object-assign\\n</code></pre>\\n<h2>Usage</h2>\\n<pre><code class=\\\"language-js\\\">const objectAssign = require('object-assign');\\n\\nobjectAssign({foo: 0}, {bar: 1});\\n//=> {foo: 0, bar: 1}\\n\\n// multiple sources\\nobjectAssign({foo: 0}, {bar: 1}, {baz: 2});\\n//=> {foo: 0, bar: 1, baz: 2}\\n\\n// overwrites equal keys\\nobjectAssign({foo: 0}, {foo: 1}, {foo: 2});\\n//=> {foo: 2}\\n\\n// ignores null and undefined sources\\nobjectAssign({foo: 0}, null, {bar: 1}, undefined);\\n//=> {foo: 0, bar: 1}\\n</code></pre>\\n<h2>API</h2>\\n<h3>objectAssign(target, [source, ...])</h3>\\n<p>Assigns enumerable own properties of <code>source</code> objects to the <code>target</code> object and returns the <code>target</code> object. Additional <code>source</code> objects will overwrite previous ones.</p>\\n<h2>Resources</h2>\\n<ul>\\n<li><a href=\\\"https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign\\\">ES2015 spec - Object.assign</a></li>\\n</ul>\\n<h2>Related</h2>\\n<ul>\\n<li><a href=\\\"https://github.com/sindresorhus/deep-assign\\\">deep-assign</a> - Recursive <code>Object.assign()</code></li>\\n</ul>\\n<h2>License</h2>\\n<p>MIT © <a href=\\\"https://sindresorhus.com\\\">Sindre Sorhus</a></p>\",\"docPath\":\"argo-ci/node_modules/object-assign/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-object-assign-readme-html.json\n// module id = 2987\n// module chunks = 220882282020366"],"sourceRoot":""}