webpackJsonp([0xf0d854031dc1],{2874:function(e,s){e.exports={pathContext:{docHtml:'<h1>Methods</h1>\n<p><a href="https://npmjs.org/package/methods"><img src="https://img.shields.io/npm/v/methods.svg?style=flat" alt="NPM Version"></a>\n<a href="https://npmjs.org/package/methods"><img src="https://img.shields.io/npm/dm/methods.svg?style=flat" alt="NPM Downloads"></a>\n<a href="https://nodejs.org/en/download/"><img src="https://img.shields.io/node/v/methods.svg?style=flat" alt="Node.js Version"></a>\n<a href="https://travis-ci.org/jshttp/methods"><img src="https://img.shields.io/travis/jshttp/methods.svg?style=flat" alt="Build Status"></a>\n<a href="https://coveralls.io/r/jshttp/methods?branch=master"><img src="https://img.shields.io/coveralls/jshttp/methods.svg?style=flat" alt="Test Coverage"></a></p>\n<p>HTTP verbs that Node.js core\'s HTTP parser supports.</p>\n<p>This module provides an export that is just like <code>http.METHODS</code> from Node.js core,\nwith the following differences:</p>\n<ul>\n<li>All method names are lower-cased.</li>\n<li>Contains a fallback list of methods for Node.js versions that do not have a\n<code>http.METHODS</code> export (0.10 and lower).</li>\n<li>Provides the fallback list when using tools like <code>browserify</code> without pulling\nin the <code>http</code> shim module.</li>\n</ul>\n<h2>Install</h2>\n<pre><code class="language-bash">$ npm install methods\n</code></pre>\n<h2>API</h2>\n<pre><code class="language-js">var methods = require(\'methods\')\n</code></pre>\n<h3>methods</h3>\n<p>This is an array of lower-cased method names that Node.js supports. If Node.js\nprovides the <code>http.METHODS</code> export, then this is the same array lower-cased,\notherwise it is a snapshot of the verbs from Node.js 0.10.</p>\n<h2>License</h2>\n<p><a href="LICENSE">MIT</a></p>',docPath:"argo-ci/node_modules/methods/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-methods-6e59a5f8fc3f62742475.js.map