webpackJsonp([0xfe0c4b254b91],{2211:function(r,e){r.exports={pathContext:{docHtml:"<h1>create-error-class <a href=\"https://travis-ci.org/floatdrop/create-error-class\"><img src=\"https://travis-ci.org/floatdrop/create-error-class.svg?branch=master\" alt=\"Build Status\"></a></h1>\n<blockquote>\n<p>Create error class</p>\n</blockquote>\n<h2>Install</h2>\n<pre><code>$ npm install --save create-error-class\n</code></pre>\n<h2>Usage</h2>\n<pre><code class=\"language-js\">var createErrorClass = require('create-error-class');\n\nvar HTTPError = createErrorClass('HTTPError', function (props) {\n    this.message = 'Status code is ' + props.statusCode;\n});\n\nthrow new HTTPError({statusCode: 404});\n</code></pre>\n<h2>API</h2>\n<h3>createErrorClass(className, [setup])</h3>\n<p>Return constructor of Errors with <code>className</code>.</p>\n<h4>className</h4>\n<p><em>Required</em><br>\nType: <code>string</code></p>\n<p>Class name of Error Object. Should contain characters from <code>[0-9a-zA-Z_$]</code> range.</p>\n<h4>setup</h4>\n<p>Type: <code>function</code></p>\n<p>Setup function, that will be called after each Error object is created from constructor with context of Error object.</p>\n<p>By default <code>setup</code> function sets <code>this.message</code> as first argument:</p>\n<pre><code class=\"language-js\">var MyError = createErrorClass('MyError');\n\nnew MyError('Something gone wrong!').message; // => 'Something gone wrong!'\n</code></pre>\n<h2>License</h2>\n<p>MIT Â© <a href=\"http://github.com/floatdrop\">Vsevolod Strukchinsky</a></p>",docPath:"argo-ci/node_modules/create-error-class/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-create-error-class-4bf3532d13015831c434.js.map