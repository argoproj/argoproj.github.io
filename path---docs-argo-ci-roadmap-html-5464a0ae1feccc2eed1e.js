webpackJsonp([0xd40690ad4661],{526:function(i,n){i.exports={pathContext:{docHtml:'<h1>Roadmap</h1>\n<ul>\n<li>\n<p>V1.0.0 alpha2</p>\n<ul>\n<li>Support private repositories</li>\n<li>Use Github API to configure webhook</li>\n<li>Cleanup completed workflows from Kubernetes CRD</li>\n<li>Use minio ( and mysql ? ) to show historical data</li>\n</ul>\n</li>\n<li>\n<p>V1.0.0 alpha3</p>\n<ul>\n<li>Support more user friendly build pipline definition. Candidates:</li>\n<li>ksonnet to generate argo workflow</li>\n<li>generate argo workflow yaml from drone.io pipeline definition <a href="http://readme.drone.io/usage/getting-started/">http://readme.drone.io/usage/getting-started/</a>  </li>\n</ul>\n</li>\n<li>\n<p>V1.0.0</p>\n<ul>\n<li>Argo CI UI: CI/CD specific UI which allows to view build status/logs etc and manage CI specific configuration</li>\n<li>User management</li>\n</ul>\n</li>\n</ul>\n<h1>History</h1>\n<ul>\n<li>\n<p>V1.0.0 alpha1</p>\n<ul>\n<li>Implemented bare minimum which is required to automatically run CI workflow on each push/pull request</li>\n<li>GitHub webhook handler</li>\n<li>Integration with Github commit status</li>\n<li>Helm chart which packages Argo workflow, Argo UI and Argo CI service</li>\n<li>Argo CI is used to build/test Argo</li>\n</ul>\n</li>\n</ul>',docPath:"argo-ci/roadmap",proj:"argo-ci",searchIndex:null}}}});
//# sourceMappingURL=path---docs-argo-ci-roadmap-html-5464a0ae1feccc2eed1e.js.map