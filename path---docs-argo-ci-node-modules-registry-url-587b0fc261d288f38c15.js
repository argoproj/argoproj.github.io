webpackJsonp([0xc070cfea3a5a],{3099:function(e,r){e.exports={pathContext:{docHtml:'<h1>registry-url <a href="https://travis-ci.org/sindresorhus/registry-url"><img src="https://travis-ci.org/sindresorhus/registry-url.svg?branch=master" alt="Build Status"></a></h1>\n<blockquote>\n<p>Get the set npm registry URL</p>\n</blockquote>\n<p>It\'s usually <code>https://registry.npmjs.org/</code>, but <a href="https://www.npmjs.org/doc/misc/npm-config.html#registry">configurable</a>.</p>\n<p>Use this if you do anything with the npm registry as users will expect it to use their configured registry.</p>\n<h2>Install</h2>\n<pre><code>$ npm install --save registry-url\n</code></pre>\n<h2>Usage</h2>\n<pre><code class="language-ini"># .npmrc\nregistry = \'https://custom-registry.com/\'\n</code></pre>\n<pre><code class="language-js">const registryUrl = require(\'registry-url\');\n\nconsole.log(registryUrl());\n//=> \'https://custom-registry.com/\'\n</code></pre>\n<p>It can also retrieve the registry URL associated with an <a href="https://docs.npmjs.com/misc/scope">npm scope</a>.</p>\n<pre><code class="language-ini"># .npmrc\n@myco:registry = \'https://custom-registry.com/\'\n</code></pre>\n<pre><code class="language-js">const registryUrl = require(\'registry-url\');\n\nconsole.log(registryUrl(\'@myco\'));\n//=> \'https://custom-registry.com/\'\n</code></pre>\n<p>If the provided scope is not in the user\'s <code>.npmrc</code> file, then <code>registry-url</code> will check for the existence of <code>registry</code>, or if that\'s not set, fallback to the default npm registry.</p>\n<h2>License</h2>\n<p>MIT Â© <a href="http://sindresorhus.com">Sindre Sorhus</a></p>',docPath:"argo-ci/node_modules/registry-url/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-registry-url-587b0fc261d288f38c15.js.map