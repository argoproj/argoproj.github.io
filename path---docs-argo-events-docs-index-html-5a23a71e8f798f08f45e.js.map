{"version":3,"sources":["webpack:///path---docs-argo-events-docs-index-html-5a23a71e8f798f08f45e.js","webpack:///./.cache/json/docs-argo-events-docs-index-html.json"],"names":["webpackJsonp","633","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,imTAA2gRC,QAAA,yBAAAC,KAAA","file":"path---docs-argo-events-docs-index-html-5a23a71e8f798f08f45e.js","sourcesContent":["webpackJsonp([79912642027607],{\n\n/***/ 633:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1 id=\\\"argo-events\\\"><a href=\\\"#argo-events\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Argo Events</h1>\\n<h2 id=\\\"core-concepts\\\"><a href=\\\"#core-concepts\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Core Concepts</h2>\\n<p>The framework is made up of two components: </p>\\n<ol>\\n<li>\\n<p><strong><code>Gateway</code></strong> which is implemented as a Kubernetes-native Custom Resource Definition processes events from event source.</p>\\n</li>\\n<li>\\n<p><strong><code>Sensor</code></strong> which is implemented as a Kubernetes-native Custom Resource Definition defines a set of event dependencies and triggers K8s resources.</p>\\n</li>\\n</ol>\\n<h2 id=\\\"install\\\"><a href=\\\"#install\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Install</h2>\\n<ul>\\n<li>\\n<h3 id=\\\"requirements\\\"><a href=\\\"#requirements\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Requirements</h3>\\n<ul>\\n<li>Kubernetes cluster >v1.9</li>\\n<li>Installed the <a href=\\\"https://kubernetes.io/docs/tasks/tools/install-kubectl/\\\">kubectl</a> command-line tool >v1.9.0</li>\\n</ul>\\n</li>\\n<li>\\n<h3 id=\\\"helm-chart\\\"><a href=\\\"#helm-chart\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Helm Chart</h3>\\n<p>Make sure you have helm client installed and Tiller server is running. To install helm, follow <a href=\\\"https://docs.helm.sh/using_helm/\\\">https://docs.helm.sh/using_helm/</a></p>\\n<ol>\\n<li>Add <code>argoproj</code> repository</li>\\n</ol>\\n<pre><code class=\\\"language-bash\\\">helm repo add argo https://argoproj.github.io/argo-helm\\n</code></pre>\\n<ol start=\\\"2\\\">\\n<li>Install <code>argo-events</code> chart</li>\\n</ol>\\n<pre><code class=\\\"language-bash\\\">helm install argo/argo-events\\n</code></pre>\\n</li>\\n<li>\\n<h3 id=\\\"using-kubectl\\\"><a href=\\\"#using-kubectl\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Using kubectl</h3>\\n<ul>\\n<li>Deploy Argo Events SA, Roles, ConfigMap, Sensor Controller and Gateway Controller</li>\\n</ul>\\n<pre><code>kubectl create namespace argo-events\\nkubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/hack/k8s/manifests/argo-events-sa.yaml\\nkubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/hack/k8s/manifests/argo-events-cluster-roles.yaml\\nkubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/hack/k8s/manifests/sensor-crd.yaml\\nkubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/hack/k8s/manifests/gateway-crd.yaml\\nkubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/hack/k8s/manifests/sensor-controller-configmap.yaml\\nkubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/hack/k8s/manifests/sensor-controller-deployment.yaml\\nkubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/hack/k8s/manifests/gateway-controller-configmap.yaml\\nkubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/hack/k8s/manifests/gateway-controller-deployment.yaml\\n</code></pre>\\n</li>\\n</ul>\\n<p><strong>Note</strong>: If you have already deployed the argo workflow controller in another namespace\\nand the controller is namespace scoped, make sure to deploy a new controller in <code>argo-events</code> namespace.  </p>\\n<h2 id=\\\"get-started\\\"><a href=\\\"#get-started\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Get Started</h2>\\n<p>Lets deploy a webhook gateway and sensor,</p>\\n<ul>\\n<li>\\n<p>First, we need to setup event sources for gateway to listen. The event sources for any gateway are managed using K8s configmap.</p>\\n<pre><code class=\\\"language-bash\\\">kubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/examples/gateways/webhook-gateway-configmap.yaml \\n</code></pre>\\n</li>\\n<li>\\n<p>Create webhook gateway, </p>\\n<pre><code class=\\\"language-bash\\\">kubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/examples/gateways/webhook-http.yaml\\n</code></pre>\\n<p>After running above command, gateway controller will create corresponding gateway pod and a LoadBalancing service.</p>\\n</li>\\n<li>\\n<p>Create webhook sensor,</p>\\n<pre><code class=\\\"language-bash\\\">kubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/examples/sensors/webhook-http.yaml\\n</code></pre>\\n<p>Once sensor resource is created, sensor controller will create corresponding sensor pod and a ClusterIP service. </p>\\n</li>\\n<li>\\n<p>Once the gateway and sensor pods are running, trigger the webhook via a http POST request to <code>/foo</code> endpoint.\\nNote: the <code>WEBHOOK_SERVICE_URL</code> will differ based on the Kubernetes cluster.</p>\\n<pre><code>export WEBHOOK_SERVICE_URL=$(minikube service -n argo-events --url &#x3C;gateway_service_name>)\\necho $WEBHOOK_SERVICE_URL\\ncurl -d '{\\\"message\\\":\\\"this is my first webhook\\\"}' -H \\\"Content-Type: application/json\\\" -X POST $WEBHOOK_SERVICE_URL/foo\\n</code></pre>\\n<p><b>Note</b>: </p>\\n<ul>\\n<li>If you are facing an issue getting service url by running <code>minikube service -n argo-events --url &#x3C;gateway_service_name></code>, you can use <code>kubectl port-forward</code></li>\\n<li>Open another terminal window and enter <code>kubectl port-forward -n argo-events &#x3C;name_of_the_webhook_gateway_pod> 9003:&#x3C;port_on_which_gateway_server_is_running></code></li>\\n<li>You can now use <code>localhost:9003</code> to query webhook gateway</li>\\n</ul>\\n<p>Verify that the Argo workflow was run when the trigger was executed.</p>\\n<pre><code>argo list -n argo-events\\n</code></pre>\\n</li>\\n<li>\\n<p>More examples can be found at <a href=\\\"../examples\\\">examples</a></p>\\n</li>\\n</ul>\\n<h2 id=\\\"further-reading\\\"><a href=\\\"#further-reading\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Further Reading</h2>\\n<ol>\\n<li><a href=\\\"gateway-guide.html\\\">Gateway</a></li>\\n<li><a href=\\\"sensor-guide.html\\\">Sensor</a></li>\\n<li><a href=\\\"trigger-guide.html\\\">Trigger</a></li>\\n<li><a href=\\\"communication.html\\\">Communication between gateway and sensor</a></li>\\n<li><a href=\\\"controllers-guide.html\\\">Controllers</a></li>\\n<li><a href=\\\"gateways\\\">Setup Gateways</a></li>\\n</ol>\",\"docPath\":\"argo-events/docs/index\",\"proj\":\"argo-events\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-events-docs-index-html-5a23a71e8f798f08f45e.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1 id=\\\"argo-events\\\"><a href=\\\"#argo-events\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Argo Events</h1>\\n<h2 id=\\\"core-concepts\\\"><a href=\\\"#core-concepts\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Core Concepts</h2>\\n<p>The framework is made up of two components: </p>\\n<ol>\\n<li>\\n<p><strong><code>Gateway</code></strong> which is implemented as a Kubernetes-native Custom Resource Definition processes events from event source.</p>\\n</li>\\n<li>\\n<p><strong><code>Sensor</code></strong> which is implemented as a Kubernetes-native Custom Resource Definition defines a set of event dependencies and triggers K8s resources.</p>\\n</li>\\n</ol>\\n<h2 id=\\\"install\\\"><a href=\\\"#install\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Install</h2>\\n<ul>\\n<li>\\n<h3 id=\\\"requirements\\\"><a href=\\\"#requirements\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Requirements</h3>\\n<ul>\\n<li>Kubernetes cluster >v1.9</li>\\n<li>Installed the <a href=\\\"https://kubernetes.io/docs/tasks/tools/install-kubectl/\\\">kubectl</a> command-line tool >v1.9.0</li>\\n</ul>\\n</li>\\n<li>\\n<h3 id=\\\"helm-chart\\\"><a href=\\\"#helm-chart\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Helm Chart</h3>\\n<p>Make sure you have helm client installed and Tiller server is running. To install helm, follow <a href=\\\"https://docs.helm.sh/using_helm/\\\">https://docs.helm.sh/using_helm/</a></p>\\n<ol>\\n<li>Add <code>argoproj</code> repository</li>\\n</ol>\\n<pre><code class=\\\"language-bash\\\">helm repo add argo https://argoproj.github.io/argo-helm\\n</code></pre>\\n<ol start=\\\"2\\\">\\n<li>Install <code>argo-events</code> chart</li>\\n</ol>\\n<pre><code class=\\\"language-bash\\\">helm install argo/argo-events\\n</code></pre>\\n</li>\\n<li>\\n<h3 id=\\\"using-kubectl\\\"><a href=\\\"#using-kubectl\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Using kubectl</h3>\\n<ul>\\n<li>Deploy Argo Events SA, Roles, ConfigMap, Sensor Controller and Gateway Controller</li>\\n</ul>\\n<pre><code>kubectl create namespace argo-events\\nkubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/hack/k8s/manifests/argo-events-sa.yaml\\nkubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/hack/k8s/manifests/argo-events-cluster-roles.yaml\\nkubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/hack/k8s/manifests/sensor-crd.yaml\\nkubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/hack/k8s/manifests/gateway-crd.yaml\\nkubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/hack/k8s/manifests/sensor-controller-configmap.yaml\\nkubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/hack/k8s/manifests/sensor-controller-deployment.yaml\\nkubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/hack/k8s/manifests/gateway-controller-configmap.yaml\\nkubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/hack/k8s/manifests/gateway-controller-deployment.yaml\\n</code></pre>\\n</li>\\n</ul>\\n<p><strong>Note</strong>: If you have already deployed the argo workflow controller in another namespace\\nand the controller is namespace scoped, make sure to deploy a new controller in <code>argo-events</code> namespace.  </p>\\n<h2 id=\\\"get-started\\\"><a href=\\\"#get-started\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Get Started</h2>\\n<p>Lets deploy a webhook gateway and sensor,</p>\\n<ul>\\n<li>\\n<p>First, we need to setup event sources for gateway to listen. The event sources for any gateway are managed using K8s configmap.</p>\\n<pre><code class=\\\"language-bash\\\">kubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/examples/gateways/webhook-gateway-configmap.yaml \\n</code></pre>\\n</li>\\n<li>\\n<p>Create webhook gateway, </p>\\n<pre><code class=\\\"language-bash\\\">kubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/examples/gateways/webhook-http.yaml\\n</code></pre>\\n<p>After running above command, gateway controller will create corresponding gateway pod and a LoadBalancing service.</p>\\n</li>\\n<li>\\n<p>Create webhook sensor,</p>\\n<pre><code class=\\\"language-bash\\\">kubectl apply -n argo-events -f https://raw.githubusercontent.com/argoproj/argo-events/master/examples/sensors/webhook-http.yaml\\n</code></pre>\\n<p>Once sensor resource is created, sensor controller will create corresponding sensor pod and a ClusterIP service. </p>\\n</li>\\n<li>\\n<p>Once the gateway and sensor pods are running, trigger the webhook via a http POST request to <code>/foo</code> endpoint.\\nNote: the <code>WEBHOOK_SERVICE_URL</code> will differ based on the Kubernetes cluster.</p>\\n<pre><code>export WEBHOOK_SERVICE_URL=$(minikube service -n argo-events --url &#x3C;gateway_service_name>)\\necho $WEBHOOK_SERVICE_URL\\ncurl -d '{\\\"message\\\":\\\"this is my first webhook\\\"}' -H \\\"Content-Type: application/json\\\" -X POST $WEBHOOK_SERVICE_URL/foo\\n</code></pre>\\n<p><b>Note</b>: </p>\\n<ul>\\n<li>If you are facing an issue getting service url by running <code>minikube service -n argo-events --url &#x3C;gateway_service_name></code>, you can use <code>kubectl port-forward</code></li>\\n<li>Open another terminal window and enter <code>kubectl port-forward -n argo-events &#x3C;name_of_the_webhook_gateway_pod> 9003:&#x3C;port_on_which_gateway_server_is_running></code></li>\\n<li>You can now use <code>localhost:9003</code> to query webhook gateway</li>\\n</ul>\\n<p>Verify that the Argo workflow was run when the trigger was executed.</p>\\n<pre><code>argo list -n argo-events\\n</code></pre>\\n</li>\\n<li>\\n<p>More examples can be found at <a href=\\\"../examples\\\">examples</a></p>\\n</li>\\n</ul>\\n<h2 id=\\\"further-reading\\\"><a href=\\\"#further-reading\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Further Reading</h2>\\n<ol>\\n<li><a href=\\\"gateway-guide.html\\\">Gateway</a></li>\\n<li><a href=\\\"sensor-guide.html\\\">Sensor</a></li>\\n<li><a href=\\\"trigger-guide.html\\\">Trigger</a></li>\\n<li><a href=\\\"communication.html\\\">Communication between gateway and sensor</a></li>\\n<li><a href=\\\"controllers-guide.html\\\">Controllers</a></li>\\n<li><a href=\\\"gateways\\\">Setup Gateways</a></li>\\n</ol>\",\"docPath\":\"argo-events/docs/index\",\"proj\":\"argo-events\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-events-docs-index-html.json\n// module id = 633\n// module chunks = 79912642027607"],"sourceRoot":""}