{"version":3,"sources":["webpack:///path---docs-argo-cd-docs-internal-releasing-html-482c175be7cb4dee4c9c.js","webpack:///./.cache/json/docs-argo-cd-docs-internal-releasing-html.json"],"names":["webpackJsonp","516","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,0pDAAAC,QAAA,kCAAAC,KAAA","file":"path---docs-argo-cd-docs-internal-releasing-html-482c175be7cb4dee4c9c.js","sourcesContent":["webpackJsonp([176951404091317],{\n\n/***/ 516:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>ArgoCD Release Instructions</h1>\\n<ol>\\n<li>\\n<p>Tag, build, and push argo-cd-ui</p>\\n<pre><code class=\\\"language-bash\\\">cd argo-cd-ui\\ngit checkout -b release-X.Y\\ngit tag vX.Y.Z\\ngit push upstream release-X.Y --tags\\nIMAGE_NAMESPACE=argoproj IMAGE_TAG=vX.Y.Z DOCKER_PUSH=true yarn docker\\n</code></pre>\\n</li>\\n<li>\\n<p>Create release-X.Y branch (if creating initial X.Y release)</p>\\n<pre><code class=\\\"language-bash\\\">git checkout -b release-X.Y\\ngit push upstream release-X.Y\\n</code></pre>\\n</li>\\n<li>\\n<p>Update VERSION and manifests with new version</p>\\n<pre><code class=\\\"language-bash\\\">vi VERSION # ensure value is desired X.Y.Z semantic version \\nvi manifests/base/kustomization.yaml # update with new image tags\\nmake manifests\\ngit commit -a -m \\\"Update manifests to vX.Y.Z\\\"\\ngit push upstream release-X.Y\\n</code></pre>\\n</li>\\n<li>\\n<p>Tag, build, and push release to docker hub</p>\\n<pre><code class=\\\"language-bash\\\">git tag vX.Y.Z\\nmake release IMAGE_NAMESPACE=argoproj IMAGE_TAG=vX.Y.Z DOCKER_PUSH=true\\ngit push upstream vX.Y.Z\\n</code></pre>\\n</li>\\n<li>\\n<p>Update argocd brew formula</p>\\n<pre><code class=\\\"language-bash\\\">git clone https://github.com/argoproj/homebrew-tap\\ncd homebrew-tap\\nshasum -a 256 ~/go/src/github.com/argoproj/argo-cd/dist/argocd-darwin-amd64\\n# edit argocd.rb with version and checksum\\ngit commit -a -m \\\"Update argocd to vX.Y.Z\\\"\\ngit push\\n</code></pre>\\n</li>\\n<li>\\n<p>Update documentation:</p>\\n</li>\\n<li>\\n<p>Edit CHANGELOG.md with release notes</p>\\n</li>\\n<li>\\n<p>Update getting_started.md with new version</p>\\n</li>\\n<li>\\n<p>Create GitHub release from new tag and upload binaries (e.g. dist/argocd-darwin-amd64)</p>\\n</li>\\n</ol>\",\"docPath\":\"argo-cd/docs/internal/releasing\",\"proj\":\"argo-cd\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-cd-docs-internal-releasing-html-482c175be7cb4dee4c9c.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>ArgoCD Release Instructions</h1>\\n<ol>\\n<li>\\n<p>Tag, build, and push argo-cd-ui</p>\\n<pre><code class=\\\"language-bash\\\">cd argo-cd-ui\\ngit checkout -b release-X.Y\\ngit tag vX.Y.Z\\ngit push upstream release-X.Y --tags\\nIMAGE_NAMESPACE=argoproj IMAGE_TAG=vX.Y.Z DOCKER_PUSH=true yarn docker\\n</code></pre>\\n</li>\\n<li>\\n<p>Create release-X.Y branch (if creating initial X.Y release)</p>\\n<pre><code class=\\\"language-bash\\\">git checkout -b release-X.Y\\ngit push upstream release-X.Y\\n</code></pre>\\n</li>\\n<li>\\n<p>Update VERSION and manifests with new version</p>\\n<pre><code class=\\\"language-bash\\\">vi VERSION # ensure value is desired X.Y.Z semantic version \\nvi manifests/base/kustomization.yaml # update with new image tags\\nmake manifests\\ngit commit -a -m \\\"Update manifests to vX.Y.Z\\\"\\ngit push upstream release-X.Y\\n</code></pre>\\n</li>\\n<li>\\n<p>Tag, build, and push release to docker hub</p>\\n<pre><code class=\\\"language-bash\\\">git tag vX.Y.Z\\nmake release IMAGE_NAMESPACE=argoproj IMAGE_TAG=vX.Y.Z DOCKER_PUSH=true\\ngit push upstream vX.Y.Z\\n</code></pre>\\n</li>\\n<li>\\n<p>Update argocd brew formula</p>\\n<pre><code class=\\\"language-bash\\\">git clone https://github.com/argoproj/homebrew-tap\\ncd homebrew-tap\\nshasum -a 256 ~/go/src/github.com/argoproj/argo-cd/dist/argocd-darwin-amd64\\n# edit argocd.rb with version and checksum\\ngit commit -a -m \\\"Update argocd to vX.Y.Z\\\"\\ngit push\\n</code></pre>\\n</li>\\n<li>\\n<p>Update documentation:</p>\\n</li>\\n<li>\\n<p>Edit CHANGELOG.md with release notes</p>\\n</li>\\n<li>\\n<p>Update getting_started.md with new version</p>\\n</li>\\n<li>\\n<p>Create GitHub release from new tag and upload binaries (e.g. dist/argocd-darwin-amd64)</p>\\n</li>\\n</ol>\",\"docPath\":\"argo-cd/docs/internal/releasing\",\"proj\":\"argo-cd\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-cd-docs-internal-releasing-html.json\n// module id = 516\n// module chunks = 176951404091317"],"sourceRoot":""}