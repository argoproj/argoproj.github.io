webpackJsonp([0xe798b9a53fdc],{589:function(e,n){e.exports={pathContext:{docHtml:"<h1>Contributing</h1>\n<h2>Report a Bug</h2>\n<p>Open an issue. Please include descriptions of the following:</p>\n<ul>\n<li>Observations</li>\n<li>Expectations</li>\n<li>Steps to reproduce</li>\n</ul>\n<h2>Contribute a Bug Fix</h2>\n<ul>\n<li>Report the bug first</li>\n<li>Create a pull request for the fix</li>\n</ul>\n<h2>Suggest a New Feature</h2>\n<ul>\n<li>Create a new issue to start a discussion around new topic. Label the issue as <code>new-feature</code></li>\n</ul>\n<h2>Setup your DEV environment</h2>\n<p>Argo Events is native to Kubernetes so you'll need a running Kubernetes cluster. This guide includes steps for <code>Minikube</code> for local development, but if you have another cluster you can ignore the Minikube specific step 3.</p>\n<h3>Requirements</h3>\n<ul>\n<li>Golang 1.11</li>\n<li>Docker</li>\n<li>dep</li>\n</ul>\n<h3>Installation &#x26; Setup</h3>\n<h4>1. Get the project</h4>\n<pre><code>go get github.com/argoproj/argo-events\ncd $GOPATH/src/github.com/argoproj/argo-events\n</code></pre>\n<h4>2. Vendor dependencies</h4>\n<pre><code>dep ensure -vendor-only\n</code></pre>\n<h4>3. Start Minikube and point Docker Client to Minikube's Docker Daemon</h4>\n<pre><code>minikube start\neval $(minikube docker-env)\n</code></pre>\n<h4>5. Build the project</h4>\n<pre><code>make all\n</code></pre>\n<p>Follow <a href=\"README.md#install\">README</a> to install components.</p>\n<h2>Changing Types</h2>\n<p>If you're making a change to the <code>pkg/apis</code>  package, please ensure you re-run the K8 code-generator scripts found in the <code>/hack</code> folder. First, ensure you have the <code>generate-groups.sh</code> script at the path: <code>vendor/k8s.io/code-generator/</code>. Next run the following commands in order:</p>\n<pre><code>$ make codegen\n</code></pre>",docPath:"argo-events/contributing",proj:"argo-events"}}}});
//# sourceMappingURL=path---docs-argo-events-contributing-html-5dc3ea75c8ba909ceffe.js.map