webpackJsonp([0xe960822f96a8],{2155:function(n,e){n.exports={pathContext:{docHtml:'<h1>4.6.0 / 2015-07-09</h1>\n<ul>\n<li>support passing the rest of the arguments to co into the generator</li>\n</ul>\n<pre><code class="language-js">function *gen(...args) { }\nco(gen, ...args);\n</code></pre>\n<h1>4.5.0 / 2015-03-17</h1>\n<ul>\n<li>support regular functions (that return promises)</li>\n</ul>\n<h1>4.4.0 / 2015-02-14</h1>\n<ul>\n<li>refactor <code>isGeneratorFunction</code></li>\n<li>expose generator function from <code>co.wrap()</code></li>\n<li>drop support for node &#x3C; 0.12</li>\n</ul>\n<h1>4.3.0 / 2015-02-05</h1>\n<ul>\n<li>check for generator functions in a ES5-transpiler-friendly way</li>\n</ul>\n<h1>4.2.0 / 2015-01-20</h1>\n<ul>\n<li>support comparing generator functions with ES6 transpilers</li>\n</ul>\n<h1>4.1.0 / 2014-12-26</h1>\n<ul>\n<li>fix memory leak #180</li>\n</ul>\n<h1>4.0.2 / 2014-12-18</h1>\n<ul>\n<li>always return a global promise implementation</li>\n</ul>\n<h1>4.0.1 / 2014-11-30</h1>\n<ul>\n<li>friendlier ES6 module exports</li>\n</ul>\n<h1>4.0.0 / 2014-11-15</h1>\n<ul>\n<li>co now returns a promise and uses promises underneath</li>\n<li><code>co.wrap()</code> for wrapping generator functions</li>\n</ul>\n<h1>3.1.0 / 2014-06-30</h1>\n<ul>\n<li>remove <code>setImmediate()</code> shim for node 0.8. semi-backwards breaking.\nUsers are expected to shim themselves. Also returns CommonJS browser support.</li>\n<li>added key order preservation for objects. thanks @greim</li>\n<li>replace <code>q</code> with <code>bluebird</code> in benchmarks and tests</li>\n</ul>\n<h1>3.0.6 / 2014-05-03</h1>\n<ul>\n<li>add <code>setImmediate()</code> fallback to <code>process.nextTick</code></li>\n<li>remove duplicate code in toThunk</li>\n<li>update thunkify</li>\n</ul>\n<h1>3.0.5 / 2014-03-17</h1>\n<ul>\n<li>fix object/array test failure which tries to enumerate dates. Closes #98</li>\n<li>fix final callback error propagation. Closes #92</li>\n</ul>\n<h1>3.0.4 / 2014-02-17</h1>\n<ul>\n<li>fix toThunk object check regression. Closes #89</li>\n</ul>\n<h1>3.0.3 / 2014-02-08</h1>\n<ul>\n<li>refactor: arrayToThunk @AutoSponge #88</li>\n</ul>\n<h1>3.0.2 / 2014-01-01</h1>\n<ul>\n<li>fixed: nil arguments replaced with error fn</li>\n</ul>\n<h1>3.0.1 / 2013-12-19</h1>\n<ul>\n<li>fixed: callback passed as an argument to generators</li>\n</ul>\n<h1>3.0.0 / 2013-12-19</h1>\n<ul>\n<li>fixed: callback passed as an argument to generators</li>\n<li>change: <code>co(function *(){})</code> now returns a reusable thunk</li>\n<li>change: <code>this</code> must now be passed through the returned thunk, ex. <code>co(function *(){}).call(this)</code></li>\n<li>fix "generator already finished" errors</li>\n</ul>\n<h1>2.3.0 / 2013-11-12</h1>\n<ul>\n<li>add <code>yield object</code> support</li>\n</ul>\n<h1>2.2.0 / 2013-11-05</h1>\n<ul>\n<li>change: make the <code>isGenerator()</code> function more generic</li>\n</ul>\n<h1>2.1.0 / 2013-10-21</h1>\n<ul>\n<li>add passing of arguments into the generator. closes #33.</li>\n</ul>\n<h1>2.0.0 / 2013-10-14</h1>\n<ul>\n<li>remove callback in favour of thunk-only co(). Closes #30 [breaking change]</li>\n<li>remove <code>co.wrap()</code> [breaking change]</li>\n</ul>\n<h1>1.5.2 / 2013-09-02</h1>\n<ul>\n<li>fix: preserve receiver with co.wrap()</li>\n</ul>\n<h1>1.5.1 / 2013-08-11</h1>\n<ul>\n<li>remove setImmediate() usage - ~110% perf increase. Closes #14</li>\n</ul>\n<h1>0.5.0 / 2013-08-10</h1>\n<ul>\n<li>add receiver propagation support</li>\n<li>examples: update streams.js example to use <code>http.get()</code> and streams2 API</li>\n</ul>\n<h1>1.4.1 / 2013-07-01</h1>\n<ul>\n<li>fix gen.next(val) for latest v8. Closes #8</li>\n</ul>\n<h1>1.4.0 / 2013-06-21</h1>\n<ul>\n<li>add promise support to joins</li>\n<li>add <code>yield generatorFunction</code> support</li>\n<li>add <code>yield generator</code> support</li>\n<li>add nested join support</li>\n</ul>\n<h1>1.3.0 / 2013-06-10</h1>\n<ul>\n<li>add passing of arguments</li>\n</ul>\n<h1>1.2.1 / 2013-06-08</h1>\n<ul>\n<li>fix join() of zero thunks</li>\n</ul>\n<h1>1.2.0 / 2013-06-08</h1>\n<ul>\n<li>add array yielding support. great suggestion by @domenic</li>\n</ul>\n<h1>1.1.0 / 2013-06-06</h1>\n<ul>\n<li>add promise support</li>\n<li>change nextTick to setImmediate</li>\n</ul>',docPath:"argo-ci/node_modules/co/history",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-co-history-html-2329709af2da1eedab9d.js.map