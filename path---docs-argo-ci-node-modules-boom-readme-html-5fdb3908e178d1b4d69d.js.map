{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-boom-readme-html-5fdb3908e178d1b4d69d.js","webpack:///./.cache/json/docs-argo-ci-node-modules-boom-readme-html.json"],"names":["webpackJsonp","2103","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,svsBAAujsBC,QAAA,mCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-boom-readme-html-5fdb3908e178d1b4d69d.js","sourcesContent":["webpackJsonp([132266467885662],{\n\n/***/ 2103:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<p><img src=\\\"https://raw.github.com/hapijs/boom/master/images/boom.png\\\" alt=\\\"boom Logo\\\"></p>\\n<p>HTTP-friendly error objects</p>\\n<p><a href=\\\"http://travis-ci.org/hapijs/boom\\\"><img src=\\\"https://secure.travis-ci.org/hapijs/boom.png\\\" alt=\\\"Build Status\\\"></a>\\n<a href=\\\"https://www.npmjs.com/package/boom\\\"><img src=\\\"https://img.shields.io/npm/v/boom.svg\\\" alt=\\\"Current Version\\\"></a></p>\\n<p>Lead Maintainer: <a href=\\\"https://github.com/arb\\\">Adam Bretz</a></p>\\n<p><strong>boom</strong> provides a set of utilities for returning HTTP errors. Each utility returns a <code>Boom</code> error response\\nobject (instance of <code>Error</code>) which includes the following properties:</p>\\n<ul>\\n<li><code>isBoom</code> - if <code>true</code>, indicates this is a <code>Boom</code> object instance.</li>\\n<li><code>isServer</code> - convenience bool indicating status code >= 500.</li>\\n<li><code>message</code> - the error message.</li>\\n<li>\\n<p><code>output</code> - the formatted response. Can be directly manipulated after object construction to return a custom\\nerror response. Allowed root keys:</p>\\n<ul>\\n<li><code>statusCode</code> - the HTTP status code (typically 4xx or 5xx).</li>\\n<li><code>headers</code> - an object containing any HTTP headers where each key is a header name and value is the header content.</li>\\n<li>\\n<p><code>payload</code> - the formatted object used as the response payload (stringified). Can be directly manipulated but any\\nchanges will be lost\\nif <code>reformat()</code> is called. Any content allowed and by default includes the following content:</p>\\n<ul>\\n<li><code>statusCode</code> - the HTTP status code, derived from <code>error.output.statusCode</code>.</li>\\n<li><code>error</code> - the HTTP status message (e.g. 'Bad Request', 'Internal Server Error') derived from <code>statusCode</code>.</li>\\n<li><code>message</code> - the error message derived from <code>error.message</code>.</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>inherited <code>Error</code> properties.</li>\\n</ul>\\n<p>The <code>Boom</code> object also supports the following method:</p>\\n<ul>\\n<li><code>reformat()</code> - rebuilds <code>error.output</code> using the other object properties.</li>\\n</ul>\\n<h2>Overview</h2>\\n<ul>\\n<li>\\n<p>Helper methods</p>\\n<ul>\\n<li><a href=\\\"#wraperror-statuscode-message\\\"><code>wrap(error, [statusCode], [message])</code></a></li>\\n<li><a href=\\\"#createstatuscode-message-data\\\"><code>create(statusCode, [message], [data])</code></a></li>\\n</ul>\\n</li>\\n<li>\\n<p>HTTP 4xx Errors</p>\\n<ul>\\n<li>400: <a href=\\\"#boombadrequestmessage-data\\\"><code>Boom.badRequest([message], [data])</code></a></li>\\n<li>401: <a href=\\\"#boomunauthorizedmessage-scheme-attributes\\\"><code>Boom.unauthorized([message], [scheme], [attributes])</code></a></li>\\n<li>403: <a href=\\\"#boomforbiddenmessage-data\\\"><code>Boom.forbidden([message], [data])</code></a></li>\\n<li>404: <a href=\\\"#boomnotfoundmessage-data\\\"><code>Boom.notFound([message], [data])</code></a></li>\\n<li>405: <a href=\\\"#boommethodnotallowedmessage-data\\\"><code>Boom.methodNotAllowed([message], [data])</code></a></li>\\n<li>406: <a href=\\\"#boomnotacceptablemessage-data\\\"><code>Boom.notAcceptable([message], [data])</code></a></li>\\n<li>407: <a href=\\\"#boomproxyauthrequiredmessage-data\\\"><code>Boom.proxyAuthRequired([message], [data])</code></a></li>\\n<li>408: <a href=\\\"#boomclienttimeoutmessage-data\\\"><code>Boom.clientTimeout([message], [data])</code></a></li>\\n<li>409: <a href=\\\"#boomconflictmessage-data\\\"><code>Boom.conflict([message], [data])</code></a></li>\\n<li>410: <a href=\\\"#boomresourcegonemessage-data\\\"><code>Boom.resourceGone([message], [data])</code></a></li>\\n<li>411: <a href=\\\"#boomlengthrequiredmessage-data\\\"><code>Boom.lengthRequired([message], [data])</code></a></li>\\n<li>412: <a href=\\\"#boompreconditionfailedmessage-data\\\"><code>Boom.preconditionFailed([message], [data])</code></a></li>\\n<li>413: <a href=\\\"#boomentitytoolargemessage-data\\\"><code>Boom.entityTooLarge([message], [data])</code></a></li>\\n<li>414: <a href=\\\"#boomuritoolongmessage-data\\\"><code>Boom.uriTooLong([message], [data])</code></a></li>\\n<li>415: <a href=\\\"#boomunsupportedmediatypemessage-data\\\"><code>Boom.unsupportedMediaType([message], [data])</code></a></li>\\n<li>416: <a href=\\\"#boomrangenotsatisfiablemessage-data\\\"><code>Boom.rangeNotSatisfiable([message], [data])</code></a></li>\\n<li>417: <a href=\\\"#boomexpectationfailedmessage-data\\\"><code>Boom.expectationFailed([message], [data])</code></a></li>\\n<li>422: <a href=\\\"#boombaddatamessage-data\\\"><code>Boom.badData([message], [data])</code></a></li>\\n<li>428: <a href=\\\"#boompreconditionrequiredmessage-data\\\"><code>Boom.preconditionRequired([message], [data])</code></a></li>\\n<li>429: <a href=\\\"#boomtoomanyrequestsmessage-data\\\"><code>Boom.tooManyRequests([message], [data])</code></a></li>\\n</ul>\\n</li>\\n<li>\\n<p>HTTP 5xx Errors</p>\\n<ul>\\n<li>500: <a href=\\\"#boombadimplementationmessage-data\\\"><code>Boom.badImplementation([message], [data])</code></a></li>\\n<li>501: <a href=\\\"#boomnotimplementedmessage-data\\\"><code>Boom.notImplemented([message], [data])</code></a></li>\\n<li>502: <a href=\\\"#boombadgatewaymessage-data\\\"><code>Boom.badGateway([message], [data])</code></a></li>\\n<li>503: <a href=\\\"#boomservertimeoutmessage-data\\\"><code>Boom.serverTimeout([message], [data])</code></a></li>\\n<li>504: <a href=\\\"#boomgatewaytimeoutmessage-data\\\"><code>Boom.gatewayTimeout([message], [data])</code></a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"#faq\\\">FAQ</a></li>\\n</ul>\\n<h2>Helper Methods</h2>\\n<h3><code>wrap(error, [statusCode], [message])</code></h3>\\n<p>Decorates an error with the <strong>boom</strong> properties where:</p>\\n<ul>\\n<li><code>error</code> - the error object to wrap. If <code>error</code> is already a <strong>boom</strong> object, returns back the same object.</li>\\n<li><code>statusCode</code> - optional HTTP status code. Defaults to <code>500</code>.</li>\\n<li><code>message</code> - optional message string. If the error already has a message, it adds the message as a prefix.\\nDefaults to no message.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">var error = new Error('Unexpected input');\\nBoom.wrap(error, 400);\\n</code></pre>\\n<h3><code>create(statusCode, [message], [data])</code></h3>\\n<p>Generates an <code>Error</code> object with the <strong>boom</strong> decorations where:</p>\\n<ul>\\n<li><code>statusCode</code> - an HTTP error code number. Must be greater or equal 400.</li>\\n<li><code>message</code> - optional message string.</li>\\n<li><code>data</code> - additional error data set to <code>error.data</code> property.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">var error = Boom.create(400, 'Bad request', { timestamp: Date.now() });\\n</code></pre>\\n<h2>HTTP 4xx Errors</h2>\\n<h3><code>Boom.badRequest([message], [data])</code></h3>\\n<p>Returns a 400 Bad Request error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.badRequest('invalid query');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 400,\\n    \\\"error\\\": \\\"Bad Request\\\",\\n    \\\"message\\\": \\\"invalid query\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.unauthorized([message], [scheme], [attributes])</code></h3>\\n<p>Returns a 401 Unauthorized error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li>\\n<p><code>scheme</code> can be one of the following:</p>\\n<ul>\\n<li>an authentication scheme name</li>\\n<li>an array of string values. These values will be separated by ', ' and set to the 'WWW-Authenticate' header.</li>\\n</ul>\\n</li>\\n<li><code>attributes</code> - an object of values to use while setting the 'WWW-Authenticate' header. This value is only used\\nwhen <code>schema</code> is a string, otherwise it is ignored. Every key/value pair will be included in the\\n'WWW-Authenticate' in the format of 'key=\\\"value\\\"' as well as in the response payload under the <code>attributes</code> key.\\n<code>null</code> and <code>undefined</code> will be replaced with an empty string. If <code>attributes</code> is set, <code>message</code> will be used as\\nthe 'error' segment of the 'WWW-Authenticate' header. If <code>message</code> is unset, the 'error' segment of the header\\nwill not be present and <code>isMissing</code> will be true on the error object.</li>\\n</ul>\\n<p>If either <code>scheme</code> or <code>attributes</code> are set, the resultant <code>Boom</code> object will have the 'WWW-Authenticate' header set for the response.</p>\\n<pre><code class=\\\"language-js\\\">Boom.unauthorized('invalid password');\\n</code></pre>\\n<p>Generates the following response:</p>\\n<pre><code class=\\\"language-json\\\">\\\"payload\\\": {\\n    \\\"statusCode\\\": 401,\\n    \\\"error\\\": \\\"Unauthorized\\\",\\n    \\\"message\\\": \\\"invalid password\\\"\\n},\\n\\\"headers\\\" {}\\n</code></pre>\\n<pre><code class=\\\"language-js\\\">Boom.unauthorized('invalid password', 'sample');\\n</code></pre>\\n<p>Generates the following response:</p>\\n<pre><code class=\\\"language-json\\\">\\\"payload\\\": {\\n    \\\"statusCode\\\": 401,\\n    \\\"error\\\": \\\"Unauthorized\\\",\\n    \\\"message\\\": \\\"invalid password\\\",\\n    \\\"attributes\\\": {\\n        \\\"error\\\": \\\"invalid password\\\"\\n    }\\n},\\n\\\"headers\\\" {\\n  \\\"WWW-Authenticate\\\": \\\"sample error=\\\\\\\"invalid password\\\\\\\"\\\"\\n}\\n</code></pre>\\n<pre><code class=\\\"language-js\\\">Boom.unauthorized('invalid password', 'sample', { ttl: 0, cache: null, foo: 'bar' });\\n</code></pre>\\n<p>Generates the following response:</p>\\n<pre><code class=\\\"language-json\\\">\\\"payload\\\": {\\n    \\\"statusCode\\\": 401,\\n    \\\"error\\\": \\\"Unauthorized\\\",\\n    \\\"message\\\": \\\"invalid password\\\",\\n    \\\"attributes\\\": {\\n        \\\"error\\\": \\\"invalid password\\\",\\n        \\\"ttl\\\": 0,\\n        \\\"cache\\\": \\\"\\\",\\n        \\\"foo\\\": \\\"bar\\\"\\n    }\\n},\\n\\\"headers\\\" {\\n  \\\"WWW-Authenticate\\\": \\\"sample ttl=\\\\\\\"0\\\\\\\", cache=\\\\\\\"\\\\\\\", foo=\\\\\\\"bar\\\\\\\", error=\\\\\\\"invalid password\\\\\\\"\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.forbidden([message], [data])</code></h3>\\n<p>Returns a 403 Forbidden error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.forbidden('try again some time');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 403,\\n    \\\"error\\\": \\\"Forbidden\\\",\\n    \\\"message\\\": \\\"try again some time\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.notFound([message], [data])</code></h3>\\n<p>Returns a 404 Not Found error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.notFound('missing');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 404,\\n    \\\"error\\\": \\\"Not Found\\\",\\n    \\\"message\\\": \\\"missing\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.methodNotAllowed([message], [data])</code></h3>\\n<p>Returns a 405 Method Not Allowed error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.methodNotAllowed('that method is not allowed');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 405,\\n    \\\"error\\\": \\\"Method Not Allowed\\\",\\n    \\\"message\\\": \\\"that method is not allowed\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.notAcceptable([message], [data])</code></h3>\\n<p>Returns a 406 Not Acceptable error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.notAcceptable('unacceptable');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 406,\\n    \\\"error\\\": \\\"Not Acceptable\\\",\\n    \\\"message\\\": \\\"unacceptable\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.proxyAuthRequired([message], [data])</code></h3>\\n<p>Returns a 407 Proxy Authentication Required error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.proxyAuthRequired('auth missing');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 407,\\n    \\\"error\\\": \\\"Proxy Authentication Required\\\",\\n    \\\"message\\\": \\\"auth missing\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.clientTimeout([message], [data])</code></h3>\\n<p>Returns a 408 Request Time-out error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.clientTimeout('timed out');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 408,\\n    \\\"error\\\": \\\"Request Time-out\\\",\\n    \\\"message\\\": \\\"timed out\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.conflict([message], [data])</code></h3>\\n<p>Returns a 409 Conflict error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.conflict('there was a conflict');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 409,\\n    \\\"error\\\": \\\"Conflict\\\",\\n    \\\"message\\\": \\\"there was a conflict\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.resourceGone([message], [data])</code></h3>\\n<p>Returns a 410 Gone error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.resourceGone('it is gone');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 410,\\n    \\\"error\\\": \\\"Gone\\\",\\n    \\\"message\\\": \\\"it is gone\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.lengthRequired([message], [data])</code></h3>\\n<p>Returns a 411 Length Required error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.lengthRequired('length needed');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 411,\\n    \\\"error\\\": \\\"Length Required\\\",\\n    \\\"message\\\": \\\"length needed\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.preconditionFailed([message], [data])</code></h3>\\n<p>Returns a 412 Precondition Failed error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.preconditionFailed();\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 412,\\n    \\\"error\\\": \\\"Precondition Failed\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.entityTooLarge([message], [data])</code></h3>\\n<p>Returns a 413 Request Entity Too Large error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.entityTooLarge('too big');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 413,\\n    \\\"error\\\": \\\"Request Entity Too Large\\\",\\n    \\\"message\\\": \\\"too big\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.uriTooLong([message], [data])</code></h3>\\n<p>Returns a 414 Request-URI Too Large error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.uriTooLong('uri is too long');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 414,\\n    \\\"error\\\": \\\"Request-URI Too Large\\\",\\n    \\\"message\\\": \\\"uri is too long\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.unsupportedMediaType([message], [data])</code></h3>\\n<p>Returns a 415 Unsupported Media Type error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.unsupportedMediaType('that media is not supported');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 415,\\n    \\\"error\\\": \\\"Unsupported Media Type\\\",\\n    \\\"message\\\": \\\"that media is not supported\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.rangeNotSatisfiable([message], [data])</code></h3>\\n<p>Returns a 416 Requested Range Not Satisfiable error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.rangeNotSatisfiable();\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 416,\\n    \\\"error\\\": \\\"Requested Range Not Satisfiable\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.expectationFailed([message], [data])</code></h3>\\n<p>Returns a 417 Expectation Failed error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.expectationFailed('expected this to work');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 417,\\n    \\\"error\\\": \\\"Expectation Failed\\\",\\n    \\\"message\\\": \\\"expected this to work\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.badData([message], [data])</code></h3>\\n<p>Returns a 422 Unprocessable Entity error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.badData('your data is bad and you should feel bad');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 422,\\n    \\\"error\\\": \\\"Unprocessable Entity\\\",\\n    \\\"message\\\": \\\"your data is bad and you should feel bad\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.preconditionRequired([message], [data])</code></h3>\\n<p>Returns a 428 Precondition Required error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.preconditionRequired('you must supply an If-Match header');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 428,\\n    \\\"error\\\": \\\"Precondition Required\\\",\\n    \\\"message\\\": \\\"you must supply an If-Match header\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.tooManyRequests([message], [data])</code></h3>\\n<p>Returns a 429 Too Many Requests error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.tooManyRequests('you have exceeded your request limit');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 429,\\n    \\\"error\\\": \\\"Too Many Requests\\\",\\n    \\\"message\\\": \\\"you have exceeded your request limit\\\"\\n}\\n</code></pre>\\n<h2>HTTP 5xx Errors</h2>\\n<p>All 500 errors hide your message from the end user. Your message is recorded in the server log.</p>\\n<h3><code>Boom.badImplementation([message], [data])</code></h3>\\n<p>Returns a 500 Internal Server Error error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.badImplementation('terrible implementation');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 500,\\n    \\\"error\\\": \\\"Internal Server Error\\\",\\n    \\\"message\\\": \\\"An internal server error occurred\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.notImplemented([message], [data])</code></h3>\\n<p>Returns a 501 Not Implemented error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.notImplemented('method not implemented');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 501,\\n    \\\"error\\\": \\\"Not Implemented\\\",\\n    \\\"message\\\": \\\"method not implemented\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.badGateway([message], [data])</code></h3>\\n<p>Returns a 502 Bad Gateway error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.badGateway('that is a bad gateway');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 502,\\n    \\\"error\\\": \\\"Bad Gateway\\\",\\n    \\\"message\\\": \\\"that is a bad gateway\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.serverTimeout([message], [data])</code></h3>\\n<p>Returns a 503 Service Unavailable error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.serverTimeout('unavailable');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 503,\\n    \\\"error\\\": \\\"Service Unavailable\\\",\\n    \\\"message\\\": \\\"unavailable\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.gatewayTimeout([message], [data])</code></h3>\\n<p>Returns a 504 Gateway Time-out error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.gatewayTimeout();\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 504,\\n    \\\"error\\\": \\\"Gateway Time-out\\\"\\n}\\n</code></pre>\\n<h2>F.A.Q.</h2>\\n<h6>How do I include extra information in my responses? <code>output.payload</code> is missing <code>data</code>, what gives?</h6>\\n<p>There is a reason the values passed back in the response payloads are pretty locked down. It's mostly for security and to not leak any important information back to the client. This means you will need to put in a little more effort to include extra information about your custom error. Check out the <a href=\\\"https://github.com/hapijs/hapi/blob/master/API.md#error-transformation\\\">\\\"Error transformation\\\"</a> section in the hapi documentation.</p>\",\"docPath\":\"argo-ci/node_modules/boom/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-boom-readme-html-5fdb3908e178d1b4d69d.js","module.exports = {\"pathContext\":{\"docHtml\":\"<p><img src=\\\"https://raw.github.com/hapijs/boom/master/images/boom.png\\\" alt=\\\"boom Logo\\\"></p>\\n<p>HTTP-friendly error objects</p>\\n<p><a href=\\\"http://travis-ci.org/hapijs/boom\\\"><img src=\\\"https://secure.travis-ci.org/hapijs/boom.png\\\" alt=\\\"Build Status\\\"></a>\\n<a href=\\\"https://www.npmjs.com/package/boom\\\"><img src=\\\"https://img.shields.io/npm/v/boom.svg\\\" alt=\\\"Current Version\\\"></a></p>\\n<p>Lead Maintainer: <a href=\\\"https://github.com/arb\\\">Adam Bretz</a></p>\\n<p><strong>boom</strong> provides a set of utilities for returning HTTP errors. Each utility returns a <code>Boom</code> error response\\nobject (instance of <code>Error</code>) which includes the following properties:</p>\\n<ul>\\n<li><code>isBoom</code> - if <code>true</code>, indicates this is a <code>Boom</code> object instance.</li>\\n<li><code>isServer</code> - convenience bool indicating status code >= 500.</li>\\n<li><code>message</code> - the error message.</li>\\n<li>\\n<p><code>output</code> - the formatted response. Can be directly manipulated after object construction to return a custom\\nerror response. Allowed root keys:</p>\\n<ul>\\n<li><code>statusCode</code> - the HTTP status code (typically 4xx or 5xx).</li>\\n<li><code>headers</code> - an object containing any HTTP headers where each key is a header name and value is the header content.</li>\\n<li>\\n<p><code>payload</code> - the formatted object used as the response payload (stringified). Can be directly manipulated but any\\nchanges will be lost\\nif <code>reformat()</code> is called. Any content allowed and by default includes the following content:</p>\\n<ul>\\n<li><code>statusCode</code> - the HTTP status code, derived from <code>error.output.statusCode</code>.</li>\\n<li><code>error</code> - the HTTP status message (e.g. 'Bad Request', 'Internal Server Error') derived from <code>statusCode</code>.</li>\\n<li><code>message</code> - the error message derived from <code>error.message</code>.</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>inherited <code>Error</code> properties.</li>\\n</ul>\\n<p>The <code>Boom</code> object also supports the following method:</p>\\n<ul>\\n<li><code>reformat()</code> - rebuilds <code>error.output</code> using the other object properties.</li>\\n</ul>\\n<h2>Overview</h2>\\n<ul>\\n<li>\\n<p>Helper methods</p>\\n<ul>\\n<li><a href=\\\"#wraperror-statuscode-message\\\"><code>wrap(error, [statusCode], [message])</code></a></li>\\n<li><a href=\\\"#createstatuscode-message-data\\\"><code>create(statusCode, [message], [data])</code></a></li>\\n</ul>\\n</li>\\n<li>\\n<p>HTTP 4xx Errors</p>\\n<ul>\\n<li>400: <a href=\\\"#boombadrequestmessage-data\\\"><code>Boom.badRequest([message], [data])</code></a></li>\\n<li>401: <a href=\\\"#boomunauthorizedmessage-scheme-attributes\\\"><code>Boom.unauthorized([message], [scheme], [attributes])</code></a></li>\\n<li>403: <a href=\\\"#boomforbiddenmessage-data\\\"><code>Boom.forbidden([message], [data])</code></a></li>\\n<li>404: <a href=\\\"#boomnotfoundmessage-data\\\"><code>Boom.notFound([message], [data])</code></a></li>\\n<li>405: <a href=\\\"#boommethodnotallowedmessage-data\\\"><code>Boom.methodNotAllowed([message], [data])</code></a></li>\\n<li>406: <a href=\\\"#boomnotacceptablemessage-data\\\"><code>Boom.notAcceptable([message], [data])</code></a></li>\\n<li>407: <a href=\\\"#boomproxyauthrequiredmessage-data\\\"><code>Boom.proxyAuthRequired([message], [data])</code></a></li>\\n<li>408: <a href=\\\"#boomclienttimeoutmessage-data\\\"><code>Boom.clientTimeout([message], [data])</code></a></li>\\n<li>409: <a href=\\\"#boomconflictmessage-data\\\"><code>Boom.conflict([message], [data])</code></a></li>\\n<li>410: <a href=\\\"#boomresourcegonemessage-data\\\"><code>Boom.resourceGone([message], [data])</code></a></li>\\n<li>411: <a href=\\\"#boomlengthrequiredmessage-data\\\"><code>Boom.lengthRequired([message], [data])</code></a></li>\\n<li>412: <a href=\\\"#boompreconditionfailedmessage-data\\\"><code>Boom.preconditionFailed([message], [data])</code></a></li>\\n<li>413: <a href=\\\"#boomentitytoolargemessage-data\\\"><code>Boom.entityTooLarge([message], [data])</code></a></li>\\n<li>414: <a href=\\\"#boomuritoolongmessage-data\\\"><code>Boom.uriTooLong([message], [data])</code></a></li>\\n<li>415: <a href=\\\"#boomunsupportedmediatypemessage-data\\\"><code>Boom.unsupportedMediaType([message], [data])</code></a></li>\\n<li>416: <a href=\\\"#boomrangenotsatisfiablemessage-data\\\"><code>Boom.rangeNotSatisfiable([message], [data])</code></a></li>\\n<li>417: <a href=\\\"#boomexpectationfailedmessage-data\\\"><code>Boom.expectationFailed([message], [data])</code></a></li>\\n<li>422: <a href=\\\"#boombaddatamessage-data\\\"><code>Boom.badData([message], [data])</code></a></li>\\n<li>428: <a href=\\\"#boompreconditionrequiredmessage-data\\\"><code>Boom.preconditionRequired([message], [data])</code></a></li>\\n<li>429: <a href=\\\"#boomtoomanyrequestsmessage-data\\\"><code>Boom.tooManyRequests([message], [data])</code></a></li>\\n</ul>\\n</li>\\n<li>\\n<p>HTTP 5xx Errors</p>\\n<ul>\\n<li>500: <a href=\\\"#boombadimplementationmessage-data\\\"><code>Boom.badImplementation([message], [data])</code></a></li>\\n<li>501: <a href=\\\"#boomnotimplementedmessage-data\\\"><code>Boom.notImplemented([message], [data])</code></a></li>\\n<li>502: <a href=\\\"#boombadgatewaymessage-data\\\"><code>Boom.badGateway([message], [data])</code></a></li>\\n<li>503: <a href=\\\"#boomservertimeoutmessage-data\\\"><code>Boom.serverTimeout([message], [data])</code></a></li>\\n<li>504: <a href=\\\"#boomgatewaytimeoutmessage-data\\\"><code>Boom.gatewayTimeout([message], [data])</code></a></li>\\n</ul>\\n</li>\\n<li><a href=\\\"#faq\\\">FAQ</a></li>\\n</ul>\\n<h2>Helper Methods</h2>\\n<h3><code>wrap(error, [statusCode], [message])</code></h3>\\n<p>Decorates an error with the <strong>boom</strong> properties where:</p>\\n<ul>\\n<li><code>error</code> - the error object to wrap. If <code>error</code> is already a <strong>boom</strong> object, returns back the same object.</li>\\n<li><code>statusCode</code> - optional HTTP status code. Defaults to <code>500</code>.</li>\\n<li><code>message</code> - optional message string. If the error already has a message, it adds the message as a prefix.\\nDefaults to no message.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">var error = new Error('Unexpected input');\\nBoom.wrap(error, 400);\\n</code></pre>\\n<h3><code>create(statusCode, [message], [data])</code></h3>\\n<p>Generates an <code>Error</code> object with the <strong>boom</strong> decorations where:</p>\\n<ul>\\n<li><code>statusCode</code> - an HTTP error code number. Must be greater or equal 400.</li>\\n<li><code>message</code> - optional message string.</li>\\n<li><code>data</code> - additional error data set to <code>error.data</code> property.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">var error = Boom.create(400, 'Bad request', { timestamp: Date.now() });\\n</code></pre>\\n<h2>HTTP 4xx Errors</h2>\\n<h3><code>Boom.badRequest([message], [data])</code></h3>\\n<p>Returns a 400 Bad Request error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.badRequest('invalid query');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 400,\\n    \\\"error\\\": \\\"Bad Request\\\",\\n    \\\"message\\\": \\\"invalid query\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.unauthorized([message], [scheme], [attributes])</code></h3>\\n<p>Returns a 401 Unauthorized error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li>\\n<p><code>scheme</code> can be one of the following:</p>\\n<ul>\\n<li>an authentication scheme name</li>\\n<li>an array of string values. These values will be separated by ', ' and set to the 'WWW-Authenticate' header.</li>\\n</ul>\\n</li>\\n<li><code>attributes</code> - an object of values to use while setting the 'WWW-Authenticate' header. This value is only used\\nwhen <code>schema</code> is a string, otherwise it is ignored. Every key/value pair will be included in the\\n'WWW-Authenticate' in the format of 'key=\\\"value\\\"' as well as in the response payload under the <code>attributes</code> key.\\n<code>null</code> and <code>undefined</code> will be replaced with an empty string. If <code>attributes</code> is set, <code>message</code> will be used as\\nthe 'error' segment of the 'WWW-Authenticate' header. If <code>message</code> is unset, the 'error' segment of the header\\nwill not be present and <code>isMissing</code> will be true on the error object.</li>\\n</ul>\\n<p>If either <code>scheme</code> or <code>attributes</code> are set, the resultant <code>Boom</code> object will have the 'WWW-Authenticate' header set for the response.</p>\\n<pre><code class=\\\"language-js\\\">Boom.unauthorized('invalid password');\\n</code></pre>\\n<p>Generates the following response:</p>\\n<pre><code class=\\\"language-json\\\">\\\"payload\\\": {\\n    \\\"statusCode\\\": 401,\\n    \\\"error\\\": \\\"Unauthorized\\\",\\n    \\\"message\\\": \\\"invalid password\\\"\\n},\\n\\\"headers\\\" {}\\n</code></pre>\\n<pre><code class=\\\"language-js\\\">Boom.unauthorized('invalid password', 'sample');\\n</code></pre>\\n<p>Generates the following response:</p>\\n<pre><code class=\\\"language-json\\\">\\\"payload\\\": {\\n    \\\"statusCode\\\": 401,\\n    \\\"error\\\": \\\"Unauthorized\\\",\\n    \\\"message\\\": \\\"invalid password\\\",\\n    \\\"attributes\\\": {\\n        \\\"error\\\": \\\"invalid password\\\"\\n    }\\n},\\n\\\"headers\\\" {\\n  \\\"WWW-Authenticate\\\": \\\"sample error=\\\\\\\"invalid password\\\\\\\"\\\"\\n}\\n</code></pre>\\n<pre><code class=\\\"language-js\\\">Boom.unauthorized('invalid password', 'sample', { ttl: 0, cache: null, foo: 'bar' });\\n</code></pre>\\n<p>Generates the following response:</p>\\n<pre><code class=\\\"language-json\\\">\\\"payload\\\": {\\n    \\\"statusCode\\\": 401,\\n    \\\"error\\\": \\\"Unauthorized\\\",\\n    \\\"message\\\": \\\"invalid password\\\",\\n    \\\"attributes\\\": {\\n        \\\"error\\\": \\\"invalid password\\\",\\n        \\\"ttl\\\": 0,\\n        \\\"cache\\\": \\\"\\\",\\n        \\\"foo\\\": \\\"bar\\\"\\n    }\\n},\\n\\\"headers\\\" {\\n  \\\"WWW-Authenticate\\\": \\\"sample ttl=\\\\\\\"0\\\\\\\", cache=\\\\\\\"\\\\\\\", foo=\\\\\\\"bar\\\\\\\", error=\\\\\\\"invalid password\\\\\\\"\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.forbidden([message], [data])</code></h3>\\n<p>Returns a 403 Forbidden error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.forbidden('try again some time');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 403,\\n    \\\"error\\\": \\\"Forbidden\\\",\\n    \\\"message\\\": \\\"try again some time\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.notFound([message], [data])</code></h3>\\n<p>Returns a 404 Not Found error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.notFound('missing');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 404,\\n    \\\"error\\\": \\\"Not Found\\\",\\n    \\\"message\\\": \\\"missing\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.methodNotAllowed([message], [data])</code></h3>\\n<p>Returns a 405 Method Not Allowed error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.methodNotAllowed('that method is not allowed');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 405,\\n    \\\"error\\\": \\\"Method Not Allowed\\\",\\n    \\\"message\\\": \\\"that method is not allowed\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.notAcceptable([message], [data])</code></h3>\\n<p>Returns a 406 Not Acceptable error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.notAcceptable('unacceptable');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 406,\\n    \\\"error\\\": \\\"Not Acceptable\\\",\\n    \\\"message\\\": \\\"unacceptable\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.proxyAuthRequired([message], [data])</code></h3>\\n<p>Returns a 407 Proxy Authentication Required error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.proxyAuthRequired('auth missing');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 407,\\n    \\\"error\\\": \\\"Proxy Authentication Required\\\",\\n    \\\"message\\\": \\\"auth missing\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.clientTimeout([message], [data])</code></h3>\\n<p>Returns a 408 Request Time-out error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.clientTimeout('timed out');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 408,\\n    \\\"error\\\": \\\"Request Time-out\\\",\\n    \\\"message\\\": \\\"timed out\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.conflict([message], [data])</code></h3>\\n<p>Returns a 409 Conflict error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.conflict('there was a conflict');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 409,\\n    \\\"error\\\": \\\"Conflict\\\",\\n    \\\"message\\\": \\\"there was a conflict\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.resourceGone([message], [data])</code></h3>\\n<p>Returns a 410 Gone error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.resourceGone('it is gone');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 410,\\n    \\\"error\\\": \\\"Gone\\\",\\n    \\\"message\\\": \\\"it is gone\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.lengthRequired([message], [data])</code></h3>\\n<p>Returns a 411 Length Required error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.lengthRequired('length needed');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 411,\\n    \\\"error\\\": \\\"Length Required\\\",\\n    \\\"message\\\": \\\"length needed\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.preconditionFailed([message], [data])</code></h3>\\n<p>Returns a 412 Precondition Failed error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.preconditionFailed();\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 412,\\n    \\\"error\\\": \\\"Precondition Failed\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.entityTooLarge([message], [data])</code></h3>\\n<p>Returns a 413 Request Entity Too Large error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.entityTooLarge('too big');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 413,\\n    \\\"error\\\": \\\"Request Entity Too Large\\\",\\n    \\\"message\\\": \\\"too big\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.uriTooLong([message], [data])</code></h3>\\n<p>Returns a 414 Request-URI Too Large error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.uriTooLong('uri is too long');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 414,\\n    \\\"error\\\": \\\"Request-URI Too Large\\\",\\n    \\\"message\\\": \\\"uri is too long\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.unsupportedMediaType([message], [data])</code></h3>\\n<p>Returns a 415 Unsupported Media Type error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.unsupportedMediaType('that media is not supported');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 415,\\n    \\\"error\\\": \\\"Unsupported Media Type\\\",\\n    \\\"message\\\": \\\"that media is not supported\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.rangeNotSatisfiable([message], [data])</code></h3>\\n<p>Returns a 416 Requested Range Not Satisfiable error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.rangeNotSatisfiable();\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 416,\\n    \\\"error\\\": \\\"Requested Range Not Satisfiable\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.expectationFailed([message], [data])</code></h3>\\n<p>Returns a 417 Expectation Failed error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.expectationFailed('expected this to work');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 417,\\n    \\\"error\\\": \\\"Expectation Failed\\\",\\n    \\\"message\\\": \\\"expected this to work\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.badData([message], [data])</code></h3>\\n<p>Returns a 422 Unprocessable Entity error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.badData('your data is bad and you should feel bad');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 422,\\n    \\\"error\\\": \\\"Unprocessable Entity\\\",\\n    \\\"message\\\": \\\"your data is bad and you should feel bad\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.preconditionRequired([message], [data])</code></h3>\\n<p>Returns a 428 Precondition Required error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.preconditionRequired('you must supply an If-Match header');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 428,\\n    \\\"error\\\": \\\"Precondition Required\\\",\\n    \\\"message\\\": \\\"you must supply an If-Match header\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.tooManyRequests([message], [data])</code></h3>\\n<p>Returns a 429 Too Many Requests error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.tooManyRequests('you have exceeded your request limit');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 429,\\n    \\\"error\\\": \\\"Too Many Requests\\\",\\n    \\\"message\\\": \\\"you have exceeded your request limit\\\"\\n}\\n</code></pre>\\n<h2>HTTP 5xx Errors</h2>\\n<p>All 500 errors hide your message from the end user. Your message is recorded in the server log.</p>\\n<h3><code>Boom.badImplementation([message], [data])</code></h3>\\n<p>Returns a 500 Internal Server Error error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.badImplementation('terrible implementation');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 500,\\n    \\\"error\\\": \\\"Internal Server Error\\\",\\n    \\\"message\\\": \\\"An internal server error occurred\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.notImplemented([message], [data])</code></h3>\\n<p>Returns a 501 Not Implemented error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.notImplemented('method not implemented');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 501,\\n    \\\"error\\\": \\\"Not Implemented\\\",\\n    \\\"message\\\": \\\"method not implemented\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.badGateway([message], [data])</code></h3>\\n<p>Returns a 502 Bad Gateway error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.badGateway('that is a bad gateway');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 502,\\n    \\\"error\\\": \\\"Bad Gateway\\\",\\n    \\\"message\\\": \\\"that is a bad gateway\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.serverTimeout([message], [data])</code></h3>\\n<p>Returns a 503 Service Unavailable error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.serverTimeout('unavailable');\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 503,\\n    \\\"error\\\": \\\"Service Unavailable\\\",\\n    \\\"message\\\": \\\"unavailable\\\"\\n}\\n</code></pre>\\n<h3><code>Boom.gatewayTimeout([message], [data])</code></h3>\\n<p>Returns a 504 Gateway Time-out error where:</p>\\n<ul>\\n<li><code>message</code> - optional message.</li>\\n<li><code>data</code> - optional additional error data.</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">Boom.gatewayTimeout();\\n</code></pre>\\n<p>Generates the following response payload:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"statusCode\\\": 504,\\n    \\\"error\\\": \\\"Gateway Time-out\\\"\\n}\\n</code></pre>\\n<h2>F.A.Q.</h2>\\n<h6>How do I include extra information in my responses? <code>output.payload</code> is missing <code>data</code>, what gives?</h6>\\n<p>There is a reason the values passed back in the response payloads are pretty locked down. It's mostly for security and to not leak any important information back to the client. This means you will need to put in a little more effort to include extra information about your custom error. Check out the <a href=\\\"https://github.com/hapijs/hapi/blob/master/API.md#error-transformation\\\">\\\"Error transformation\\\"</a> section in the hapi documentation.</p>\",\"docPath\":\"argo-ci/node_modules/boom/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-boom-readme-html.json\n// module id = 2103\n// module chunks = 132266467885662"],"sourceRoot":""}