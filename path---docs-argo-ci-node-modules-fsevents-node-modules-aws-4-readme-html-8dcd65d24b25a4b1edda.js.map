{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-fsevents-node-modules-aws-4-readme-html-8dcd65d24b25a4b1edda.js","webpack:///./.cache/json/docs-argo-ci-node-modules-fsevents-node-modules-aws-4-readme-html.json"],"names":["webpackJsonp","2380","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,gBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,qolBAAmtjBC,QAAA,yDAAAC,KAAA","file":"path---docs-argo-ci-node-modules-fsevents-node-modules-aws-4-readme-html-8dcd65d24b25a4b1edda.js","sourcesContent":["webpackJsonp([12582623910382],{\n\n/***/ 2380:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h2>aws4</h2>\\n<p><a href=\\\"http://travis-ci.org/mhart/aws4\\\"><img src=\\\"https://secure.travis-ci.org/mhart/aws4.png?branch=master\\\" alt=\\\"Build Status\\\"></a></p>\\n<p>A small utility to sign vanilla node.js http(s) request options using Amazon's\\n<a href=\\\"http://docs.amazonwebservices.com/general/latest/gr/signature-version-4.html\\\">AWS Signature Version 4</a>.</p>\\n<p>Can also be used <a href=\\\"./browser\\\">in the browser</a>.</p>\\n<p>This signature is supported by nearly all Amazon services, including\\n<a href=\\\"http://docs.aws.amazon.com/AmazonS3/latest/API/\\\">S3</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/\\\">EC2</a>,\\n<a href=\\\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/API.html\\\">DynamoDB</a>,\\n<a href=\\\"http://docs.aws.amazon.com/kinesis/latest/APIReference/\\\">Kinesis</a>,\\n<a href=\\\"http://docs.aws.amazon.com/lambda/latest/dg/API_Reference.html\\\">Lambda</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/\\\">SQS</a>,\\n<a href=\\\"http://docs.aws.amazon.com/sns/latest/api/\\\">SNS</a>,\\n<a href=\\\"http://docs.aws.amazon.com/IAM/latest/APIReference/\\\">IAM</a>,\\n<a href=\\\"http://docs.aws.amazon.com/STS/latest/APIReference/\\\">STS</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/\\\">RDS</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/\\\">CloudWatch</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/\\\">CloudWatch Logs</a>,\\n<a href=\\\"http://docs.aws.amazon.com/codedeploy/latest/APIReference/\\\">CodeDeploy</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/\\\">CloudFront</a>,\\n<a href=\\\"http://docs.aws.amazon.com/awscloudtrail/latest/APIReference/\\\">CloudTrail</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/\\\">ElastiCache</a>,\\n<a href=\\\"http://docs.aws.amazon.com/ElasticMapReduce/latest/API/\\\">EMR</a>,\\n<a href=\\\"http://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-api.html\\\">Glacier</a>,\\n<a href=\\\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/APIReq.html\\\">CloudSearch</a>,\\n<a href=\\\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/\\\">Elastic Load Balancing</a>,\\n<a href=\\\"http://docs.aws.amazon.com/elastictranscoder/latest/developerguide/api-reference.html\\\">Elastic Transcoder</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/\\\">CloudFormation</a>,\\n<a href=\\\"http://docs.aws.amazon.com/elasticbeanstalk/latest/api/\\\">Elastic Beanstalk</a>,\\n<a href=\\\"http://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html\\\">Storage Gateway</a>,\\n<a href=\\\"http://docs.aws.amazon.com/datapipeline/latest/APIReference/\\\">Data Pipeline</a>,\\n<a href=\\\"http://docs.aws.amazon.com/directconnect/latest/APIReference/\\\">Direct Connect</a>,\\n<a href=\\\"http://docs.aws.amazon.com/redshift/latest/APIReference/\\\">Redshift</a>,\\n<a href=\\\"http://docs.aws.amazon.com/opsworks/latest/APIReference/\\\">OpsWorks</a>,\\n<a href=\\\"http://docs.aws.amazon.com/ses/latest/APIReference/\\\">SES</a>,\\n<a href=\\\"http://docs.aws.amazon.com/amazonswf/latest/apireference/\\\">SWF</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AutoScaling/latest/APIReference/\\\">AutoScaling</a>,\\n<a href=\\\"http://docs.aws.amazon.com/mobileanalytics/latest/ug/server-reference.html\\\">Mobile Analytics</a>,\\n<a href=\\\"http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/\\\">Cognito Identity</a>,\\n<a href=\\\"http://docs.aws.amazon.com/cognitosync/latest/APIReference/\\\">Cognito Sync</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AmazonECS/latest/APIReference/\\\">Container Service</a>,\\n<a href=\\\"http://docs.aws.amazon.com/appstream/latest/developerguide/appstream-api-rest.html\\\">AppStream</a>,\\n<a href=\\\"http://docs.aws.amazon.com/kms/latest/APIReference/\\\">Key Management Service</a>,\\n<a href=\\\"http://docs.aws.amazon.com/config/latest/APIReference/\\\">Config</a>,\\n<a href=\\\"http://docs.aws.amazon.com/cloudhsm/latest/dg/api-ref.html\\\">CloudHSM</a>,\\n<a href=\\\"http://docs.aws.amazon.com/Route53/latest/APIReference/requests-rest.html\\\">Route53</a> and\\n<a href=\\\"http://docs.aws.amazon.com/Route53/latest/APIReference/requests-rpc.html\\\">Route53 Domains</a>.</p>\\n<p>Indeed, the only AWS services that <em>don't</em> support v4 as of 2014-12-30 are\\n<a href=\\\"http://docs.aws.amazon.com/AWSImportExport/latest/DG/api-reference.html\\\">Import/Export</a> and\\n<a href=\\\"http://docs.aws.amazon.com/AmazonSimpleDB/latest/DeveloperGuide/SDB_API.html\\\">SimpleDB</a>\\n(they only support <a href=\\\"https://github.com/mhart/aws2\\\">AWS Signature Version 2</a>).</p>\\n<p>It also provides defaults for a number of core AWS headers and\\nrequest parameters, making it very easy to query AWS services, or\\nbuild out a fully-featured AWS library.</p>\\n<h2>Example</h2>\\n<pre><code class=\\\"language-javascript\\\">var http  = require('http'),\\n    https = require('https'),\\n    aws4  = require('aws4')\\n\\n// given an options object you could pass to http.request\\nvar opts = {host: 'sqs.us-east-1.amazonaws.com', path: '/?Action=ListQueues'}\\n\\n// alternatively (as aws4 can infer the host):\\nopts = {service: 'sqs', region: 'us-east-1', path: '/?Action=ListQueues'}\\n\\n// alternatively (as us-east-1 is default):\\nopts = {service: 'sqs', path: '/?Action=ListQueues'}\\n\\naws4.sign(opts) // assumes AWS credentials are available in process.env\\n\\nconsole.log(opts)\\n/*\\n{\\n  host: 'sqs.us-east-1.amazonaws.com',\\n  path: '/?Action=ListQueues',\\n  headers: {\\n    Host: 'sqs.us-east-1.amazonaws.com',\\n    'X-Amz-Date': '20121226T061030Z',\\n    Authorization: 'AWS4-HMAC-SHA256 Credential=ABCDEF/20121226/us-east-1/sqs/aws4_request, ...'\\n  }\\n}\\n*/\\n\\n// we can now use this to query AWS using the standard node.js http API\\nhttp.request(opts, function(res) { res.pipe(process.stdout) }).end()\\n/*\\n&#x3C;?xml version=\\\"1.0\\\"?>\\n&#x3C;ListQueuesResponse xmlns=\\\"http://queue.amazonaws.com/doc/2012-11-05/\\\">\\n...\\n*/\\n</code></pre>\\n<h2>More options</h2>\\n<pre><code class=\\\"language-javascript\\\">// you can also pass AWS credentials in explicitly (otherwise taken from process.env)\\naws4.sign(opts, {accessKeyId: '', secretAccessKey: ''})\\n\\n// can also add the signature to query strings\\naws4.sign({service: 's3', path: '/my-bucket?X-Amz-Expires=12345', signQuery: true})\\n\\n// create a utility function to pipe to stdout (with https this time)\\nfunction request(o) { https.request(o, function(res) { res.pipe(process.stdout) }).end(o.body || '') }\\n\\n// aws4 can infer the HTTP method if a body is passed in\\n// method will be POST and Content-Type: 'application/x-www-form-urlencoded; charset=utf-8'\\nrequest(aws4.sign({service: 'iam', body: 'Action=ListGroups&#x26;Version=2010-05-08'}))\\n/*\\n&#x3C;ListGroupsResponse xmlns=\\\"https://iam.amazonaws.com/doc/2010-05-08/\\\">\\n...\\n*/\\n\\n// can specify any custom option or header as per usual\\nrequest(aws4.sign({\\n  service: 'dynamodb',\\n  region: 'ap-southeast-2',\\n  method: 'POST',\\n  path: '/',\\n  headers: {\\n    'Content-Type': 'application/x-amz-json-1.0',\\n    'X-Amz-Target': 'DynamoDB_20120810.ListTables'\\n  },\\n  body: '{}'\\n}))\\n/*\\n{\\\"TableNames\\\":[]}\\n...\\n*/\\n\\n// works with all other services that support Signature Version 4\\n\\nrequest(aws4.sign({service: 's3', path: '/', signQuery: true}))\\n/*\\n&#x3C;ListAllMyBucketsResult xmlns=\\\"http://s3.amazonaws.com/doc/2006-03-01/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'ec2', path: '/?Action=DescribeRegions&#x26;Version=2014-06-15'}))\\n/*\\n&#x3C;DescribeRegionsResponse xmlns=\\\"http://ec2.amazonaws.com/doc/2014-06-15/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'sns', path: '/?Action=ListTopics&#x26;Version=2010-03-31'}))\\n/*\\n&#x3C;ListTopicsResponse xmlns=\\\"http://sns.amazonaws.com/doc/2010-03-31/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'sts', path: '/?Action=GetSessionToken&#x26;Version=2011-06-15'}))\\n/*\\n&#x3C;GetSessionTokenResponse xmlns=\\\"https://sts.amazonaws.com/doc/2011-06-15/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'cloudsearch', path: '/?Action=ListDomainNames&#x26;Version=2013-01-01'}))\\n/*\\n&#x3C;ListDomainNamesResponse xmlns=\\\"http://cloudsearch.amazonaws.com/doc/2013-01-01/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'ses', path: '/?Action=ListIdentities&#x26;Version=2010-12-01'}))\\n/*\\n&#x3C;ListIdentitiesResponse xmlns=\\\"http://ses.amazonaws.com/doc/2010-12-01/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'autoscaling', path: '/?Action=DescribeAutoScalingInstances&#x26;Version=2011-01-01'}))\\n/*\\n&#x3C;DescribeAutoScalingInstancesResponse xmlns=\\\"http://autoscaling.amazonaws.com/doc/2011-01-01/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'elasticloadbalancing', path: '/?Action=DescribeLoadBalancers&#x26;Version=2012-06-01'}))\\n/*\\n&#x3C;DescribeLoadBalancersResponse xmlns=\\\"http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'cloudformation', path: '/?Action=ListStacks&#x26;Version=2010-05-15'}))\\n/*\\n&#x3C;ListStacksResponse xmlns=\\\"http://cloudformation.amazonaws.com/doc/2010-05-15/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'elasticbeanstalk', path: '/?Action=ListAvailableSolutionStacks&#x26;Version=2010-12-01'}))\\n/*\\n&#x3C;ListAvailableSolutionStacksResponse xmlns=\\\"http://elasticbeanstalk.amazonaws.com/docs/2010-12-01/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'rds', path: '/?Action=DescribeDBInstances&#x26;Version=2012-09-17'}))\\n/*\\n&#x3C;DescribeDBInstancesResponse xmlns=\\\"http://rds.amazonaws.com/doc/2012-09-17/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'monitoring', path: '/?Action=ListMetrics&#x26;Version=2010-08-01'}))\\n/*\\n&#x3C;ListMetricsResponse xmlns=\\\"http://monitoring.amazonaws.com/doc/2010-08-01/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'redshift', path: '/?Action=DescribeClusters&#x26;Version=2012-12-01'}))\\n/*\\n&#x3C;DescribeClustersResponse xmlns=\\\"http://redshift.amazonaws.com/doc/2012-12-01/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'cloudfront', path: '/2014-05-31/distribution'}))\\n/*\\n&#x3C;DistributionList xmlns=\\\"http://cloudfront.amazonaws.com/doc/2014-05-31/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'elasticache', path: '/?Action=DescribeCacheClusters&#x26;Version=2014-07-15'}))\\n/*\\n&#x3C;DescribeCacheClustersResponse xmlns=\\\"http://elasticache.amazonaws.com/doc/2014-07-15/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'elasticmapreduce', path: '/?Action=DescribeJobFlows&#x26;Version=2009-03-31'}))\\n/*\\n&#x3C;DescribeJobFlowsResponse xmlns=\\\"http://elasticmapreduce.amazonaws.com/doc/2009-03-31\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'route53', path: '/2013-04-01/hostedzone'}))\\n/*\\n&#x3C;ListHostedZonesResponse xmlns=\\\"https://route53.amazonaws.com/doc/2013-04-01/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'appstream', path: '/applications'}))\\n/*\\n{\\\"_links\\\":{\\\"curie\\\":[{\\\"href\\\":\\\"http://docs.aws.amazon.com/appstream/latest/...\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'cognito-sync', path: '/identitypools'}))\\n/*\\n{\\\"Count\\\":0,\\\"IdentityPoolUsages\\\":[],\\\"MaxResults\\\":16,\\\"NextToken\\\":null}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'elastictranscoder', path: '/2012-09-25/pipelines'}))\\n/*\\n{\\\"NextPageToken\\\":null,\\\"Pipelines\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'lambda', path: '/2014-11-13/functions/'}))\\n/*\\n{\\\"Functions\\\":[],\\\"NextMarker\\\":null}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'ecs', path: '/?Action=ListClusters&#x26;Version=2014-11-13'}))\\n/*\\n&#x3C;ListClustersResponse xmlns=\\\"http://ecs.amazonaws.com/doc/2014-11-13/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'glacier', path: '/-/vaults', headers: {'X-Amz-Glacier-Version': '2012-06-01'}}))\\n/*\\n{\\\"Marker\\\":null,\\\"VaultList\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'storagegateway', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'StorageGateway_20120630.ListGateways'\\n}}))\\n/*\\n{\\\"Gateways\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'datapipeline', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'DataPipeline.ListPipelines'\\n}}))\\n/*\\n{\\\"hasMoreResults\\\":false,\\\"pipelineIdList\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'opsworks', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'OpsWorks_20130218.DescribeStacks'\\n}}))\\n/*\\n{\\\"Stacks\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'route53domains', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'Route53Domains_v20140515.ListDomains'\\n}}))\\n/*\\n{\\\"Domains\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'kinesis', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'Kinesis_20131202.ListStreams'\\n}}))\\n/*\\n{\\\"HasMoreStreams\\\":false,\\\"StreamNames\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'cloudtrail', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'CloudTrail_20131101.DescribeTrails'\\n}}))\\n/*\\n{\\\"trailList\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'logs', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'Logs_20140328.DescribeLogGroups'\\n}}))\\n/*\\n{\\\"logGroups\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'codedeploy', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'CodeDeploy_20141006.ListApplications'\\n}}))\\n/*\\n{\\\"applications\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'directconnect', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'OvertureService.DescribeConnections'\\n}}))\\n/*\\n{\\\"connections\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'kms', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'TrentService.ListKeys'\\n}}))\\n/*\\n{\\\"Keys\\\":[],\\\"Truncated\\\":false}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'config', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'StarlingDoveService.DescribeDeliveryChannels'\\n}}))\\n/*\\n{\\\"DeliveryChannels\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'cloudhsm', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'CloudHsmFrontendService.ListAvailableZones'\\n}}))\\n/*\\n{\\\"AZList\\\":[\\\"us-east-1a\\\",\\\"us-east-1b\\\",\\\"us-east-1c\\\"]}\\n...\\n*/\\n\\nrequest(aws4.sign({\\n  service: 'swf',\\n  body: '{\\\"registrationStatus\\\":\\\"REGISTERED\\\"}',\\n  headers: {\\n    'Content-Type': 'application/x-amz-json-1.0',\\n    'X-Amz-Target': 'SimpleWorkflowService.ListDomains'\\n  }\\n}))\\n/*\\n{\\\"domainInfos\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({\\n  service: 'cognito-identity',\\n  body: '{\\\"MaxResults\\\": 1}',\\n  headers: {\\n    'Content-Type': 'application/x-amz-json-1.1',\\n    'X-Amz-Target': 'AWSCognitoIdentityService.ListIdentityPools'\\n  }\\n}))\\n/*\\n{\\\"IdentityPools\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({\\n  service: 'mobileanalytics',\\n  path: '/2014-06-05/events',\\n  body: JSON.stringify({events:[{\\n    eventType: 'a',\\n    timestamp: new Date().toISOString(),\\n    session: {},\\n  }]}),\\n  headers: {\\n    'Content-Type': 'application/json',\\n    'X-Amz-Client-Context': JSON.stringify({\\n      client: {client_id: 'a', app_title: 'a'},\\n      custom: {},\\n      env: {platform: 'a'},\\n      services: {},\\n    }),\\n  }\\n}))\\n/*\\n(HTTP 202, empty response)\\n*/\\n\\n// Generate CodeCommit Git access password\\nvar signer = new aws4.RequestSigner({\\n  service: 'codecommit',\\n  host: 'git-codecommit.us-east-1.amazonaws.com',\\n  method: 'GIT',\\n  path: '/v1/repos/MyAwesomeRepo',\\n})\\nvar password = signer.getDateTime() + 'Z' + signer.signature()\\n</code></pre>\\n<h2>API</h2>\\n<h3>aws4.sign(requestOptions, [credentials])</h3>\\n<p>This calculates and populates the <code>Authorization</code> header of\\n<code>requestOptions</code>, and any other necessary AWS headers and/or request\\noptions. Returns <code>requestOptions</code> as a convenience for chaining.</p>\\n<p><code>requestOptions</code> is an object holding the same options that the node.js\\n<a href=\\\"http://nodejs.org/docs/latest/api/http.html#http_http_request_options_callback\\\">http.request</a>\\nfunction takes.</p>\\n<p>The following properties of <code>requestOptions</code> are used in the signing or\\npopulated if they don't already exist:</p>\\n<ul>\\n<li><code>hostname</code> or <code>host</code> (will be determined from <code>service</code> and <code>region</code> if not given)</li>\\n<li><code>method</code> (will use <code>'GET'</code> if not given or <code>'POST'</code> if there is a <code>body</code>)</li>\\n<li><code>path</code> (will use <code>'/'</code> if not given)</li>\\n<li><code>body</code> (will use <code>''</code> if not given)</li>\\n<li><code>service</code> (will be calculated from <code>hostname</code> or <code>host</code> if not given)</li>\\n<li><code>region</code> (will be calculated from <code>hostname</code> or <code>host</code> or use <code>'us-east-1'</code> if not given)</li>\\n<li><code>headers['Host']</code> (will use <code>hostname</code> or <code>host</code> or be calculated if not given)</li>\\n<li><code>headers['Content-Type']</code> (will use <code>'application/x-www-form-urlencoded; charset=utf-8'</code>\\nif not given and there is a <code>body</code>)</li>\\n<li><code>headers['Date']</code> (used to calculate the signature date if given, otherwise <code>new Date</code> is used)</li>\\n</ul>\\n<p>Your AWS credentials (which can be found in your\\n<a href=\\\"https://portal.aws.amazon.com/gp/aws/securityCredentials\\\">AWS console</a>)\\ncan be specified in one of two ways:</p>\\n<ul>\\n<li>As the second argument, like this:</li>\\n</ul>\\n<pre><code class=\\\"language-javascript\\\">aws4.sign(requestOptions, {\\n  secretAccessKey: \\\"&#x3C;your-secret-access-key>\\\",\\n  accessKeyId: \\\"&#x3C;your-access-key-id>\\\",\\n  sessionToken: \\\"&#x3C;your-session-token>\\\"\\n})\\n</code></pre>\\n<ul>\\n<li>From <code>process.env</code>, such as this:</li>\\n</ul>\\n<pre><code>export AWS_SECRET_ACCESS_KEY=\\\"&#x3C;your-secret-access-key>\\\"\\nexport AWS_ACCESS_KEY_ID=\\\"&#x3C;your-access-key-id>\\\"\\nexport AWS_SESSION_TOKEN=\\\"&#x3C;your-session-token>\\\"\\n</code></pre>\\n<p>(will also use <code>AWS_ACCESS_KEY</code> and <code>AWS_SECRET_KEY</code> if available)</p>\\n<p>The <code>sessionToken</code> property and <code>AWS_SESSION_TOKEN</code> environment variable are optional for signing\\nwith <a href=\\\"http://docs.aws.amazon.com/STS/latest/UsingSTS/using-temp-creds.html\\\">IAM STS temporary credentials</a>.</p>\\n<h2>Installation</h2>\\n<p>With <a href=\\\"http://npmjs.org/\\\">npm</a> do:</p>\\n<pre><code>npm install aws4\\n</code></pre>\\n<p>Can also be used <a href=\\\"./browser\\\">in the browser</a>.</p>\\n<h2>Thanks</h2>\\n<p>Thanks to <a href=\\\"https://github.com/jed\\\">@jed</a> for his\\n<a href=\\\"https://github.com/jed/dynamo-client\\\">dynamo-client</a> lib where I first\\ncommitted and subsequently extracted this code.</p>\\n<p>Also thanks to the\\n<a href=\\\"https://github.com/aws/aws-sdk-js\\\">official node.js AWS SDK</a> for giving\\nme a start on implementing the v4 signature.</p>\",\"docPath\":\"argo-ci/node_modules/fsevents/node_modules/aws4/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-fsevents-node-modules-aws-4-readme-html-8dcd65d24b25a4b1edda.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h2>aws4</h2>\\n<p><a href=\\\"http://travis-ci.org/mhart/aws4\\\"><img src=\\\"https://secure.travis-ci.org/mhart/aws4.png?branch=master\\\" alt=\\\"Build Status\\\"></a></p>\\n<p>A small utility to sign vanilla node.js http(s) request options using Amazon's\\n<a href=\\\"http://docs.amazonwebservices.com/general/latest/gr/signature-version-4.html\\\">AWS Signature Version 4</a>.</p>\\n<p>Can also be used <a href=\\\"./browser\\\">in the browser</a>.</p>\\n<p>This signature is supported by nearly all Amazon services, including\\n<a href=\\\"http://docs.aws.amazon.com/AmazonS3/latest/API/\\\">S3</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/\\\">EC2</a>,\\n<a href=\\\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/API.html\\\">DynamoDB</a>,\\n<a href=\\\"http://docs.aws.amazon.com/kinesis/latest/APIReference/\\\">Kinesis</a>,\\n<a href=\\\"http://docs.aws.amazon.com/lambda/latest/dg/API_Reference.html\\\">Lambda</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/\\\">SQS</a>,\\n<a href=\\\"http://docs.aws.amazon.com/sns/latest/api/\\\">SNS</a>,\\n<a href=\\\"http://docs.aws.amazon.com/IAM/latest/APIReference/\\\">IAM</a>,\\n<a href=\\\"http://docs.aws.amazon.com/STS/latest/APIReference/\\\">STS</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/\\\">RDS</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/\\\">CloudWatch</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/\\\">CloudWatch Logs</a>,\\n<a href=\\\"http://docs.aws.amazon.com/codedeploy/latest/APIReference/\\\">CodeDeploy</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/\\\">CloudFront</a>,\\n<a href=\\\"http://docs.aws.amazon.com/awscloudtrail/latest/APIReference/\\\">CloudTrail</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/\\\">ElastiCache</a>,\\n<a href=\\\"http://docs.aws.amazon.com/ElasticMapReduce/latest/API/\\\">EMR</a>,\\n<a href=\\\"http://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-api.html\\\">Glacier</a>,\\n<a href=\\\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/APIReq.html\\\">CloudSearch</a>,\\n<a href=\\\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/\\\">Elastic Load Balancing</a>,\\n<a href=\\\"http://docs.aws.amazon.com/elastictranscoder/latest/developerguide/api-reference.html\\\">Elastic Transcoder</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/\\\">CloudFormation</a>,\\n<a href=\\\"http://docs.aws.amazon.com/elasticbeanstalk/latest/api/\\\">Elastic Beanstalk</a>,\\n<a href=\\\"http://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html\\\">Storage Gateway</a>,\\n<a href=\\\"http://docs.aws.amazon.com/datapipeline/latest/APIReference/\\\">Data Pipeline</a>,\\n<a href=\\\"http://docs.aws.amazon.com/directconnect/latest/APIReference/\\\">Direct Connect</a>,\\n<a href=\\\"http://docs.aws.amazon.com/redshift/latest/APIReference/\\\">Redshift</a>,\\n<a href=\\\"http://docs.aws.amazon.com/opsworks/latest/APIReference/\\\">OpsWorks</a>,\\n<a href=\\\"http://docs.aws.amazon.com/ses/latest/APIReference/\\\">SES</a>,\\n<a href=\\\"http://docs.aws.amazon.com/amazonswf/latest/apireference/\\\">SWF</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AutoScaling/latest/APIReference/\\\">AutoScaling</a>,\\n<a href=\\\"http://docs.aws.amazon.com/mobileanalytics/latest/ug/server-reference.html\\\">Mobile Analytics</a>,\\n<a href=\\\"http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/\\\">Cognito Identity</a>,\\n<a href=\\\"http://docs.aws.amazon.com/cognitosync/latest/APIReference/\\\">Cognito Sync</a>,\\n<a href=\\\"http://docs.aws.amazon.com/AmazonECS/latest/APIReference/\\\">Container Service</a>,\\n<a href=\\\"http://docs.aws.amazon.com/appstream/latest/developerguide/appstream-api-rest.html\\\">AppStream</a>,\\n<a href=\\\"http://docs.aws.amazon.com/kms/latest/APIReference/\\\">Key Management Service</a>,\\n<a href=\\\"http://docs.aws.amazon.com/config/latest/APIReference/\\\">Config</a>,\\n<a href=\\\"http://docs.aws.amazon.com/cloudhsm/latest/dg/api-ref.html\\\">CloudHSM</a>,\\n<a href=\\\"http://docs.aws.amazon.com/Route53/latest/APIReference/requests-rest.html\\\">Route53</a> and\\n<a href=\\\"http://docs.aws.amazon.com/Route53/latest/APIReference/requests-rpc.html\\\">Route53 Domains</a>.</p>\\n<p>Indeed, the only AWS services that <em>don't</em> support v4 as of 2014-12-30 are\\n<a href=\\\"http://docs.aws.amazon.com/AWSImportExport/latest/DG/api-reference.html\\\">Import/Export</a> and\\n<a href=\\\"http://docs.aws.amazon.com/AmazonSimpleDB/latest/DeveloperGuide/SDB_API.html\\\">SimpleDB</a>\\n(they only support <a href=\\\"https://github.com/mhart/aws2\\\">AWS Signature Version 2</a>).</p>\\n<p>It also provides defaults for a number of core AWS headers and\\nrequest parameters, making it very easy to query AWS services, or\\nbuild out a fully-featured AWS library.</p>\\n<h2>Example</h2>\\n<pre><code class=\\\"language-javascript\\\">var http  = require('http'),\\n    https = require('https'),\\n    aws4  = require('aws4')\\n\\n// given an options object you could pass to http.request\\nvar opts = {host: 'sqs.us-east-1.amazonaws.com', path: '/?Action=ListQueues'}\\n\\n// alternatively (as aws4 can infer the host):\\nopts = {service: 'sqs', region: 'us-east-1', path: '/?Action=ListQueues'}\\n\\n// alternatively (as us-east-1 is default):\\nopts = {service: 'sqs', path: '/?Action=ListQueues'}\\n\\naws4.sign(opts) // assumes AWS credentials are available in process.env\\n\\nconsole.log(opts)\\n/*\\n{\\n  host: 'sqs.us-east-1.amazonaws.com',\\n  path: '/?Action=ListQueues',\\n  headers: {\\n    Host: 'sqs.us-east-1.amazonaws.com',\\n    'X-Amz-Date': '20121226T061030Z',\\n    Authorization: 'AWS4-HMAC-SHA256 Credential=ABCDEF/20121226/us-east-1/sqs/aws4_request, ...'\\n  }\\n}\\n*/\\n\\n// we can now use this to query AWS using the standard node.js http API\\nhttp.request(opts, function(res) { res.pipe(process.stdout) }).end()\\n/*\\n&#x3C;?xml version=\\\"1.0\\\"?>\\n&#x3C;ListQueuesResponse xmlns=\\\"http://queue.amazonaws.com/doc/2012-11-05/\\\">\\n...\\n*/\\n</code></pre>\\n<h2>More options</h2>\\n<pre><code class=\\\"language-javascript\\\">// you can also pass AWS credentials in explicitly (otherwise taken from process.env)\\naws4.sign(opts, {accessKeyId: '', secretAccessKey: ''})\\n\\n// can also add the signature to query strings\\naws4.sign({service: 's3', path: '/my-bucket?X-Amz-Expires=12345', signQuery: true})\\n\\n// create a utility function to pipe to stdout (with https this time)\\nfunction request(o) { https.request(o, function(res) { res.pipe(process.stdout) }).end(o.body || '') }\\n\\n// aws4 can infer the HTTP method if a body is passed in\\n// method will be POST and Content-Type: 'application/x-www-form-urlencoded; charset=utf-8'\\nrequest(aws4.sign({service: 'iam', body: 'Action=ListGroups&#x26;Version=2010-05-08'}))\\n/*\\n&#x3C;ListGroupsResponse xmlns=\\\"https://iam.amazonaws.com/doc/2010-05-08/\\\">\\n...\\n*/\\n\\n// can specify any custom option or header as per usual\\nrequest(aws4.sign({\\n  service: 'dynamodb',\\n  region: 'ap-southeast-2',\\n  method: 'POST',\\n  path: '/',\\n  headers: {\\n    'Content-Type': 'application/x-amz-json-1.0',\\n    'X-Amz-Target': 'DynamoDB_20120810.ListTables'\\n  },\\n  body: '{}'\\n}))\\n/*\\n{\\\"TableNames\\\":[]}\\n...\\n*/\\n\\n// works with all other services that support Signature Version 4\\n\\nrequest(aws4.sign({service: 's3', path: '/', signQuery: true}))\\n/*\\n&#x3C;ListAllMyBucketsResult xmlns=\\\"http://s3.amazonaws.com/doc/2006-03-01/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'ec2', path: '/?Action=DescribeRegions&#x26;Version=2014-06-15'}))\\n/*\\n&#x3C;DescribeRegionsResponse xmlns=\\\"http://ec2.amazonaws.com/doc/2014-06-15/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'sns', path: '/?Action=ListTopics&#x26;Version=2010-03-31'}))\\n/*\\n&#x3C;ListTopicsResponse xmlns=\\\"http://sns.amazonaws.com/doc/2010-03-31/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'sts', path: '/?Action=GetSessionToken&#x26;Version=2011-06-15'}))\\n/*\\n&#x3C;GetSessionTokenResponse xmlns=\\\"https://sts.amazonaws.com/doc/2011-06-15/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'cloudsearch', path: '/?Action=ListDomainNames&#x26;Version=2013-01-01'}))\\n/*\\n&#x3C;ListDomainNamesResponse xmlns=\\\"http://cloudsearch.amazonaws.com/doc/2013-01-01/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'ses', path: '/?Action=ListIdentities&#x26;Version=2010-12-01'}))\\n/*\\n&#x3C;ListIdentitiesResponse xmlns=\\\"http://ses.amazonaws.com/doc/2010-12-01/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'autoscaling', path: '/?Action=DescribeAutoScalingInstances&#x26;Version=2011-01-01'}))\\n/*\\n&#x3C;DescribeAutoScalingInstancesResponse xmlns=\\\"http://autoscaling.amazonaws.com/doc/2011-01-01/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'elasticloadbalancing', path: '/?Action=DescribeLoadBalancers&#x26;Version=2012-06-01'}))\\n/*\\n&#x3C;DescribeLoadBalancersResponse xmlns=\\\"http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'cloudformation', path: '/?Action=ListStacks&#x26;Version=2010-05-15'}))\\n/*\\n&#x3C;ListStacksResponse xmlns=\\\"http://cloudformation.amazonaws.com/doc/2010-05-15/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'elasticbeanstalk', path: '/?Action=ListAvailableSolutionStacks&#x26;Version=2010-12-01'}))\\n/*\\n&#x3C;ListAvailableSolutionStacksResponse xmlns=\\\"http://elasticbeanstalk.amazonaws.com/docs/2010-12-01/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'rds', path: '/?Action=DescribeDBInstances&#x26;Version=2012-09-17'}))\\n/*\\n&#x3C;DescribeDBInstancesResponse xmlns=\\\"http://rds.amazonaws.com/doc/2012-09-17/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'monitoring', path: '/?Action=ListMetrics&#x26;Version=2010-08-01'}))\\n/*\\n&#x3C;ListMetricsResponse xmlns=\\\"http://monitoring.amazonaws.com/doc/2010-08-01/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'redshift', path: '/?Action=DescribeClusters&#x26;Version=2012-12-01'}))\\n/*\\n&#x3C;DescribeClustersResponse xmlns=\\\"http://redshift.amazonaws.com/doc/2012-12-01/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'cloudfront', path: '/2014-05-31/distribution'}))\\n/*\\n&#x3C;DistributionList xmlns=\\\"http://cloudfront.amazonaws.com/doc/2014-05-31/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'elasticache', path: '/?Action=DescribeCacheClusters&#x26;Version=2014-07-15'}))\\n/*\\n&#x3C;DescribeCacheClustersResponse xmlns=\\\"http://elasticache.amazonaws.com/doc/2014-07-15/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'elasticmapreduce', path: '/?Action=DescribeJobFlows&#x26;Version=2009-03-31'}))\\n/*\\n&#x3C;DescribeJobFlowsResponse xmlns=\\\"http://elasticmapreduce.amazonaws.com/doc/2009-03-31\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'route53', path: '/2013-04-01/hostedzone'}))\\n/*\\n&#x3C;ListHostedZonesResponse xmlns=\\\"https://route53.amazonaws.com/doc/2013-04-01/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'appstream', path: '/applications'}))\\n/*\\n{\\\"_links\\\":{\\\"curie\\\":[{\\\"href\\\":\\\"http://docs.aws.amazon.com/appstream/latest/...\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'cognito-sync', path: '/identitypools'}))\\n/*\\n{\\\"Count\\\":0,\\\"IdentityPoolUsages\\\":[],\\\"MaxResults\\\":16,\\\"NextToken\\\":null}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'elastictranscoder', path: '/2012-09-25/pipelines'}))\\n/*\\n{\\\"NextPageToken\\\":null,\\\"Pipelines\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'lambda', path: '/2014-11-13/functions/'}))\\n/*\\n{\\\"Functions\\\":[],\\\"NextMarker\\\":null}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'ecs', path: '/?Action=ListClusters&#x26;Version=2014-11-13'}))\\n/*\\n&#x3C;ListClustersResponse xmlns=\\\"http://ecs.amazonaws.com/doc/2014-11-13/\\\">\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'glacier', path: '/-/vaults', headers: {'X-Amz-Glacier-Version': '2012-06-01'}}))\\n/*\\n{\\\"Marker\\\":null,\\\"VaultList\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'storagegateway', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'StorageGateway_20120630.ListGateways'\\n}}))\\n/*\\n{\\\"Gateways\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'datapipeline', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'DataPipeline.ListPipelines'\\n}}))\\n/*\\n{\\\"hasMoreResults\\\":false,\\\"pipelineIdList\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'opsworks', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'OpsWorks_20130218.DescribeStacks'\\n}}))\\n/*\\n{\\\"Stacks\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'route53domains', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'Route53Domains_v20140515.ListDomains'\\n}}))\\n/*\\n{\\\"Domains\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'kinesis', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'Kinesis_20131202.ListStreams'\\n}}))\\n/*\\n{\\\"HasMoreStreams\\\":false,\\\"StreamNames\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'cloudtrail', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'CloudTrail_20131101.DescribeTrails'\\n}}))\\n/*\\n{\\\"trailList\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'logs', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'Logs_20140328.DescribeLogGroups'\\n}}))\\n/*\\n{\\\"logGroups\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'codedeploy', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'CodeDeploy_20141006.ListApplications'\\n}}))\\n/*\\n{\\\"applications\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'directconnect', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'OvertureService.DescribeConnections'\\n}}))\\n/*\\n{\\\"connections\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'kms', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'TrentService.ListKeys'\\n}}))\\n/*\\n{\\\"Keys\\\":[],\\\"Truncated\\\":false}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'config', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'StarlingDoveService.DescribeDeliveryChannels'\\n}}))\\n/*\\n{\\\"DeliveryChannels\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({service: 'cloudhsm', body: '{}', headers: {\\n  'Content-Type': 'application/x-amz-json-1.1',\\n  'X-Amz-Target': 'CloudHsmFrontendService.ListAvailableZones'\\n}}))\\n/*\\n{\\\"AZList\\\":[\\\"us-east-1a\\\",\\\"us-east-1b\\\",\\\"us-east-1c\\\"]}\\n...\\n*/\\n\\nrequest(aws4.sign({\\n  service: 'swf',\\n  body: '{\\\"registrationStatus\\\":\\\"REGISTERED\\\"}',\\n  headers: {\\n    'Content-Type': 'application/x-amz-json-1.0',\\n    'X-Amz-Target': 'SimpleWorkflowService.ListDomains'\\n  }\\n}))\\n/*\\n{\\\"domainInfos\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({\\n  service: 'cognito-identity',\\n  body: '{\\\"MaxResults\\\": 1}',\\n  headers: {\\n    'Content-Type': 'application/x-amz-json-1.1',\\n    'X-Amz-Target': 'AWSCognitoIdentityService.ListIdentityPools'\\n  }\\n}))\\n/*\\n{\\\"IdentityPools\\\":[]}\\n...\\n*/\\n\\nrequest(aws4.sign({\\n  service: 'mobileanalytics',\\n  path: '/2014-06-05/events',\\n  body: JSON.stringify({events:[{\\n    eventType: 'a',\\n    timestamp: new Date().toISOString(),\\n    session: {},\\n  }]}),\\n  headers: {\\n    'Content-Type': 'application/json',\\n    'X-Amz-Client-Context': JSON.stringify({\\n      client: {client_id: 'a', app_title: 'a'},\\n      custom: {},\\n      env: {platform: 'a'},\\n      services: {},\\n    }),\\n  }\\n}))\\n/*\\n(HTTP 202, empty response)\\n*/\\n\\n// Generate CodeCommit Git access password\\nvar signer = new aws4.RequestSigner({\\n  service: 'codecommit',\\n  host: 'git-codecommit.us-east-1.amazonaws.com',\\n  method: 'GIT',\\n  path: '/v1/repos/MyAwesomeRepo',\\n})\\nvar password = signer.getDateTime() + 'Z' + signer.signature()\\n</code></pre>\\n<h2>API</h2>\\n<h3>aws4.sign(requestOptions, [credentials])</h3>\\n<p>This calculates and populates the <code>Authorization</code> header of\\n<code>requestOptions</code>, and any other necessary AWS headers and/or request\\noptions. Returns <code>requestOptions</code> as a convenience for chaining.</p>\\n<p><code>requestOptions</code> is an object holding the same options that the node.js\\n<a href=\\\"http://nodejs.org/docs/latest/api/http.html#http_http_request_options_callback\\\">http.request</a>\\nfunction takes.</p>\\n<p>The following properties of <code>requestOptions</code> are used in the signing or\\npopulated if they don't already exist:</p>\\n<ul>\\n<li><code>hostname</code> or <code>host</code> (will be determined from <code>service</code> and <code>region</code> if not given)</li>\\n<li><code>method</code> (will use <code>'GET'</code> if not given or <code>'POST'</code> if there is a <code>body</code>)</li>\\n<li><code>path</code> (will use <code>'/'</code> if not given)</li>\\n<li><code>body</code> (will use <code>''</code> if not given)</li>\\n<li><code>service</code> (will be calculated from <code>hostname</code> or <code>host</code> if not given)</li>\\n<li><code>region</code> (will be calculated from <code>hostname</code> or <code>host</code> or use <code>'us-east-1'</code> if not given)</li>\\n<li><code>headers['Host']</code> (will use <code>hostname</code> or <code>host</code> or be calculated if not given)</li>\\n<li><code>headers['Content-Type']</code> (will use <code>'application/x-www-form-urlencoded; charset=utf-8'</code>\\nif not given and there is a <code>body</code>)</li>\\n<li><code>headers['Date']</code> (used to calculate the signature date if given, otherwise <code>new Date</code> is used)</li>\\n</ul>\\n<p>Your AWS credentials (which can be found in your\\n<a href=\\\"https://portal.aws.amazon.com/gp/aws/securityCredentials\\\">AWS console</a>)\\ncan be specified in one of two ways:</p>\\n<ul>\\n<li>As the second argument, like this:</li>\\n</ul>\\n<pre><code class=\\\"language-javascript\\\">aws4.sign(requestOptions, {\\n  secretAccessKey: \\\"&#x3C;your-secret-access-key>\\\",\\n  accessKeyId: \\\"&#x3C;your-access-key-id>\\\",\\n  sessionToken: \\\"&#x3C;your-session-token>\\\"\\n})\\n</code></pre>\\n<ul>\\n<li>From <code>process.env</code>, such as this:</li>\\n</ul>\\n<pre><code>export AWS_SECRET_ACCESS_KEY=\\\"&#x3C;your-secret-access-key>\\\"\\nexport AWS_ACCESS_KEY_ID=\\\"&#x3C;your-access-key-id>\\\"\\nexport AWS_SESSION_TOKEN=\\\"&#x3C;your-session-token>\\\"\\n</code></pre>\\n<p>(will also use <code>AWS_ACCESS_KEY</code> and <code>AWS_SECRET_KEY</code> if available)</p>\\n<p>The <code>sessionToken</code> property and <code>AWS_SESSION_TOKEN</code> environment variable are optional for signing\\nwith <a href=\\\"http://docs.aws.amazon.com/STS/latest/UsingSTS/using-temp-creds.html\\\">IAM STS temporary credentials</a>.</p>\\n<h2>Installation</h2>\\n<p>With <a href=\\\"http://npmjs.org/\\\">npm</a> do:</p>\\n<pre><code>npm install aws4\\n</code></pre>\\n<p>Can also be used <a href=\\\"./browser\\\">in the browser</a>.</p>\\n<h2>Thanks</h2>\\n<p>Thanks to <a href=\\\"https://github.com/jed\\\">@jed</a> for his\\n<a href=\\\"https://github.com/jed/dynamo-client\\\">dynamo-client</a> lib where I first\\ncommitted and subsequently extracted this code.</p>\\n<p>Also thanks to the\\n<a href=\\\"https://github.com/aws/aws-sdk-js\\\">official node.js AWS SDK</a> for giving\\nme a start on implementing the v4 signature.</p>\",\"docPath\":\"argo-ci/node_modules/fsevents/node_modules/aws4/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-fsevents-node-modules-aws-4-readme-html.json\n// module id = 2380\n// module chunks = 12582623910382"],"sourceRoot":""}