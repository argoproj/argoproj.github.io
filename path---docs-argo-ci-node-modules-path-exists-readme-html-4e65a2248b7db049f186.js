webpackJsonp([29523993971787],{3027:function(e,s){e.exports={pathContext:{docHtml:'<h1>path-exists <a href="https://travis-ci.org/sindresorhus/path-exists"><img src="https://travis-ci.org/sindresorhus/path-exists.svg?branch=master" alt="Build Status"></a></h1>\n<blockquote>\n<p>Check if a path exists</p>\n</blockquote>\n<p>Because <a href="https://nodejs.org/api/fs.html#fs_fs_exists_path_callback"><code>fs.exists()</code></a> is being <a href="https://github.com/iojs/io.js/issues/103">deprecated</a>, but there\'s still a genuine use-case of being able to check if a path exists for other purposes than doing IO with it.</p>\n<p>Never use this before handling a file though:</p>\n<blockquote>\n<p>In particular, checking if a file exists before opening it is an anti-pattern that leaves you vulnerable to race conditions: another process may remove the file between the calls to <code>fs.exists()</code> and <code>fs.open()</code>. Just open the file and handle the error when it\'s not there.</p>\n</blockquote>\n<h2>Install</h2>\n<pre><code>$ npm install --save path-exists\n</code></pre>\n<h2>Usage</h2>\n<pre><code class="language-js">// foo.js\nconst pathExists = require(\'path-exists\');\n\npathExists(\'foo.js\').then(exists => {\n    console.log(exists);\n    //=> true\n});\n</code></pre>\n<h2>API</h2>\n<h3>pathExists(path)</h3>\n<p>Returns a promise for a boolean of whether the path exists.</p>\n<h3>pathExists.sync(path)</h3>\n<p>Returns a boolean of whether the path exists.</p>\n<h2>Related</h2>\n<ul>\n<li><a href="https://github.com/sindresorhus/path-exists-cli">path-exists-cli</a> - CLI for this module</li>\n</ul>\n<h2>License</h2>\n<p>MIT Â© <a href="https://sindresorhus.com">Sindre Sorhus</a></p>',docPath:"argo-ci/node_modules/path-exists/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-path-exists-readme-html-4e65a2248b7db049f186.js.map