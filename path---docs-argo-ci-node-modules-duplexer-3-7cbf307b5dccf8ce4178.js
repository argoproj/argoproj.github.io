webpackJsonp([0x807334d9f7de],{2258:function(e,n){e.exports={pathContext:{docHtml:'<h1>duplexer3 <a href="https://travis-ci.org/floatdrop/duplexer3"><img src="https://travis-ci.org/floatdrop/duplexer3.svg?branch=master" alt="Build Status"></a> <a href="https://coveralls.io/github/floatdrop/duplexer3?branch=master"><img src="https://coveralls.io/repos/floatdrop/duplexer3/badge.svg?branch=master&#x26;service=github" alt="Coverage Status"></a></h1>\n<p>Like <a href="https://github.com/deoxxa/duplexer2">duplexer2</a> but using Streams3 without readable-stream dependency</p>\n<pre><code class="language-javascript">var stream = require("stream");\n\nvar duplexer3 = require("duplexer3");\n\nvar writable = new stream.Writable({objectMode: true}),\n    readable = new stream.Readable({objectMode: true});\n\nwritable._write = function _write(input, encoding, done) {\n  if (readable.push(input)) {\n    return done();\n  } else {\n    readable.once("drain", done);\n  }\n};\n\nreadable._read = function _read(n) {\n  // no-op\n};\n\n// simulate the readable thing closing after a bit\nwritable.once("finish", function() {\n  setTimeout(function() {\n    readable.push(null);\n  }, 500);\n});\n\nvar duplex = duplexer3(writable, readable);\n\nduplex.on("data", function(e) {\n  console.log("got data", JSON.stringify(e));\n});\n\nduplex.on("finish", function() {\n  console.log("got finish event");\n});\n\nduplex.on("end", function() {\n  console.log("got end event");\n});\n\nduplex.write("oh, hi there", function() {\n  console.log("finished writing");\n});\n\nduplex.end(function() {\n  console.log("finished ending");\n});\n</code></pre>\n<pre><code>got data "oh, hi there"\nfinished writing\ngot finish event\nfinished ending\ngot end event\n</code></pre>\n<h2>Overview</h2>\n<p>This is a reimplementation of <a href="https://www.npmjs.com/package/duplexer">duplexer</a> using the\nStreams3 API which is standard in Node as of v4. Everything largely\nworks the same.</p>\n<h2>Installation</h2>\n<p><a href="https://docs.npmjs.com/cli/install">Available via <code>npm</code></a>:</p>\n<pre><code>$ npm i duplexer3\n</code></pre>\n<h2>API</h2>\n<h3>duplexer3</h3>\n<p>Creates a new <code>DuplexWrapper</code> object, which is the actual class that implements\nmost of the fun stuff. All that fun stuff is hidden. DON\'T LOOK.</p>\n<pre><code class="language-javascript">duplexer3([options], writable, readable)\n</code></pre>\n<pre><code class="language-javascript">const duplex = duplexer3(new stream.Writable(), new stream.Readable());\n</code></pre>\n<p>Arguments</p>\n<ul>\n<li><strong>options</strong> - an object specifying the regular <code>stream.Duplex</code> options, as\nwell as the properties described below.</li>\n<li><strong>writable</strong> - a writable stream</li>\n<li><strong>readable</strong> - a readable stream</li>\n</ul>\n<p>Options</p>\n<ul>\n<li><strong>bubbleErrors</strong> - a boolean value that specifies whether to bubble errors\nfrom the underlying readable/writable streams. Default is <code>true</code>.</li>\n</ul>\n<h2>License</h2>\n<p>3-clause BSD. <a href="./LICENSE">A copy</a> is included with the source.</p>\n<h2>Contact</h2>\n<ul>\n<li>GitHub (<a href="http://github.com/deoxxa">deoxxa</a>)</li>\n<li>Twitter (<a href="http://twitter.com/deoxxa">@deoxxa</a>)</li>\n<li>Email (<a href="mailto:deoxxa@fknsrs.biz">deoxxa@fknsrs.biz</a>)</li>\n</ul>',docPath:"argo-ci/node_modules/duplexer3/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-duplexer-3-7cbf307b5dccf8ce4178.js.map