{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-getpass-31cd9f58f76244fb39e7.js","webpack:///./.cache/json/docs-argo-ci-node-modules-getpass.json"],"names":["webpackJsonp","2642","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,qmCAA8VC,QAAA,sCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-getpass-31cd9f58f76244fb39e7.js","sourcesContent":["webpackJsonp([139564893407308],{\n\n/***/ 2642:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h2>getpass</h2>\\n<p>Get a password from the terminal. Sounds simple? Sounds like the <code>readline</code>\\nmodule should be able to do it? NOPE.</p>\\n<h2>Install and use it</h2>\\n<pre><code class=\\\"language-bash\\\">npm install --save getpass\\n</code></pre>\\n<pre><code class=\\\"language-javascript\\\">const mod_getpass = require('getpass');\\n</code></pre>\\n<h2>API</h2>\\n<h3><code>mod_getpass.getPass([options, ]callback)</code></h3>\\n<p>Gets a password from the terminal. If available, this uses <code>/dev/tty</code> to avoid\\ninterfering with any data being piped in or out of stdio.</p>\\n<p>This function prints a prompt (by default <code>Password:</code>) and then accepts input\\nwithout echoing.</p>\\n<p>Parameters:</p>\\n<ul>\\n<li>\\n<p><code>options</code>, an Object, with properties:</p>\\n<ul>\\n<li><code>prompt</code>, an optional String</li>\\n</ul>\\n</li>\\n<li>\\n<p><code>callback</code>, a <code>Func(error, password)</code>, with arguments:</p>\\n<ul>\\n<li><code>error</code>, either <code>null</code> (no error) or an <code>Error</code> instance</li>\\n<li><code>password</code>, a String</li>\\n</ul>\\n</li>\\n</ul>\",\"docPath\":\"argo-ci/node_modules/getpass/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-getpass-31cd9f58f76244fb39e7.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h2>getpass</h2>\\n<p>Get a password from the terminal. Sounds simple? Sounds like the <code>readline</code>\\nmodule should be able to do it? NOPE.</p>\\n<h2>Install and use it</h2>\\n<pre><code class=\\\"language-bash\\\">npm install --save getpass\\n</code></pre>\\n<pre><code class=\\\"language-javascript\\\">const mod_getpass = require('getpass');\\n</code></pre>\\n<h2>API</h2>\\n<h3><code>mod_getpass.getPass([options, ]callback)</code></h3>\\n<p>Gets a password from the terminal. If available, this uses <code>/dev/tty</code> to avoid\\ninterfering with any data being piped in or out of stdio.</p>\\n<p>This function prints a prompt (by default <code>Password:</code>) and then accepts input\\nwithout echoing.</p>\\n<p>Parameters:</p>\\n<ul>\\n<li>\\n<p><code>options</code>, an Object, with properties:</p>\\n<ul>\\n<li><code>prompt</code>, an optional String</li>\\n</ul>\\n</li>\\n<li>\\n<p><code>callback</code>, a <code>Func(error, password)</code>, with arguments:</p>\\n<ul>\\n<li><code>error</code>, either <code>null</code> (no error) or an <code>Error</code> instance</li>\\n<li><code>password</code>, a String</li>\\n</ul>\\n</li>\\n</ul>\",\"docPath\":\"argo-ci/node_modules/getpass/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-getpass.json\n// module id = 2642\n// module chunks = 139564893407308"],"sourceRoot":""}