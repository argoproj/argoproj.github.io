{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-v-8-flags-readme-html-dc89c919c05cebc9b654.js","webpack:///./.cache/json/docs-argo-ci-node-modules-v-8-flags-readme-html.json"],"names":["webpackJsonp","3359","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,2uGAA4tCC,QAAA,sCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-v-8-flags-readme-html-dc89c919c05cebc9b654.js","sourcesContent":["webpackJsonp([228378672640138],{\n\n/***/ 3359:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>v8flags <a href=\\\"http://travis-ci.org/js-cli/js-v8flags\\\"><img src=\\\"https://secure.travis-ci.org/js-cli/js-v8flags.png\\\" alt=\\\"Build Status\\\"></a> <a href=\\\"https://ci.appveyor.com/project/js-cli/js-v8flags\\\"><img src=\\\"https://ci.appveyor.com/api/projects/status/9psgmwayx9kpol1a?svg=true\\\" alt=\\\"Build status\\\"></a></h1>\\n<blockquote>\\n<p>Get available v8 flags.</p>\\n</blockquote>\\n<p><a href=\\\"https://nodei.co/npm/v8flags/\\\"><img src=\\\"https://nodei.co/npm/v8flags.png\\\" alt=\\\"NPM\\\"></a></p>\\n<h2>Example</h2>\\n<pre><code class=\\\"language-js\\\">const v8flags = require('v8flags');\\n\\nv8flags(function (err, results) {\\n  console.log(results);  // [ '--use_strict',\\n                         //   '--es5_readonly',\\n                         //   '--es52_globals',\\n                         //   '--harmony_typeof',\\n                         //   '--harmony_scoping',\\n                         //   '--harmony_modules',\\n                         //   '--harmony_proxies',\\n                         //   '--harmony_collections',\\n                         //   '--harmony',\\n                         // ...\\n});\\n</code></pre>\\n<h2>Release History</h2>\\n<ul>\\n<li>2017-09-24 - v3.0.1 - Fix home directory lookup behavior &#x26; fallback</li>\\n<li>2017-07-14 - v3.0.0 - store cached config to operating system specific directories</li>\\n<li>2017-04-18 - v2.1.1 - default to an empty user</li>\\n<li>2017-04-18 - v2.1.0 - hash username to support invalid path characters</li>\\n<li>2017-03-31 - v2.0.12 - don't pollute global namespace</li>\\n<li>2015-12-07 - v2.0.11 - cache to temp directory if home is present but unwritable</li>\\n<li>2015-07-28 - v2.0.10 - don't throw for electron runtime, just call back with empty array</li>\\n<li>2015-06-25 - v2.0.9 - call back with flags even if cache file can't be written</li>\\n<li>2015-06-15 - v2.0.7 - revert to 2.0.5 behavior.</li>\\n<li>2015-06-15 - v2.0.6 - store cache file in ~/.cache or ~/AppData/Local depending on platform</li>\\n<li>2015-04-18 - v2.0.5 - attempt to require config file, if this throws for any reason, fopen w+ and re-create</li>\\n<li>2015-04-16 - v2.0.4 - when concurrent processes are run and no config exists, don't append to the cached config.</li>\\n<li>2015-03-31 - v2.0.3 - prefer to store config files in user home over tmp</li>\\n<li>2015-01-18 - v2.0.2 - keep his dark tentacles contained</li>\\n<li>2015-01-15 - v2.0.1 - store temp file in <code>os.tmpdir()</code>, drop support for node 0.8</li>\\n<li>2015-01-15 - v2.0.0 - make the stupid thing async</li>\\n<li>2014-12-22 - v1.0.8 - exclude <code>--help</code> flag</li>\\n<li>2014-12-20 - v1.0.7 - pre-cache flags for every version of node from 0.8 to 0.11</li>\\n<li>2014-12-09 - v1.0.6 - revert to 1.0.0 behavior</li>\\n<li>2014-11-26 - v1.0.5 - get node executable from <code>process.execPath</code></li>\\n<li>2014-11-18 - v1.0.4 - wrap node executable path in quotes</li>\\n<li>2014-11-17 - v1.0.3 - get node executable during npm install via <code>process.env.NODE</code></li>\\n<li>2014-11-17 - v1.0.2 - get node executable from <code>process.env._</code></li>\\n<li>2014-09-03 - v1.0.0 - first major version release</li>\\n<li>2014-09-02 - v0.3.0 - keep -- in flag names</li>\\n<li>2014-09-02 - v0.2.0 - cache flags</li>\\n<li>2014-05-09 - v0.1.0 - initial release</li>\\n</ul>\",\"docPath\":\"argo-ci/node_modules/v8flags/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-v-8-flags-readme-html-dc89c919c05cebc9b654.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>v8flags <a href=\\\"http://travis-ci.org/js-cli/js-v8flags\\\"><img src=\\\"https://secure.travis-ci.org/js-cli/js-v8flags.png\\\" alt=\\\"Build Status\\\"></a> <a href=\\\"https://ci.appveyor.com/project/js-cli/js-v8flags\\\"><img src=\\\"https://ci.appveyor.com/api/projects/status/9psgmwayx9kpol1a?svg=true\\\" alt=\\\"Build status\\\"></a></h1>\\n<blockquote>\\n<p>Get available v8 flags.</p>\\n</blockquote>\\n<p><a href=\\\"https://nodei.co/npm/v8flags/\\\"><img src=\\\"https://nodei.co/npm/v8flags.png\\\" alt=\\\"NPM\\\"></a></p>\\n<h2>Example</h2>\\n<pre><code class=\\\"language-js\\\">const v8flags = require('v8flags');\\n\\nv8flags(function (err, results) {\\n  console.log(results);  // [ '--use_strict',\\n                         //   '--es5_readonly',\\n                         //   '--es52_globals',\\n                         //   '--harmony_typeof',\\n                         //   '--harmony_scoping',\\n                         //   '--harmony_modules',\\n                         //   '--harmony_proxies',\\n                         //   '--harmony_collections',\\n                         //   '--harmony',\\n                         // ...\\n});\\n</code></pre>\\n<h2>Release History</h2>\\n<ul>\\n<li>2017-09-24 - v3.0.1 - Fix home directory lookup behavior &#x26; fallback</li>\\n<li>2017-07-14 - v3.0.0 - store cached config to operating system specific directories</li>\\n<li>2017-04-18 - v2.1.1 - default to an empty user</li>\\n<li>2017-04-18 - v2.1.0 - hash username to support invalid path characters</li>\\n<li>2017-03-31 - v2.0.12 - don't pollute global namespace</li>\\n<li>2015-12-07 - v2.0.11 - cache to temp directory if home is present but unwritable</li>\\n<li>2015-07-28 - v2.0.10 - don't throw for electron runtime, just call back with empty array</li>\\n<li>2015-06-25 - v2.0.9 - call back with flags even if cache file can't be written</li>\\n<li>2015-06-15 - v2.0.7 - revert to 2.0.5 behavior.</li>\\n<li>2015-06-15 - v2.0.6 - store cache file in ~/.cache or ~/AppData/Local depending on platform</li>\\n<li>2015-04-18 - v2.0.5 - attempt to require config file, if this throws for any reason, fopen w+ and re-create</li>\\n<li>2015-04-16 - v2.0.4 - when concurrent processes are run and no config exists, don't append to the cached config.</li>\\n<li>2015-03-31 - v2.0.3 - prefer to store config files in user home over tmp</li>\\n<li>2015-01-18 - v2.0.2 - keep his dark tentacles contained</li>\\n<li>2015-01-15 - v2.0.1 - store temp file in <code>os.tmpdir()</code>, drop support for node 0.8</li>\\n<li>2015-01-15 - v2.0.0 - make the stupid thing async</li>\\n<li>2014-12-22 - v1.0.8 - exclude <code>--help</code> flag</li>\\n<li>2014-12-20 - v1.0.7 - pre-cache flags for every version of node from 0.8 to 0.11</li>\\n<li>2014-12-09 - v1.0.6 - revert to 1.0.0 behavior</li>\\n<li>2014-11-26 - v1.0.5 - get node executable from <code>process.execPath</code></li>\\n<li>2014-11-18 - v1.0.4 - wrap node executable path in quotes</li>\\n<li>2014-11-17 - v1.0.3 - get node executable during npm install via <code>process.env.NODE</code></li>\\n<li>2014-11-17 - v1.0.2 - get node executable from <code>process.env._</code></li>\\n<li>2014-09-03 - v1.0.0 - first major version release</li>\\n<li>2014-09-02 - v0.3.0 - keep -- in flag names</li>\\n<li>2014-09-02 - v0.2.0 - cache flags</li>\\n<li>2014-05-09 - v0.1.0 - initial release</li>\\n</ul>\",\"docPath\":\"argo-ci/node_modules/v8flags/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-v-8-flags-readme-html.json\n// module id = 3359\n// module chunks = 228378672640138"],"sourceRoot":""}