{"version":3,"sources":["webpack:///path---docs-argo-cd-contributing-html-313b22bd1073ba91fd79.js","webpack:///./.cache/json/docs-argo-cd-contributing-html.json"],"names":["webpackJsonp","468","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,uuGAA4pGC,QAAA,uBAAAC,KAAA","file":"path---docs-argo-cd-contributing-html-313b22bd1073ba91fd79.js","sourcesContent":["webpackJsonp([244232826561027],{\n\n/***/ 468:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h2>Requirements</h2>\\n<p>Make sure you have following tools installed</p>\\n<ul>\\n<li><a href=\\\"https://docs.docker.com/install/#supported-platforms\\\">docker</a></li>\\n<li><a href=\\\"https://golang.org/\\\">golang</a></li>\\n<li><a href=\\\"https://github.com/golang/dep\\\">dep</a></li>\\n<li><a href=\\\"https://developers.google.com/protocol-buffers/\\\">protobuf</a></li>\\n<li><a href=\\\"https://github.com/ksonnet/ksonnet#install\\\">ksonnet</a></li>\\n<li><a href=\\\"https://github.com/helm/helm/releases\\\">helm</a></li>\\n<li><a href=\\\"https://github.com/go-swagger/go-swagger/blob/master/docs/install.html\\\">go-swagger</a></li>\\n<li><a href=\\\"https://stedolan.github.io/jq/\\\">jq</a></li>\\n<li><a href=\\\"https://kubernetes.io/docs/tasks/tools/install-kubectl/\\\">kubectl</a>.</li>\\n</ul>\\n<pre><code>$ brew tap go-swagger/go-swagger\\n$ brew install go dep protobuf kubectl ksonnet/tap/ks kubernetes-helm jq go-swagger\\n$ go get -u github.com/golang/protobuf/protoc-gen-go\\n$ go get -u github.com/go-swagger/go-swagger/cmd/swagger\\n$ go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway\\n$ go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger\\n</code></pre>\\n<p>Nice to have <a href=\\\"https://github.com/alecthomas/gometalinter\\\">gometalinter</a> and <a href=\\\"https://github.com/mattn/goreman\\\">goreman</a>:</p>\\n<pre><code>$ go get -u gopkg.in/alecthomas/gometalinter.v2 github.com/mattn/goreman &#x26;&#x26; gometalinter.v2 --install\\n</code></pre>\\n<h2>Building</h2>\\n<pre><code>$ go get -u github.com/argoproj/argo-cd\\n$ dep ensure\\n$ make\\n</code></pre>\\n<p>NOTE: The make command can take a while, and we recommend building the specific component you are working on</p>\\n<ul>\\n<li><code>make cli</code> - Make the argocd CLI tool</li>\\n<li><code>make server</code> - Make the API/repo/controller server</li>\\n<li><code>make codegen</code> - Builds protobuf and swagger files</li>\\n<li><code>make argocd-util</code> - Make the administrator's utility, used for certain tasks such as import/export</li>\\n</ul>\\n<h2>Running locally</h2>\\n<p>You need to have access to kubernetes cluster (including <a href=\\\"https://kubernetes.io/docs/tasks/tools/install-minikube/\\\">minikube</a> or <a href=\\\"https://docs.docker.com/docker-for-mac/install/\\\">docker edge</a> ) in order to run Argo CD on your laptop:</p>\\n<ul>\\n<li>install kubectl: <code>brew install kubectl</code></li>\\n<li>make sure <code>kubectl</code> is connected to your cluster (e.g. <code>kubectl get pods</code> should work).</li>\\n<li>install application CRD using following command:</li>\\n</ul>\\n<pre><code>$ kubectl create -f install/manifests/01_application-crd.yaml\\n</code></pre>\\n<ul>\\n<li>start Argo CD services using <a href=\\\"https://github.com/mattn/goreman\\\">goreman</a>:</li>\\n</ul>\\n<pre><code>$ goreman start\\n</code></pre>\\n<h2>Troubleshooting</h2>\\n<ul>\\n<li>Ensure argocd is installed: ./dist/argocd install</li>\\n<li>Ensure you're logged in: ./dist/argocd login --username admin --password <whatever password you set at install> localhost:8080</li>\\n<li>Ensure that roles are configured: kubectl create -f install/manifests/02c_argocd-rbac-cm.yaml</li>\\n<li>Ensure minikube is running: minikube stop &#x26;&#x26; minikube start</li>\\n<li>Ensure Argo CD is aware of minikube: ./dist/argocd cluster add minikube</li>\\n</ul>\",\"docPath\":\"argo-cd/contributing\",\"proj\":\"argo-cd\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-cd-contributing-html-313b22bd1073ba91fd79.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h2>Requirements</h2>\\n<p>Make sure you have following tools installed</p>\\n<ul>\\n<li><a href=\\\"https://docs.docker.com/install/#supported-platforms\\\">docker</a></li>\\n<li><a href=\\\"https://golang.org/\\\">golang</a></li>\\n<li><a href=\\\"https://github.com/golang/dep\\\">dep</a></li>\\n<li><a href=\\\"https://developers.google.com/protocol-buffers/\\\">protobuf</a></li>\\n<li><a href=\\\"https://github.com/ksonnet/ksonnet#install\\\">ksonnet</a></li>\\n<li><a href=\\\"https://github.com/helm/helm/releases\\\">helm</a></li>\\n<li><a href=\\\"https://github.com/go-swagger/go-swagger/blob/master/docs/install.html\\\">go-swagger</a></li>\\n<li><a href=\\\"https://stedolan.github.io/jq/\\\">jq</a></li>\\n<li><a href=\\\"https://kubernetes.io/docs/tasks/tools/install-kubectl/\\\">kubectl</a>.</li>\\n</ul>\\n<pre><code>$ brew tap go-swagger/go-swagger\\n$ brew install go dep protobuf kubectl ksonnet/tap/ks kubernetes-helm jq go-swagger\\n$ go get -u github.com/golang/protobuf/protoc-gen-go\\n$ go get -u github.com/go-swagger/go-swagger/cmd/swagger\\n$ go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway\\n$ go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger\\n</code></pre>\\n<p>Nice to have <a href=\\\"https://github.com/alecthomas/gometalinter\\\">gometalinter</a> and <a href=\\\"https://github.com/mattn/goreman\\\">goreman</a>:</p>\\n<pre><code>$ go get -u gopkg.in/alecthomas/gometalinter.v2 github.com/mattn/goreman &#x26;&#x26; gometalinter.v2 --install\\n</code></pre>\\n<h2>Building</h2>\\n<pre><code>$ go get -u github.com/argoproj/argo-cd\\n$ dep ensure\\n$ make\\n</code></pre>\\n<p>NOTE: The make command can take a while, and we recommend building the specific component you are working on</p>\\n<ul>\\n<li><code>make cli</code> - Make the argocd CLI tool</li>\\n<li><code>make server</code> - Make the API/repo/controller server</li>\\n<li><code>make codegen</code> - Builds protobuf and swagger files</li>\\n<li><code>make argocd-util</code> - Make the administrator's utility, used for certain tasks such as import/export</li>\\n</ul>\\n<h2>Running locally</h2>\\n<p>You need to have access to kubernetes cluster (including <a href=\\\"https://kubernetes.io/docs/tasks/tools/install-minikube/\\\">minikube</a> or <a href=\\\"https://docs.docker.com/docker-for-mac/install/\\\">docker edge</a> ) in order to run Argo CD on your laptop:</p>\\n<ul>\\n<li>install kubectl: <code>brew install kubectl</code></li>\\n<li>make sure <code>kubectl</code> is connected to your cluster (e.g. <code>kubectl get pods</code> should work).</li>\\n<li>install application CRD using following command:</li>\\n</ul>\\n<pre><code>$ kubectl create -f install/manifests/01_application-crd.yaml\\n</code></pre>\\n<ul>\\n<li>start Argo CD services using <a href=\\\"https://github.com/mattn/goreman\\\">goreman</a>:</li>\\n</ul>\\n<pre><code>$ goreman start\\n</code></pre>\\n<h2>Troubleshooting</h2>\\n<ul>\\n<li>Ensure argocd is installed: ./dist/argocd install</li>\\n<li>Ensure you're logged in: ./dist/argocd login --username admin --password <whatever password you set at install> localhost:8080</li>\\n<li>Ensure that roles are configured: kubectl create -f install/manifests/02c_argocd-rbac-cm.yaml</li>\\n<li>Ensure minikube is running: minikube stop &#x26;&#x26; minikube start</li>\\n<li>Ensure Argo CD is aware of minikube: ./dist/argocd cluster add minikube</li>\\n</ul>\",\"docPath\":\"argo-cd/contributing\",\"proj\":\"argo-cd\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-cd-contributing-html.json\n// module id = 468\n// module chunks = 244232826561027"],"sourceRoot":""}