{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-isexe-e890a5a24107cba2bee9.js","webpack:///./.cache/json/docs-argo-ci-node-modules-isexe.json"],"names":["webpackJsonp","2784","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,grDAAuzBC,QAAA,oCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-isexe-e890a5a24107cba2bee9.js","sourcesContent":["webpackJsonp([30368999927690],{\n\n/***/ 2784:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>isexe</h1>\\n<p>Minimal module to check if a file is executable, and a normal file.</p>\\n<p>Uses <code>fs.stat</code> and tests against the <code>PATHEXT</code> environment variable on\\nWindows.</p>\\n<h2>USAGE</h2>\\n<pre><code class=\\\"language-javascript\\\">var isexe = require('isexe')\\nisexe('some-file-name', function (err, isExe) {\\n  if (err) {\\n    console.error('probably file does not exist or something', err)\\n  } else if (isExe) {\\n    console.error('this thing can be run')\\n  } else {\\n    console.error('cannot be run')\\n  }\\n})\\n\\n// same thing but synchronous, throws errors\\nvar isExe = isexe.sync('some-file-name')\\n\\n// treat errors as just \\\"not executable\\\"\\nisexe('maybe-missing-file', { ignoreErrors: true }, callback)\\nvar isExe = isexe.sync('maybe-missing-file', { ignoreErrors: true })\\n</code></pre>\\n<h2>API</h2>\\n<h3><code>isexe(path, [options], [callback])</code></h3>\\n<p>Check if the path is executable.  If no callback provided, and a\\nglobal <code>Promise</code> object is available, then a Promise will be returned.</p>\\n<p>Will raise whatever errors may be raised by <code>fs.stat</code>, unless\\n<code>options.ignoreErrors</code> is set to true.</p>\\n<h3><code>isexe.sync(path, [options])</code></h3>\\n<p>Same as <code>isexe</code> but returns the value and throws any errors raised.</p>\\n<h3>Options</h3>\\n<ul>\\n<li><code>ignoreErrors</code> Treat all errors as \\\"no, this is not executable\\\", but\\ndon't raise them.</li>\\n<li><code>uid</code> Number to use as the user id</li>\\n<li><code>gid</code> Number to use as the group id</li>\\n<li><code>pathExt</code> List of path extensions to use instead of <code>PATHEXT</code>\\nenvironment variable on Windows.</li>\\n</ul>\",\"docPath\":\"argo-ci/node_modules/isexe/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-isexe-e890a5a24107cba2bee9.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>isexe</h1>\\n<p>Minimal module to check if a file is executable, and a normal file.</p>\\n<p>Uses <code>fs.stat</code> and tests against the <code>PATHEXT</code> environment variable on\\nWindows.</p>\\n<h2>USAGE</h2>\\n<pre><code class=\\\"language-javascript\\\">var isexe = require('isexe')\\nisexe('some-file-name', function (err, isExe) {\\n  if (err) {\\n    console.error('probably file does not exist or something', err)\\n  } else if (isExe) {\\n    console.error('this thing can be run')\\n  } else {\\n    console.error('cannot be run')\\n  }\\n})\\n\\n// same thing but synchronous, throws errors\\nvar isExe = isexe.sync('some-file-name')\\n\\n// treat errors as just \\\"not executable\\\"\\nisexe('maybe-missing-file', { ignoreErrors: true }, callback)\\nvar isExe = isexe.sync('maybe-missing-file', { ignoreErrors: true })\\n</code></pre>\\n<h2>API</h2>\\n<h3><code>isexe(path, [options], [callback])</code></h3>\\n<p>Check if the path is executable.  If no callback provided, and a\\nglobal <code>Promise</code> object is available, then a Promise will be returned.</p>\\n<p>Will raise whatever errors may be raised by <code>fs.stat</code>, unless\\n<code>options.ignoreErrors</code> is set to true.</p>\\n<h3><code>isexe.sync(path, [options])</code></h3>\\n<p>Same as <code>isexe</code> but returns the value and throws any errors raised.</p>\\n<h3>Options</h3>\\n<ul>\\n<li><code>ignoreErrors</code> Treat all errors as \\\"no, this is not executable\\\", but\\ndon't raise them.</li>\\n<li><code>uid</code> Number to use as the user id</li>\\n<li><code>gid</code> Number to use as the group id</li>\\n<li><code>pathExt</code> List of path extensions to use instead of <code>PATHEXT</code>\\nenvironment variable on Windows.</li>\\n</ul>\",\"docPath\":\"argo-ci/node_modules/isexe/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-isexe.json\n// module id = 2784\n// module chunks = 30368999927690"],"sourceRoot":""}