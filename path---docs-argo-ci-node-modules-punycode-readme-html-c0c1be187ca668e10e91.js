webpackJsonp([21829062479827],{3061:function(e,n){e.exports={pathContext:{docHtml:'<h1>Punycode.js <a href="https://travis-ci.org/bestiejs/punycode.js"><img src="https://travis-ci.org/bestiejs/punycode.js.svg?branch=master" alt="Build status"></a> <a href="https://coveralls.io/r/bestiejs/punycode.js"><img src="http://img.shields.io/coveralls/bestiejs/punycode.js/master.svg" alt="Code coverage status"></a> <a href="https://gemnasium.com/bestiejs/punycode.js"><img src="https://gemnasium.com/bestiejs/punycode.js.svg" alt="Dependency status"></a></h1>\n<p>A robust Punycode converter that fully complies to <a href="https://tools.ietf.org/html/rfc3492">RFC 3492</a> and <a href="https://tools.ietf.org/html/rfc5891">RFC 5891</a>, and works on nearly all JavaScript platforms.</p>\n<p>This JavaScript library is the result of comparing, optimizing and documenting different open-source implementations of the Punycode algorithm:</p>\n<ul>\n<li><a href="https://tools.ietf.org/html/rfc3492#appendix-C">The C example code from RFC 3492</a></li>\n<li><a href="http://opensource.apple.com/source/ICU/ICU-400.42/icuSources/common/punycode.c"><code>punycode.c</code> by <em>Markus W. Scherer</em> (IBM)</a></li>\n<li><a href="https://github.com/bnoordhuis/punycode/blob/master/punycode.c"><code>punycode.c</code> by <em>Ben Noordhuis</em></a></li>\n<li><a href="http://stackoverflow.com/questions/183485/can-anyone-recommend-a-good-free-javascript-for-punycode-to-unicode-conversion/301287#301287">JavaScript implementation by <em>some</em></a></li>\n<li><a href="https://github.com/joyent/node/blob/426298c8c1c0d5b5224ac3658c41e7c2a3fe9377/lib/punycode.js"><code>punycode.js</code> by <em>Ben Noordhuis</em></a> (note: <a href="https://github.com/joyent/node/issues/2072">not fully compliant</a>)</li>\n</ul>\n<p>This project is <a href="https://github.com/joyent/node/blob/master/lib/punycode.js">bundled</a> with <a href="https://github.com/joyent/node/compare/975f1930b1...61e796decc">Node.js v0.6.2+</a> and <a href="https://github.com/iojs/io.js/blob/v1.x/lib/punycode.js">io.js v1.0.0+</a>.</p>\n<h2>Installation</h2>\n<p>Via <a href="https://www.npmjs.com/">npm</a> (only required for Node.js releases older than v0.6.2):</p>\n<pre><code class="language-bash">npm install punycode\n</code></pre>\n<p>Via <a href="http://bower.io/">Bower</a>:</p>\n<pre><code class="language-bash">bower install punycode\n</code></pre>\n<p>Via <a href="https://github.com/component/component">Component</a>:</p>\n<pre><code class="language-bash">component install bestiejs/punycode.js\n</code></pre>\n<p>In a browser:</p>\n<pre><code class="language-html">&#x3C;script src="punycode.js">&#x3C;/script>\n</code></pre>\n<p>In <a href="https://nodejs.org/">Node.js</a>, <a href="https://iojs.org/">io.js</a>, <a href="http://narwhaljs.org/">Narwhal</a>, and <a href="http://ringojs.org/">RingoJS</a>:</p>\n<pre><code class="language-js">var punycode = require(\'punycode\');\n</code></pre>\n<p>In <a href="http://www.mozilla.org/rhino/">Rhino</a>:</p>\n<pre><code class="language-js">load(\'punycode.js\');\n</code></pre>\n<p>Using an AMD loader like <a href="http://requirejs.org/">RequireJS</a>:</p>\n<pre><code class="language-js">require(\n  {\n    \'paths\': {\n      \'punycode\': \'path/to/punycode\'\n    }\n  },\n  [\'punycode\'],\n  function(punycode) {\n    console.log(punycode);\n  }\n);\n</code></pre>\n<h2>API</h2>\n<h3><code>punycode.decode(string)</code></h3>\n<p>Converts a Punycode string of ASCII symbols to a string of Unicode symbols.</p>\n<pre><code class="language-js">// decode domain name parts\npunycode.decode(\'maana-pta\'); // \'mañana\'\npunycode.decode(\'--dqo34k\'); // \'☃-⌘\'\n</code></pre>\n<h3><code>punycode.encode(string)</code></h3>\n<p>Converts a string of Unicode symbols to a Punycode string of ASCII symbols.</p>\n<pre><code class="language-js">// encode domain name parts\npunycode.encode(\'mañana\'); // \'maana-pta\'\npunycode.encode(\'☃-⌘\'); // \'--dqo34k\'\n</code></pre>\n<h3><code>punycode.toUnicode(input)</code></h3>\n<p>Converts a Punycode string representing a domain name or an email address to Unicode. Only the Punycoded parts of the input will be converted, i.e. it doesn’t matter if you call it on a string that has already been converted to Unicode.</p>\n<pre><code class="language-js">// decode domain names\npunycode.toUnicode(\'xn--maana-pta.com\');\n// → \'mañana.com\'\npunycode.toUnicode(\'xn----dqo34k.com\');\n// → \'☃-⌘.com\'\n\n// decode email addresses\npunycode.toUnicode(\'джумла@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq\');\n// → \'джумла@джpумлатест.bрфa\'\n</code></pre>\n<h3><code>punycode.toASCII(input)</code></h3>\n<p>Converts a lowercased Unicode string representing a domain name or an email address to Punycode. Only the non-ASCII parts of the input will be converted, i.e. it doesn’t matter if you call it with a domain that’s already in ASCII.</p>\n<pre><code class="language-js">// encode domain names\npunycode.toASCII(\'mañana.com\');\n// → \'xn--maana-pta.com\'\npunycode.toASCII(\'☃-⌘.com\');\n// → \'xn----dqo34k.com\'\n\n// encode email addresses\npunycode.toASCII(\'джумла@джpумлатест.bрфa\');\n// → \'джумла@xn--p-8sbkgc5ag7bhce.xn--ba-lmcq\'\n</code></pre>\n<h3><code>punycode.ucs2</code></h3>\n<h4><code>punycode.ucs2.decode(string)</code></h4>\n<p>Creates an array containing the numeric code point values of each Unicode symbol in the string. While <a href="https://mathiasbynens.be/notes/javascript-encoding">JavaScript uses UCS-2 internally</a>, this function will convert a pair of surrogate halves (each of which UCS-2 exposes as separate characters) into a single code point, matching UTF-16.</p>\n<pre><code class="language-js">punycode.ucs2.decode(\'abc\');\n// → [0x61, 0x62, 0x63]\n// surrogate pair for U+1D306 TETRAGRAM FOR CENTRE:\npunycode.ucs2.decode(\'\\uD834\\uDF06\');\n// → [0x1D306]\n</code></pre>\n<h4><code>punycode.ucs2.encode(codePoints)</code></h4>\n<p>Creates a string based on an array of numeric code point values.</p>\n<pre><code class="language-js">punycode.ucs2.encode([0x61, 0x62, 0x63]);\n// → \'abc\'\npunycode.ucs2.encode([0x1D306]);\n// → \'\\uD834\\uDF06\'\n</code></pre>\n<h3><code>punycode.version</code></h3>\n<p>A string representing the current Punycode.js version number.</p>\n<h2>Unit tests &#x26; code coverage</h2>\n<p>After cloning this repository, run <code>npm install --dev</code> to install the dependencies needed for Punycode.js development and testing. You may want to install Istanbul <em>globally</em> using <code>npm install istanbul -g</code>.</p>\n<p>Once that’s done, you can run the unit tests in Node using <code>npm test</code> or <code>node tests/tests.js</code>. To run the tests in Rhino, Ringo, Narwhal, PhantomJS, and web browsers as well, use <code>grunt test</code>.</p>\n<p>To generate the code coverage report, use <code>grunt cover</code>.</p>\n<p>Feel free to fork if you see possible improvements!</p>\n<h2>Author</h2>\n<table>\n<thead>\n<tr>\n<th><a href="https://twitter.com/mathias" title="Follow @mathias on Twitter"><img src="https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70" alt="twitter/mathias"></a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href="https://mathiasbynens.be/">Mathias Bynens</a></td>\n</tr>\n</tbody>\n</table>\n<h2>Contributors</h2>\n<table>\n<thead>\n<tr>\n<th><a href="https://twitter.com/jdalton" title="Follow @jdalton on Twitter"><img src="https://gravatar.com/avatar/299a3d891ff1920b69c364d061007043?s=70" alt="twitter/jdalton"></a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href="http://allyoucanleet.com/">John-David Dalton</a></td>\n</tr>\n</tbody>\n</table>\n<h2>License</h2>\n<p>Punycode.js is available under the <a href="https://mths.be/mit">MIT</a> license.</p>',docPath:"argo-ci/node_modules/punycode/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-punycode-readme-html-c0c1be187ca668e10e91.js.map