{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-kuler-3bc5842fd0fee8d85607.js","webpack:///./.cache/json/docs-argo-ci-node-modules-kuler.json"],"names":["webpackJsonp","2817","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,mzCAAgtCC,QAAA,oCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-kuler-3bc5842fd0fee8d85607.js","sourcesContent":["webpackJsonp([167115070642756],{\n\n/***/ 2817:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>kuler</h1>\\n<p>Kuler is small and nifty node module that allows you to create terminal based\\ncolors using hex color codes, just like you're used to doing in your CSS. We're\\nin a modern world now and terminals support more than 16 colors so we are stupid\\nto not take advantage of this.</p>\\n<h2>Installation</h2>\\n<pre><code>npm install --save kuler\\n</code></pre>\\n<h2>Usage</h2>\\n<p>Kuler provides a really low level API as we all have different opinions on how\\nto build and write coloring libraries. To use it you first have to require it:</p>\\n<pre><code class=\\\"language-js\\\">'use strict';\\n\\nvar kuler = require('kuler');\\n</code></pre>\\n<p>There are two different API's that you can use. A constructor based API which\\nuses a <code>.style</code> method to color your text:</p>\\n<pre><code class=\\\"language-js\\\">var str = kuler('foo').style('#FFF');\\n</code></pre>\\n<p>Or an alternate short version:</p>\\n<pre><code class=\\\"language-js\\\">var str = kuler('foo', 'red');\\n</code></pre>\\n<p>The color code sequence is automatically terminated at the end of the string so\\nthe colors do no bleed to other pieces of text. So doing:</p>\\n<pre><code class=\\\"language-js\\\">console.log(kuler('red', 'red'), 'normal');\\n</code></pre>\\n<p>Will work without any issues.</p>\\n<h2>License</h2>\\n<p><a href=\\\"LICENSE\\\">MIT</a></p>\",\"docPath\":\"argo-ci/node_modules/kuler/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-kuler-3bc5842fd0fee8d85607.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>kuler</h1>\\n<p>Kuler is small and nifty node module that allows you to create terminal based\\ncolors using hex color codes, just like you're used to doing in your CSS. We're\\nin a modern world now and terminals support more than 16 colors so we are stupid\\nto not take advantage of this.</p>\\n<h2>Installation</h2>\\n<pre><code>npm install --save kuler\\n</code></pre>\\n<h2>Usage</h2>\\n<p>Kuler provides a really low level API as we all have different opinions on how\\nto build and write coloring libraries. To use it you first have to require it:</p>\\n<pre><code class=\\\"language-js\\\">'use strict';\\n\\nvar kuler = require('kuler');\\n</code></pre>\\n<p>There are two different API's that you can use. A constructor based API which\\nuses a <code>.style</code> method to color your text:</p>\\n<pre><code class=\\\"language-js\\\">var str = kuler('foo').style('#FFF');\\n</code></pre>\\n<p>Or an alternate short version:</p>\\n<pre><code class=\\\"language-js\\\">var str = kuler('foo', 'red');\\n</code></pre>\\n<p>The color code sequence is automatically terminated at the end of the string so\\nthe colors do no bleed to other pieces of text. So doing:</p>\\n<pre><code class=\\\"language-js\\\">console.log(kuler('red', 'red'), 'normal');\\n</code></pre>\\n<p>Will work without any issues.</p>\\n<h2>License</h2>\\n<p><a href=\\\"LICENSE\\\">MIT</a></p>\",\"docPath\":\"argo-ci/node_modules/kuler/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-kuler.json\n// module id = 2817\n// module chunks = 167115070642756"],"sourceRoot":""}