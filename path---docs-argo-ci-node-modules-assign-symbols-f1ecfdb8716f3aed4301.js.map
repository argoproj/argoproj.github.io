{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-assign-symbols-f1ecfdb8716f3aed4301.js","webpack:///./.cache/json/docs-argo-ci-node-modules-assign-symbols.json"],"names":["webpackJsonp","2058","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,gBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,mzGAA2qFC,QAAA,6CAAAC,KAAA","file":"path---docs-argo-ci-node-modules-assign-symbols-f1ecfdb8716f3aed4301.js","sourcesContent":["webpackJsonp([16581015685576],{\n\n/***/ 2058:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>assign-symbols <a href=\\\"http://badge.fury.io/js/assign-symbols\\\"><img src=\\\"https://badge.fury.io/js/assign-symbols.svg\\\" alt=\\\"NPM version\\\"></a></h1>\\n<blockquote>\\n<p>Assign the enumerable es6 Symbol properties from an object (or objects) to the first object passed on the arguments. Can be used as a supplement to other extend, assign or merge methods as a polyfill for the Symbols part of the es6 Object.assign method.</p>\\n</blockquote>\\n<p>From the <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\\\">Mozilla Developer docs for Symbol</a>:</p>\\n<blockquote>\\n<p>A symbol is a unique and immutable data type and may be used as an identifier for object properties. The symbol object is an implicit object wrapper for the symbol primitive data type.</p>\\n</blockquote>\\n<h2>Install</h2>\\n<p>Install with <a href=\\\"https://www.npmjs.com/\\\">npm</a></p>\\n<pre><code class=\\\"language-sh\\\">$ npm i assign-symbols --save\\n</code></pre>\\n<h2>Usage</h2>\\n<pre><code class=\\\"language-js\\\">var assignSymbols = require('assign-symbols');\\nvar obj = {};\\n\\nvar one = {};\\nvar symbolOne = Symbol('aaa');\\none[symbolOne] = 'bbb';\\n\\nvar two = {};\\nvar symbolTwo = Symbol('ccc');\\ntwo[symbolTwo] = 'ddd';\\n\\nassignSymbols(obj, one, two);\\n\\nconsole.log(obj[symbolOne]);\\n//=> 'bbb'\\nconsole.log(obj[symbolTwo]);\\n//=> 'ddd'\\n</code></pre>\\n<h2>Similar projects</h2>\\n<ul>\\n<li><a href=\\\"https://www.npmjs.com/package/assign-deep\\\">assign-deep</a>: Deeply assign the enumerable properties of source objects to a destination object. | <a href=\\\"https://github.com/jonschlinkert/assign-deep\\\">homepage</a></li>\\n<li><a href=\\\"https://www.npmjs.com/package/clone-deep\\\">clone-deep</a>: Recursively (deep) clone JavaScript native types, like Object, Array, RegExp, Date as well as primitives. | <a href=\\\"https://github.com/jonschlinkert/clone-deep\\\">homepage</a></li>\\n<li><a href=\\\"https://www.npmjs.com/package/extend-shallow\\\">extend-shallow</a>: Extend an object with the properties of additional objects. node.js/javascript util. | <a href=\\\"https://github.com/jonschlinkert/extend-shallow\\\">homepage</a></li>\\n<li><a href=\\\"https://www.npmjs.com/package/merge-deep\\\">merge-deep</a>: Recursively merge values in a javascript object. | <a href=\\\"https://github.com/jonschlinkert/merge-deep\\\">homepage</a></li>\\n<li><a href=\\\"https://www.npmjs.com/package/mixin-deep\\\">mixin-deep</a>: Deeply mix the properties of objects into the first object. Like merge-deep, but doesn't clone. | <a href=\\\"https://github.com/jonschlinkert/mixin-deep\\\">homepage</a></li>\\n</ul>\\n<h2>Running tests</h2>\\n<p>Install dev dependencies:</p>\\n<pre><code class=\\\"language-sh\\\">$ npm i -d &#x26;&#x26; npm test\\n</code></pre>\\n<h2>Contributing</h2>\\n<p>Pull requests and stars are always welcome. For bugs and feature requests, <a href=\\\"https://github.com/jonschlinkert/assign-symbols/issues/new\\\">please create an issue</a>.</p>\\n<h2>Author</h2>\\n<p><strong>Jon Schlinkert</strong></p>\\n<ul>\\n<li><a href=\\\"https://github.com/jonschlinkert\\\">github/jonschlinkert</a></li>\\n<li><a href=\\\"http://twitter.com/jonschlinkert\\\">twitter/jonschlinkert</a></li>\\n</ul>\\n<h2>License</h2>\\n<p>Copyright © 2015 Jon Schlinkert\\nReleased under the MIT license.</p>\\n<hr>\\n<p><em>This file was generated by <a href=\\\"https://github.com/assemble/verb-cli\\\">verb-cli</a> on November 06, 2015.</em></p>\",\"docPath\":\"argo-ci/node_modules/assign-symbols/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-assign-symbols-f1ecfdb8716f3aed4301.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>assign-symbols <a href=\\\"http://badge.fury.io/js/assign-symbols\\\"><img src=\\\"https://badge.fury.io/js/assign-symbols.svg\\\" alt=\\\"NPM version\\\"></a></h1>\\n<blockquote>\\n<p>Assign the enumerable es6 Symbol properties from an object (or objects) to the first object passed on the arguments. Can be used as a supplement to other extend, assign or merge methods as a polyfill for the Symbols part of the es6 Object.assign method.</p>\\n</blockquote>\\n<p>From the <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\\\">Mozilla Developer docs for Symbol</a>:</p>\\n<blockquote>\\n<p>A symbol is a unique and immutable data type and may be used as an identifier for object properties. The symbol object is an implicit object wrapper for the symbol primitive data type.</p>\\n</blockquote>\\n<h2>Install</h2>\\n<p>Install with <a href=\\\"https://www.npmjs.com/\\\">npm</a></p>\\n<pre><code class=\\\"language-sh\\\">$ npm i assign-symbols --save\\n</code></pre>\\n<h2>Usage</h2>\\n<pre><code class=\\\"language-js\\\">var assignSymbols = require('assign-symbols');\\nvar obj = {};\\n\\nvar one = {};\\nvar symbolOne = Symbol('aaa');\\none[symbolOne] = 'bbb';\\n\\nvar two = {};\\nvar symbolTwo = Symbol('ccc');\\ntwo[symbolTwo] = 'ddd';\\n\\nassignSymbols(obj, one, two);\\n\\nconsole.log(obj[symbolOne]);\\n//=> 'bbb'\\nconsole.log(obj[symbolTwo]);\\n//=> 'ddd'\\n</code></pre>\\n<h2>Similar projects</h2>\\n<ul>\\n<li><a href=\\\"https://www.npmjs.com/package/assign-deep\\\">assign-deep</a>: Deeply assign the enumerable properties of source objects to a destination object. | <a href=\\\"https://github.com/jonschlinkert/assign-deep\\\">homepage</a></li>\\n<li><a href=\\\"https://www.npmjs.com/package/clone-deep\\\">clone-deep</a>: Recursively (deep) clone JavaScript native types, like Object, Array, RegExp, Date as well as primitives. | <a href=\\\"https://github.com/jonschlinkert/clone-deep\\\">homepage</a></li>\\n<li><a href=\\\"https://www.npmjs.com/package/extend-shallow\\\">extend-shallow</a>: Extend an object with the properties of additional objects. node.js/javascript util. | <a href=\\\"https://github.com/jonschlinkert/extend-shallow\\\">homepage</a></li>\\n<li><a href=\\\"https://www.npmjs.com/package/merge-deep\\\">merge-deep</a>: Recursively merge values in a javascript object. | <a href=\\\"https://github.com/jonschlinkert/merge-deep\\\">homepage</a></li>\\n<li><a href=\\\"https://www.npmjs.com/package/mixin-deep\\\">mixin-deep</a>: Deeply mix the properties of objects into the first object. Like merge-deep, but doesn't clone. | <a href=\\\"https://github.com/jonschlinkert/mixin-deep\\\">homepage</a></li>\\n</ul>\\n<h2>Running tests</h2>\\n<p>Install dev dependencies:</p>\\n<pre><code class=\\\"language-sh\\\">$ npm i -d &#x26;&#x26; npm test\\n</code></pre>\\n<h2>Contributing</h2>\\n<p>Pull requests and stars are always welcome. For bugs and feature requests, <a href=\\\"https://github.com/jonschlinkert/assign-symbols/issues/new\\\">please create an issue</a>.</p>\\n<h2>Author</h2>\\n<p><strong>Jon Schlinkert</strong></p>\\n<ul>\\n<li><a href=\\\"https://github.com/jonschlinkert\\\">github/jonschlinkert</a></li>\\n<li><a href=\\\"http://twitter.com/jonschlinkert\\\">twitter/jonschlinkert</a></li>\\n</ul>\\n<h2>License</h2>\\n<p>Copyright © 2015 Jon Schlinkert\\nReleased under the MIT license.</p>\\n<hr>\\n<p><em>This file was generated by <a href=\\\"https://github.com/assemble/verb-cli\\\">verb-cli</a> on November 06, 2015.</em></p>\",\"docPath\":\"argo-ci/node_modules/assign-symbols/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-assign-symbols.json\n// module id = 2058\n// module chunks = 16581015685576"],"sourceRoot":""}