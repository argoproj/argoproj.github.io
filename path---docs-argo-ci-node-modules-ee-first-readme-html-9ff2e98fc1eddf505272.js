webpackJsonp([0xd969db9c41e2],{2263:function(e,t){e.exports={pathContext:{docHtml:'<h1>EE First</h1>\n<p><a href="https://npmjs.org/package/ee-first"><img src="https://img.shields.io/npm/v/ee-first.svg?style=flat-square" alt="NPM version"></a>\n<a href="https://travis-ci.org/jonathanong/ee-first"><img src="https://img.shields.io/travis/jonathanong/ee-first.svg?style=flat-square" alt="Build status"></a>\n<a href="https://coveralls.io/r/jonathanong/ee-first?branch=master"><img src="https://img.shields.io/coveralls/jonathanong/ee-first.svg?style=flat-square" alt="Test coverage"></a>\n<a href="LICENSE.md"><img src="http://img.shields.io/npm/l/ee-first.svg?style=flat-square" alt="License"></a>\n<a href="https://npmjs.org/package/ee-first"><img src="http://img.shields.io/npm/dm/ee-first.svg?style=flat-square" alt="Downloads"></a>\n<a href="https://www.gittip.com/jonathanong/"><img src="https://img.shields.io/gittip/jonathanong.svg?style=flat-square" alt="Gittip"></a></p>\n<p>Get the first event in a set of event emitters and event pairs,\nthen clean up after itself.</p>\n<h2>Install</h2>\n<pre><code class="language-sh">$ npm install ee-first\n</code></pre>\n<h2>API</h2>\n<pre><code class="language-js">var first = require(\'ee-first\')\n</code></pre>\n<h3>first(arr, listener)</h3>\n<p>Invoke <code>listener</code> on the first event from the list specified in <code>arr</code>. <code>arr</code> is\nan array of arrays, with each array in the format <code>[ee, ...event]</code>. <code>listener</code>\nwill be called only once, the first time any of the given events are emitted. If\n<code>error</code> is one of the listened events, then if that fires first, the <code>listener</code>\nwill be given the <code>err</code> argument.</p>\n<p>The <code>listener</code> is invoked as <code>listener(err, ee, event, args)</code>, where <code>err</code> is the\nfirst argument emitted from an <code>error</code> event, if applicable; <code>ee</code> is the event\nemitter that fired; <code>event</code> is the string event name that fired; and <code>args</code> is an\narray of the arguments that were emitted on the event.</p>\n<pre><code class="language-js">var ee1 = new EventEmitter()\nvar ee2 = new EventEmitter()\n\nfirst([\n  [ee1, \'close\', \'end\', \'error\'],\n  [ee2, \'error\']\n], function (err, ee, event, args) {\n  // listener invoked\n})\n</code></pre>\n<h4>.cancel()</h4>\n<p>The group of listeners can be cancelled before being invoked and have all the event\nlisteners removed from the underlying event emitters.</p>\n<pre><code class="language-js">var thunk = first([\n  [ee1, \'close\', \'end\', \'error\'],\n  [ee2, \'error\']\n], function (err, ee, event, args) {\n  // listener invoked\n})\n\n// cancel and clean up\nthunk.cancel()\n</code></pre>',docPath:"argo-ci/node_modules/ee-first/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-ee-first-readme-html-9ff2e98fc1eddf505272.js.map