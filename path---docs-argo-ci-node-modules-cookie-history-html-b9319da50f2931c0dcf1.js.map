{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-cookie-history-html-b9319da50f2931c0dcf1.js","webpack:///./.cache/json/docs-argo-ci-node-modules-cookie-history-html.json"],"names":["webpackJsonp","2200","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,isGAAAC,QAAA,sCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-cookie-history-html-b9319da50f2931c0dcf1.js","sourcesContent":["webpackJsonp([92920172844295],{\n\n/***/ 2200:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>0.3.1 / 2016-05-26</h1>\\n<ul>\\n<li>\\n<p>Fix <code>sameSite: true</code> to work with draft-7 clients</p>\\n<ul>\\n<li><code>true</code> now sends <code>SameSite=Strict</code> instead of <code>SameSite</code></li>\\n</ul>\\n</li>\\n</ul>\\n<h1>0.3.0 / 2016-05-26</h1>\\n<ul>\\n<li>\\n<p>Add <code>sameSite</code> option</p>\\n<ul>\\n<li>Replaces <code>firstPartyOnly</code> option, never implemented by browsers</li>\\n</ul>\\n</li>\\n<li>Improve error message when <code>encode</code> is not a function</li>\\n<li>Improve error message when <code>expires</code> is not a <code>Date</code></li>\\n</ul>\\n<h1>0.2.4 / 2016-05-20</h1>\\n<ul>\\n<li>perf: enable strict mode</li>\\n<li>perf: use for loop in parse</li>\\n<li>perf: use string concatination for serialization</li>\\n</ul>\\n<h1>0.2.3 / 2015-10-25</h1>\\n<ul>\\n<li>Fix cookie <code>Max-Age</code> to never be a floating point number</li>\\n</ul>\\n<h1>0.2.2 / 2015-09-17</h1>\\n<ul>\\n<li>\\n<p>Fix regression when setting empty cookie value</p>\\n<ul>\\n<li>Ease the new restriction, which is just basic header-level validation</li>\\n</ul>\\n</li>\\n<li>Fix typo in invalid value errors</li>\\n</ul>\\n<h1>0.2.1 / 2015-09-17</h1>\\n<ul>\\n<li>\\n<p>Throw on invalid values provided to <code>serialize</code></p>\\n<ul>\\n<li>Ensures the resulting string is a valid HTTP header value</li>\\n</ul>\\n</li>\\n</ul>\\n<h1>0.2.0 / 2015-08-13</h1>\\n<ul>\\n<li>Add <code>firstPartyOnly</code> option</li>\\n<li>Throw better error for invalid argument to parse</li>\\n<li>perf: hoist regular expression</li>\\n</ul>\\n<h1>0.1.5 / 2015-09-17</h1>\\n<ul>\\n<li>\\n<p>Fix regression when setting empty cookie value</p>\\n<ul>\\n<li>Ease the new restriction, which is just basic header-level validation</li>\\n</ul>\\n</li>\\n<li>Fix typo in invalid value errors</li>\\n</ul>\\n<h1>0.1.4 / 2015-09-17</h1>\\n<ul>\\n<li>Throw better error for invalid argument to parse</li>\\n<li>\\n<p>Throw on invalid values provided to <code>serialize</code></p>\\n<ul>\\n<li>Ensures the resulting string is a valid HTTP header value</li>\\n</ul>\\n</li>\\n</ul>\\n<h1>0.1.3 / 2015-05-19</h1>\\n<ul>\\n<li>Reduce the scope of try-catch deopt</li>\\n<li>Remove argument reassignments</li>\\n</ul>\\n<h1>0.1.2 / 2014-04-16</h1>\\n<ul>\\n<li>Remove unnecessary files from npm package</li>\\n</ul>\\n<h1>0.1.1 / 2014-02-23</h1>\\n<ul>\\n<li>Fix bad parse when cookie value contained a comma</li>\\n<li>Fix support for <code>maxAge</code> of <code>0</code></li>\\n</ul>\\n<h1>0.1.0 / 2013-05-01</h1>\\n<ul>\\n<li>Add <code>decode</code> option</li>\\n<li>Add <code>encode</code> option</li>\\n</ul>\\n<h1>0.0.6 / 2013-04-08</h1>\\n<ul>\\n<li>Ignore cookie parts missing <code>=</code></li>\\n</ul>\\n<h1>0.0.5 / 2012-10-29</h1>\\n<ul>\\n<li>Return raw cookie value if value unescape errors</li>\\n</ul>\\n<h1>0.0.4 / 2012-06-21</h1>\\n<ul>\\n<li>\\n<p>Use encode/decodeURIComponent for cookie encoding/decoding</p>\\n<ul>\\n<li>Improve server/client interoperability</li>\\n</ul>\\n</li>\\n</ul>\\n<h1>0.0.3 / 2012-06-06</h1>\\n<ul>\\n<li>Only escape special characters per the cookie RFC</li>\\n</ul>\\n<h1>0.0.2 / 2012-06-01</h1>\\n<ul>\\n<li>Fix <code>maxAge</code> option to not throw error</li>\\n</ul>\\n<h1>0.0.1 / 2012-05-28</h1>\\n<ul>\\n<li>Add more tests</li>\\n</ul>\\n<h1>0.0.0 / 2012-05-28</h1>\\n<ul>\\n<li>Initial release</li>\\n</ul>\",\"docPath\":\"argo-ci/node_modules/cookie/history\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-cookie-history-html-b9319da50f2931c0dcf1.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>0.3.1 / 2016-05-26</h1>\\n<ul>\\n<li>\\n<p>Fix <code>sameSite: true</code> to work with draft-7 clients</p>\\n<ul>\\n<li><code>true</code> now sends <code>SameSite=Strict</code> instead of <code>SameSite</code></li>\\n</ul>\\n</li>\\n</ul>\\n<h1>0.3.0 / 2016-05-26</h1>\\n<ul>\\n<li>\\n<p>Add <code>sameSite</code> option</p>\\n<ul>\\n<li>Replaces <code>firstPartyOnly</code> option, never implemented by browsers</li>\\n</ul>\\n</li>\\n<li>Improve error message when <code>encode</code> is not a function</li>\\n<li>Improve error message when <code>expires</code> is not a <code>Date</code></li>\\n</ul>\\n<h1>0.2.4 / 2016-05-20</h1>\\n<ul>\\n<li>perf: enable strict mode</li>\\n<li>perf: use for loop in parse</li>\\n<li>perf: use string concatination for serialization</li>\\n</ul>\\n<h1>0.2.3 / 2015-10-25</h1>\\n<ul>\\n<li>Fix cookie <code>Max-Age</code> to never be a floating point number</li>\\n</ul>\\n<h1>0.2.2 / 2015-09-17</h1>\\n<ul>\\n<li>\\n<p>Fix regression when setting empty cookie value</p>\\n<ul>\\n<li>Ease the new restriction, which is just basic header-level validation</li>\\n</ul>\\n</li>\\n<li>Fix typo in invalid value errors</li>\\n</ul>\\n<h1>0.2.1 / 2015-09-17</h1>\\n<ul>\\n<li>\\n<p>Throw on invalid values provided to <code>serialize</code></p>\\n<ul>\\n<li>Ensures the resulting string is a valid HTTP header value</li>\\n</ul>\\n</li>\\n</ul>\\n<h1>0.2.0 / 2015-08-13</h1>\\n<ul>\\n<li>Add <code>firstPartyOnly</code> option</li>\\n<li>Throw better error for invalid argument to parse</li>\\n<li>perf: hoist regular expression</li>\\n</ul>\\n<h1>0.1.5 / 2015-09-17</h1>\\n<ul>\\n<li>\\n<p>Fix regression when setting empty cookie value</p>\\n<ul>\\n<li>Ease the new restriction, which is just basic header-level validation</li>\\n</ul>\\n</li>\\n<li>Fix typo in invalid value errors</li>\\n</ul>\\n<h1>0.1.4 / 2015-09-17</h1>\\n<ul>\\n<li>Throw better error for invalid argument to parse</li>\\n<li>\\n<p>Throw on invalid values provided to <code>serialize</code></p>\\n<ul>\\n<li>Ensures the resulting string is a valid HTTP header value</li>\\n</ul>\\n</li>\\n</ul>\\n<h1>0.1.3 / 2015-05-19</h1>\\n<ul>\\n<li>Reduce the scope of try-catch deopt</li>\\n<li>Remove argument reassignments</li>\\n</ul>\\n<h1>0.1.2 / 2014-04-16</h1>\\n<ul>\\n<li>Remove unnecessary files from npm package</li>\\n</ul>\\n<h1>0.1.1 / 2014-02-23</h1>\\n<ul>\\n<li>Fix bad parse when cookie value contained a comma</li>\\n<li>Fix support for <code>maxAge</code> of <code>0</code></li>\\n</ul>\\n<h1>0.1.0 / 2013-05-01</h1>\\n<ul>\\n<li>Add <code>decode</code> option</li>\\n<li>Add <code>encode</code> option</li>\\n</ul>\\n<h1>0.0.6 / 2013-04-08</h1>\\n<ul>\\n<li>Ignore cookie parts missing <code>=</code></li>\\n</ul>\\n<h1>0.0.5 / 2012-10-29</h1>\\n<ul>\\n<li>Return raw cookie value if value unescape errors</li>\\n</ul>\\n<h1>0.0.4 / 2012-06-21</h1>\\n<ul>\\n<li>\\n<p>Use encode/decodeURIComponent for cookie encoding/decoding</p>\\n<ul>\\n<li>Improve server/client interoperability</li>\\n</ul>\\n</li>\\n</ul>\\n<h1>0.0.3 / 2012-06-06</h1>\\n<ul>\\n<li>Only escape special characters per the cookie RFC</li>\\n</ul>\\n<h1>0.0.2 / 2012-06-01</h1>\\n<ul>\\n<li>Fix <code>maxAge</code> option to not throw error</li>\\n</ul>\\n<h1>0.0.1 / 2012-05-28</h1>\\n<ul>\\n<li>Add more tests</li>\\n</ul>\\n<h1>0.0.0 / 2012-05-28</h1>\\n<ul>\\n<li>Initial release</li>\\n</ul>\",\"docPath\":\"argo-ci/node_modules/cookie/history\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-cookie-history-html.json\n// module id = 2200\n// module chunks = 92920172844295"],"sourceRoot":""}