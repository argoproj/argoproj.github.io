webpackJsonp([0x994b6cd76495],{2908:function(e,n){e.exports={pathContext:{docHtml:'<h2>JSON</h2>\n<p>The <em>JSON</em> object provides the c++ versions of the methods offered by the <code>JSON</code> object in javascript. V8 exposes these methods via the <code>v8::JSON</code> object.</p>\n<ul>\n<li><a href="#api_nan_json_parse"><b><code>Nan::JSON.Parse</code></b></a></li>\n<li><a href="#api_nan_json_stringify"><b><code>Nan::JSON.Stringify</code></b></a></li>\n</ul>\n<p>Refer to the V8 JSON object in the <a href="https://v8docs.nodesource.com/node-7.4/da/d6f/classv8_1_1_j_s_o_n.html">V8 documentation</a> for more information about these methods and their arguments.</p>\n<p><a name="api_nan_json_parse"></a></p>\n<h3>Nan::JSON.Parse</h3>\n<p>A simple wrapper around <a href="https://v8docs.nodesource.com/node-7.4/da/d6f/classv8_1_1_j_s_o_n.html#a936310d2540fb630ed37d3ee3ffe4504"><code>v8::JSON::Parse</code></a>.</p>\n<p>Definition:</p>\n<pre><code class="language-c++">Nan::MaybeLocal&#x3C;v8::Value> Nan::JSON::Parse(v8::Local&#x3C;v8::String> json_string);\n</code></pre>\n<p>Use <code>JSON.Parse(json_string)</code> to parse a string into a <code>v8::Value</code>.</p>\n<p>Example:</p>\n<pre><code class="language-c++">v8::Local&#x3C;v8::String> json_string = Nan::New("{ \\"JSON\\": \\"object\\" }").ToLocalChecked();\n\nNan::JSON NanJSON;\nNan::MaybeLocal&#x3C;v8::Value> result = NanJSON.Parse(json_string);\nif (!result.IsEmpty()) {\n  v8::Local&#x3C;v8::Value> val = result.ToLocalChecked();\n}\n</code></pre>\n<p><a name="api_nan_json_stringify"></a></p>\n<h3>Nan::JSON.Stringify</h3>\n<p>A simple wrapper around <a href="https://v8docs.nodesource.com/node-7.4/da/d6f/classv8_1_1_j_s_o_n.html#a44b255c3531489ce43f6110209138860"><code>v8::JSON::Stringify</code></a>.</p>\n<p>Definition:</p>\n<pre><code class="language-c++">Nan::MaybeLocal&#x3C;v8::String> Nan::JSON::Stringify(v8::Local&#x3C;v8::Object> json_object, v8::Local&#x3C;v8::String> gap = v8::Local&#x3C;v8::String>());\n</code></pre>\n<p>Use <code>JSON.Stringify(value)</code> to stringify a <code>v8::Object</code>.</p>\n<p>Example:</p>\n<pre><code class="language-c++">// using `v8::Local&#x3C;v8::Value> val` from the `JSON::Parse` example\nv8::Local&#x3C;v8::Object> obj = Nan::To&#x3C;v8::Object>(val).ToLocalChecked();\n\nNan::JSON NanJSON;\nNan::MaybeLocal&#x3C;v8::String> result = NanJSON.Stringify(obj);\nif (!result.IsEmpty()) {\n  v8::Local&#x3C;v8::String> stringified = result.ToLocalChecked();\n}\n</code></pre>',docPath:"argo-ci/node_modules/nan/doc/json",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-nan-doc-json-html-e50d8eab3c6725dc21a7.js.map