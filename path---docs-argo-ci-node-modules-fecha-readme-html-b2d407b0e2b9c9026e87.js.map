{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-fecha-readme-html-b2d407b0e2b9c9026e87.js","webpack:///./.cache/json/docs-argo-ci-node-modules-fecha-readme-html.json"],"names":["webpackJsonp","2328","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,gBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,ggNAA40HC,QAAA,oCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-fecha-readme-html-b2d407b0e2b9c9026e87.js","sourcesContent":["webpackJsonp([17301664606974],{\n\n/***/ 2328:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>fecha <a href=\\\"https://travis-ci.org/taylorhakes/fecha\\\"><img src=\\\"https://travis-ci.org/taylorhakes/fecha.svg?branch=master\\\" alt=\\\"Build Status\\\"></a></h1>\\n<p>Lightweight date formatting and parsing (~2KB). Meant to replace parsing and formatting functionality of moment.js.</p>\\n<h3>NPM</h3>\\n<pre><code>npm install fecha --save\\n</code></pre>\\n<h3>Fecha vs Moment</h3>\\n<table class=\\\"table table-striped table-bordered\\\">\\n  <tbody>\\n    <tr>\\n      <th></th>\\n      <th>Fecha</th>\\n      <th>Moment</th>\\n    </tr>\\n    <tr>\\n      <td><b>Size (Min. and Gzipped)</b></td>\\n      <td>2.1KBs</td>\\n      <td>13.1KBs</td>\\n    </tr>\\n    <tr>\\n      <td><b>Date Parsing</b></td>\\n      <td>&#x2713;</td>\\n      <td>&#x2713;</td>\\n    </tr>\\n    <tr>\\n      <td><b>Date Formatting</b></td>\\n      <td>&#x2713;</td>\\n      <td>&#x2713;</td>\\n    </tr>\\n    <tr>\\n      <td><b>Date Manipulation</b></td>\\n      <td></td>\\n      <td>&#x2713;</td>\\n    </tr>\\n    <tr>\\n      <td><b>I18n Support</b></td>\\n      <td>&#x2713;</td>\\n      <td>&#x2713;</td>\\n    </tr>\\n  </tbody>\\n</table>\\n<h2>Use it</h2>\\n<h4>Formatting</h4>\\n<p><code>fecha.format</code> accepts a Date object (or timestamp) and a string format and returns a formatted string. See below for\\navailable format tokens.</p>\\n<p>Note: <code>fecha.format</code> will throw an error when passed invalid parameters</p>\\n<pre><code class=\\\"language-js\\\">fecha.format(&#x3C;Date Object>, &#x3C;String Format>);\\n\\n// Custom formats\\nfecha.format(new Date(2015, 10, 20), 'dddd MMMM Do, YYYY'); // 'Friday November 20th, 2015'\\nfecha.format(new Date(1998, 5, 3, 15, 23, 10, 350), 'YYYY-MM-DD hh:mm:ss.SSS A'); // '1998-06-03 03:23:10.350 PM'\\n\\n// Named masks\\nfecha.format(new Date(2015, 10, 20), 'mediumDate'); // 'Nov 20, 2015'\\nfecha.format(new Date(2015, 2, 10, 5, 30, 20), 'shortTime'); // '05:30'\\n\\n// Literals\\nfecha.format(new Date(2001, 2, 5, 6, 7, 2, 5), '[on] MM-DD-YYYY [at] HH:mm'); // 'on 03-05-2001 at 06:07'\\n</code></pre>\\n<h4>Parsing</h4>\\n<p><code>fecha.parse</code> accepts a Date string and a string format and returns a Date object. See below for available format tokens.</p>\\n<p>Note: <code>fecha.parse</code> will throw an error when passed invalid parameters</p>\\n<pre><code class=\\\"language-js\\\">// Custom formats\\nfecha.parse('February 3rd, 2014', 'MMMM Do, YYYY'); // new Date(2014, 1, 3)\\nfecha.parse('10-12-10 14:11:12', 'YY-MM-DD HH:mm:ss'); // new Date(2010, 11, 10, 14, 11, 12)\\n\\n// Named masks\\nfecha.parse('5/3/98', 'shortDate'); // new Date(1998, 4, 3)\\nfecha.parse('November 4, 2005', 'longDate'); // new Date(2005, 10, 4)\\n</code></pre>\\n<h4>i18n Support</h4>\\n<pre><code class=\\\"language-js\\\">// Override fecha.i18n to support any language\\nfecha.i18n = {\\n    dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'],\\n    dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\\n    monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\\n    amPm: ['am', 'pm'],\\n    // D is the day of the month, function returns something like...  3rd or 11th\\n    DoFn: function (D) {\\n        return D + [ 'th', 'st', 'nd', 'rd' ][ D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10 ];\\n    }\\n}\\n</code></pre>\\n<h4>Custom Named Masks</h4>\\n<pre><code class=\\\"language-js\\\">fecha.masks = {\\n    default: 'ddd MMM DD YYYY HH:mm:ss',\\n    shortDate: 'M/D/YY',\\n    mediumDate: 'MMM D, YYYY',\\n    longDate: 'MMMM D, YYYY',\\n    fullDate: 'dddd, MMMM D, YYYY',\\n    shortTime: 'HH:mm',\\n    mediumTime: 'HH:mm:ss',\\n    longTime: 'HH:mm:ss.SSS'\\n};\\n\\n// Create a new mask\\nfecha.masks.myMask = 'HH:mm:ss YY/MM/DD';\\n\\n// Use it\\nfecha.format(new Date(2014, 5, 6, 14, 10, 45), 'myMask'); // '14:10:45 14/06/06'\\n</code></pre>\\n<h3>Formatting Tokens</h3>\\n<table class=\\\"table table-striped table-bordered\\\">\\n  <tbody>\\n    <tr>\\n      <th></th>\\n      <th>Token</th>\\n      <th>Output</th>\\n    </tr>\\n    <tr>\\n      <td><b>Month</b></td>\\n      <td>M</td>\\n      <td>1 2 ... 11 12</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>MM</td>\\n      <td>01 02 ... 11 12</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>MMM</td>\\n      <td>Jan Feb ... Nov Dec</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>MMMM</td>\\n      <td>January February ... November December</td>\\n    </tr>\\n    <tr>\\n      <td><b>Day of Month</b></td>\\n      <td>D</td>\\n      <td>1 2 ... 30 31</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>Do</td>\\n      <td>1st 2nd ... 30th 31st</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>DD</td>\\n      <td>01 02 ... 30 31</td>\\n    </tr>\\n    <tr>\\n      <td><b>Day of Week</b></td>\\n      <td>d</td>\\n      <td>0 1 ... 5 6</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>ddd</td>\\n      <td>Sun Mon ... Fri Sat</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>dddd</td>\\n      <td>Sunday Monday ... Friday Saturday</td>\\n    </tr>\\n    <tr>\\n      <td><b>Year</b></td>\\n      <td>YY</td>\\n      <td>70 71 ... 29 30</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>YYYY</td>\\n      <td>1970 1971 ... 2029 2030</td>\\n    </tr>\\n    <tr>\\n      <td><b>AM/PM</b></td>\\n      <td>A</td>\\n      <td>AM PM</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>a</td>\\n      <td>am pm</td>\\n    </tr>\\n    <tr>\\n      <td><b>Hour</b></td>\\n      <td>H</td>\\n      <td>0 1 ... 22 23</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>HH</td>\\n      <td>00 01 ... 22 23</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>h</td>\\n      <td>1 2 ... 11 12</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>hh</td>\\n      <td>01 02 ... 11 12</td>\\n    </tr>\\n    <tr>\\n      <td><b>Minute</b></td>\\n      <td>m</td>\\n      <td>0 1 ... 58 59</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>mm</td>\\n      <td>00 01 ... 58 59</td>\\n    </tr>\\n    <tr>\\n      <td><b>Second</b></td>\\n      <td>s</td>\\n      <td>0 1 ... 58 59</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>ss</td>\\n      <td>00 01 ... 58 59</td>\\n    </tr>\\n    <tr>\\n      <td><b>Fractional Second</b></td>\\n      <td>S</td>\\n      <td>0 1 ... 8 9</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>SS</td>\\n      <td>0 1 ... 98 99</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>SSS</td>\\n      <td>0 1 ... 998 999</td>\\n    </tr>\\n    <tr>\\n      <td><b>Timezone</b></td>\\n      <td>ZZ</td>\\n      <td>\\n        -0700 -0600 ... +0600 +0700\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\",\"docPath\":\"argo-ci/node_modules/fecha/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-fecha-readme-html-b2d407b0e2b9c9026e87.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>fecha <a href=\\\"https://travis-ci.org/taylorhakes/fecha\\\"><img src=\\\"https://travis-ci.org/taylorhakes/fecha.svg?branch=master\\\" alt=\\\"Build Status\\\"></a></h1>\\n<p>Lightweight date formatting and parsing (~2KB). Meant to replace parsing and formatting functionality of moment.js.</p>\\n<h3>NPM</h3>\\n<pre><code>npm install fecha --save\\n</code></pre>\\n<h3>Fecha vs Moment</h3>\\n<table class=\\\"table table-striped table-bordered\\\">\\n  <tbody>\\n    <tr>\\n      <th></th>\\n      <th>Fecha</th>\\n      <th>Moment</th>\\n    </tr>\\n    <tr>\\n      <td><b>Size (Min. and Gzipped)</b></td>\\n      <td>2.1KBs</td>\\n      <td>13.1KBs</td>\\n    </tr>\\n    <tr>\\n      <td><b>Date Parsing</b></td>\\n      <td>&#x2713;</td>\\n      <td>&#x2713;</td>\\n    </tr>\\n    <tr>\\n      <td><b>Date Formatting</b></td>\\n      <td>&#x2713;</td>\\n      <td>&#x2713;</td>\\n    </tr>\\n    <tr>\\n      <td><b>Date Manipulation</b></td>\\n      <td></td>\\n      <td>&#x2713;</td>\\n    </tr>\\n    <tr>\\n      <td><b>I18n Support</b></td>\\n      <td>&#x2713;</td>\\n      <td>&#x2713;</td>\\n    </tr>\\n  </tbody>\\n</table>\\n<h2>Use it</h2>\\n<h4>Formatting</h4>\\n<p><code>fecha.format</code> accepts a Date object (or timestamp) and a string format and returns a formatted string. See below for\\navailable format tokens.</p>\\n<p>Note: <code>fecha.format</code> will throw an error when passed invalid parameters</p>\\n<pre><code class=\\\"language-js\\\">fecha.format(&#x3C;Date Object>, &#x3C;String Format>);\\n\\n// Custom formats\\nfecha.format(new Date(2015, 10, 20), 'dddd MMMM Do, YYYY'); // 'Friday November 20th, 2015'\\nfecha.format(new Date(1998, 5, 3, 15, 23, 10, 350), 'YYYY-MM-DD hh:mm:ss.SSS A'); // '1998-06-03 03:23:10.350 PM'\\n\\n// Named masks\\nfecha.format(new Date(2015, 10, 20), 'mediumDate'); // 'Nov 20, 2015'\\nfecha.format(new Date(2015, 2, 10, 5, 30, 20), 'shortTime'); // '05:30'\\n\\n// Literals\\nfecha.format(new Date(2001, 2, 5, 6, 7, 2, 5), '[on] MM-DD-YYYY [at] HH:mm'); // 'on 03-05-2001 at 06:07'\\n</code></pre>\\n<h4>Parsing</h4>\\n<p><code>fecha.parse</code> accepts a Date string and a string format and returns a Date object. See below for available format tokens.</p>\\n<p>Note: <code>fecha.parse</code> will throw an error when passed invalid parameters</p>\\n<pre><code class=\\\"language-js\\\">// Custom formats\\nfecha.parse('February 3rd, 2014', 'MMMM Do, YYYY'); // new Date(2014, 1, 3)\\nfecha.parse('10-12-10 14:11:12', 'YY-MM-DD HH:mm:ss'); // new Date(2010, 11, 10, 14, 11, 12)\\n\\n// Named masks\\nfecha.parse('5/3/98', 'shortDate'); // new Date(1998, 4, 3)\\nfecha.parse('November 4, 2005', 'longDate'); // new Date(2005, 10, 4)\\n</code></pre>\\n<h4>i18n Support</h4>\\n<pre><code class=\\\"language-js\\\">// Override fecha.i18n to support any language\\nfecha.i18n = {\\n    dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'],\\n    dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\\n    monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\\n    amPm: ['am', 'pm'],\\n    // D is the day of the month, function returns something like...  3rd or 11th\\n    DoFn: function (D) {\\n        return D + [ 'th', 'st', 'nd', 'rd' ][ D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10 ];\\n    }\\n}\\n</code></pre>\\n<h4>Custom Named Masks</h4>\\n<pre><code class=\\\"language-js\\\">fecha.masks = {\\n    default: 'ddd MMM DD YYYY HH:mm:ss',\\n    shortDate: 'M/D/YY',\\n    mediumDate: 'MMM D, YYYY',\\n    longDate: 'MMMM D, YYYY',\\n    fullDate: 'dddd, MMMM D, YYYY',\\n    shortTime: 'HH:mm',\\n    mediumTime: 'HH:mm:ss',\\n    longTime: 'HH:mm:ss.SSS'\\n};\\n\\n// Create a new mask\\nfecha.masks.myMask = 'HH:mm:ss YY/MM/DD';\\n\\n// Use it\\nfecha.format(new Date(2014, 5, 6, 14, 10, 45), 'myMask'); // '14:10:45 14/06/06'\\n</code></pre>\\n<h3>Formatting Tokens</h3>\\n<table class=\\\"table table-striped table-bordered\\\">\\n  <tbody>\\n    <tr>\\n      <th></th>\\n      <th>Token</th>\\n      <th>Output</th>\\n    </tr>\\n    <tr>\\n      <td><b>Month</b></td>\\n      <td>M</td>\\n      <td>1 2 ... 11 12</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>MM</td>\\n      <td>01 02 ... 11 12</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>MMM</td>\\n      <td>Jan Feb ... Nov Dec</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>MMMM</td>\\n      <td>January February ... November December</td>\\n    </tr>\\n    <tr>\\n      <td><b>Day of Month</b></td>\\n      <td>D</td>\\n      <td>1 2 ... 30 31</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>Do</td>\\n      <td>1st 2nd ... 30th 31st</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>DD</td>\\n      <td>01 02 ... 30 31</td>\\n    </tr>\\n    <tr>\\n      <td><b>Day of Week</b></td>\\n      <td>d</td>\\n      <td>0 1 ... 5 6</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>ddd</td>\\n      <td>Sun Mon ... Fri Sat</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>dddd</td>\\n      <td>Sunday Monday ... Friday Saturday</td>\\n    </tr>\\n    <tr>\\n      <td><b>Year</b></td>\\n      <td>YY</td>\\n      <td>70 71 ... 29 30</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>YYYY</td>\\n      <td>1970 1971 ... 2029 2030</td>\\n    </tr>\\n    <tr>\\n      <td><b>AM/PM</b></td>\\n      <td>A</td>\\n      <td>AM PM</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>a</td>\\n      <td>am pm</td>\\n    </tr>\\n    <tr>\\n      <td><b>Hour</b></td>\\n      <td>H</td>\\n      <td>0 1 ... 22 23</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>HH</td>\\n      <td>00 01 ... 22 23</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>h</td>\\n      <td>1 2 ... 11 12</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>hh</td>\\n      <td>01 02 ... 11 12</td>\\n    </tr>\\n    <tr>\\n      <td><b>Minute</b></td>\\n      <td>m</td>\\n      <td>0 1 ... 58 59</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>mm</td>\\n      <td>00 01 ... 58 59</td>\\n    </tr>\\n    <tr>\\n      <td><b>Second</b></td>\\n      <td>s</td>\\n      <td>0 1 ... 58 59</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>ss</td>\\n      <td>00 01 ... 58 59</td>\\n    </tr>\\n    <tr>\\n      <td><b>Fractional Second</b></td>\\n      <td>S</td>\\n      <td>0 1 ... 8 9</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>SS</td>\\n      <td>0 1 ... 98 99</td>\\n    </tr>\\n    <tr>\\n      <td></td>\\n      <td>SSS</td>\\n      <td>0 1 ... 998 999</td>\\n    </tr>\\n    <tr>\\n      <td><b>Timezone</b></td>\\n      <td>ZZ</td>\\n      <td>\\n        -0700 -0600 ... +0600 +0700\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\",\"docPath\":\"argo-ci/node_modules/fecha/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-fecha-readme-html.json\n// module id = 2328\n// module chunks = 17301664606974"],"sourceRoot":""}