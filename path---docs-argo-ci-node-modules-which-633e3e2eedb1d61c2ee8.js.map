{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-which-633e3e2eedb1d61c2ee8.js","webpack:///./.cache/json/docs-argo-ci-node-modules-which.json"],"names":["webpackJsonp","3377","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,2+CAA+5BC,QAAA,oCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-which-633e3e2eedb1d61c2ee8.js","sourcesContent":["webpackJsonp([244419989560563],{\n\n/***/ 3377:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>which</h1>\\n<p>Like the unix <code>which</code> utility.</p>\\n<p>Finds the first instance of a specified executable in the PATH\\nenvironment variable.  Does not cache the results, so <code>hash -r</code> is not\\nneeded when the PATH changes.</p>\\n<h2>USAGE</h2>\\n<pre><code class=\\\"language-javascript\\\">var which = require('which')\\n\\n// async usage\\nwhich('node', function (er, resolvedPath) {\\n  // er is returned if no \\\"node\\\" is found on the PATH\\n  // if it is found, then the absolute path to the exec is returned\\n})\\n\\n// sync usage\\n// throws if not found\\nvar resolved = which.sync('node')\\n\\n// if nothrow option is used, returns null if not found\\nresolved = which.sync('node', {nothrow: true})\\n\\n// Pass options to override the PATH and PATHEXT environment vars.\\nwhich('node', { path: someOtherPath }, function (er, resolved) {\\n  if (er)\\n    throw er\\n  console.log('found at %j', resolved)\\n})\\n</code></pre>\\n<h2>CLI USAGE</h2>\\n<p>Same as the BSD <code>which(1)</code> binary.</p>\\n<pre><code>usage: which [-as] program ...\\n</code></pre>\\n<h2>OPTIONS</h2>\\n<p>You may pass an options object as the second argument.</p>\\n<ul>\\n<li><code>path</code>: Use instead of the <code>PATH</code> environment variable.</li>\\n<li><code>pathExt</code>: Use instead of the <code>PATHEXT</code> environment variable.</li>\\n<li><code>all</code>: Return all matches, instead of just the first one.  Note that\\nthis means the function returns an array of strings instead of a\\nsingle string.</li>\\n</ul>\",\"docPath\":\"argo-ci/node_modules/which/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-which-633e3e2eedb1d61c2ee8.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>which</h1>\\n<p>Like the unix <code>which</code> utility.</p>\\n<p>Finds the first instance of a specified executable in the PATH\\nenvironment variable.  Does not cache the results, so <code>hash -r</code> is not\\nneeded when the PATH changes.</p>\\n<h2>USAGE</h2>\\n<pre><code class=\\\"language-javascript\\\">var which = require('which')\\n\\n// async usage\\nwhich('node', function (er, resolvedPath) {\\n  // er is returned if no \\\"node\\\" is found on the PATH\\n  // if it is found, then the absolute path to the exec is returned\\n})\\n\\n// sync usage\\n// throws if not found\\nvar resolved = which.sync('node')\\n\\n// if nothrow option is used, returns null if not found\\nresolved = which.sync('node', {nothrow: true})\\n\\n// Pass options to override the PATH and PATHEXT environment vars.\\nwhich('node', { path: someOtherPath }, function (er, resolved) {\\n  if (er)\\n    throw er\\n  console.log('found at %j', resolved)\\n})\\n</code></pre>\\n<h2>CLI USAGE</h2>\\n<p>Same as the BSD <code>which(1)</code> binary.</p>\\n<pre><code>usage: which [-as] program ...\\n</code></pre>\\n<h2>OPTIONS</h2>\\n<p>You may pass an options object as the second argument.</p>\\n<ul>\\n<li><code>path</code>: Use instead of the <code>PATH</code> environment variable.</li>\\n<li><code>pathExt</code>: Use instead of the <code>PATHEXT</code> environment variable.</li>\\n<li><code>all</code>: Return all matches, instead of just the first one.  Note that\\nthis means the function returns an array of strings instead of a\\nsingle string.</li>\\n</ul>\",\"docPath\":\"argo-ci/node_modules/which/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-which.json\n// module id = 3377\n// module chunks = 244419989560563"],"sourceRoot":""}