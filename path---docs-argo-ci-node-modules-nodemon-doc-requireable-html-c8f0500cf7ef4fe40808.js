webpackJsonp([58544660496387],{2968:function(e,n){e.exports={pathContext:{docHtml:"<h1>Nodemon as a required module</h1>\n<p>Nodemon (as of 1.0.0) also works as a required module. At present, you can only require nodemon in to your project once (as there are static config variables), but you can re-run with new settings for a different application to monitor.</p>\n<p>By requiring nodemon, you can extend it's functionality. Below is a simple example of using nodemon in your project:</p>\n<pre><code class=\"language-js\">var nodemon = require('nodemon');\n\nnodemon({\n  script: 'app.js',\n  ext: 'js json'\n});\n\nnodemon.on('start', function () {\n  console.log('App has started');\n}).on('quit', function () {\n  console.log('App has quit');\n  process.exit();\n}).on('restart', function (files) {\n  console.log('App restarted due to: ', files);\n});\n</code></pre>\n<p>Nodemon will emit a number of <a href=\"https://github.com/remy/nodemon/blob/master/doc/events.md\">events</a> by default, and when in verbose mode will also emit a <code>log</code> event (which matches what the nodemon cli tool echos).</p>\n<h2>Arguments</h2>\n<p>The <code>nodemon</code> function takes either an object (that matches the <a href=\"https://github.com/remy/nodemon#config-files\">nodemon config</a>) or can take a string that matches the arguments that would be used on the command line:</p>\n<pre><code class=\"language-js\">var nodemon = require('nodemon');\n\nnodemon('-e \"js json\" app.js');\n</code></pre>\n<h2>Methods &#x26; Properties</h2>\n<p>The <code>nodemon</code> object also has a few methods and properties. Some are exposed to help with tests, but have been listed here for completeness:</p>\n<h3>Event handling</h3>\n<p>This is simply the event emitter bus that exists inside nodemon exposed at the top level module (ie. it's the <code>events</code> api):</p>\n<ul>\n<li><code>nodemon.on(event, fn)</code></li>\n<li><code>nodemon.addListener(event, fn)</code></li>\n<li><code>nodemon.once(event, fn)</code></li>\n<li><code>nodemon.emit(event)</code></li>\n<li><code>nodemon.removeAllListeners([event])</code></li>\n</ul>\n<p>Note: there's no <code>removeListener</code> (happy to take a pull request if it's needed).</p>\n<h3>Test utilities</h3>\n<ul>\n<li><code>nodemon.reset()</code> - reverts nodemon's internal state to a clean slate</li>\n<li><code>nodemon.config</code> - a reference to the internal config nodemon uses</li>\n</ul>",docPath:"argo-ci/node_modules/nodemon/doc/requireable",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-nodemon-doc-requireable-html-c8f0500cf7ef4fe40808.js.map