webpackJsonp([0xe2886d0f3bca],{2697:function(t,e){t.exports={pathContext:{docHtml:'<h1>http-errors</h1>\n<p><a href="https://npmjs.org/package/http-errors"><img src="https://img.shields.io/npm/v/http-errors.svg" alt="NPM Version"></a>\n<a href="https://npmjs.org/package/http-errors"><img src="https://img.shields.io/npm/dm/http-errors.svg" alt="NPM Downloads"></a>\n<a href="https://nodejs.org/en/download/"><img src="https://img.shields.io/node/v/http-errors.svg" alt="Node.js Version"></a>\n<a href="https://travis-ci.org/jshttp/http-errors"><img src="https://img.shields.io/travis/jshttp/http-errors.svg" alt="Build Status"></a>\n<a href="https://coveralls.io/r/jshttp/http-errors"><img src="https://img.shields.io/coveralls/jshttp/http-errors.svg" alt="Test Coverage"></a></p>\n<p>Create HTTP errors for Express, Koa, Connect, etc. with ease.</p>\n<h2>Install</h2>\n<p>This is a <a href="https://nodejs.org/en/">Node.js</a> module available through the\n<a href="https://www.npmjs.com/">npm registry</a>. Installation is done using the\n<a href="https://docs.npmjs.com/getting-started/installing-npm-packages-locally"><code>npm install</code> command</a>:</p>\n<pre><code class="language-bash">$ npm install http-errors\n</code></pre>\n<h2>Example</h2>\n<pre><code class="language-js">var createError = require(\'http-errors\')\nvar express = require(\'express\')\nvar app = express()\n\napp.use(function (req, res, next) {\n  if (!req.user) return next(createError(401, \'Please login to view this page.\'))\n  next()\n})\n</code></pre>\n<h2>API</h2>\n<p>This is the current API, currently extracted from Koa and subject to change.</p>\n<p>All errors inherit from JavaScript <code>Error</code> and the exported <code>createError.HttpError</code>.</p>\n<h3>Error Properties</h3>\n<ul>\n<li><code>expose</code> - can be used to signal if <code>message</code> should be sent to the client,\ndefaulting to <code>false</code> when <code>status</code> >= 500</li>\n<li><code>headers</code> - can be an object of header names to values to be sent to the\nclient, defaulting to <code>undefined</code>. When defined, the key names should all\nbe lower-cased</li>\n<li><code>message</code> - the traditional error message, which should be kept short and all\nsingle line</li>\n<li><code>status</code> - the status code of the error, mirroring <code>statusCode</code> for general\ncompatibility</li>\n<li><code>statusCode</code> - the status code of the error, defaulting to <code>500</code></li>\n</ul>\n<h3>createError([status], [message], [properties])</h3>\n<!-- eslint-disable no-undef, no-unused-vars -->\n<pre><code class="language-js">var err = createError(404, \'This video does not exist!\')\n</code></pre>\n<ul>\n<li><code>status: 500</code> - the status code as a number</li>\n<li><code>message</code> - the message of the error, defaulting to node\'s text for that status code.</li>\n<li><code>properties</code> - custom properties to attach to the object</li>\n</ul>\n<h3>new createError[code || name]([msg]))</h3>\n<!-- eslint-disable no-undef, no-unused-vars -->\n<pre><code class="language-js">var err = new createError.NotFound()\n</code></pre>\n<ul>\n<li><code>code</code> - the status code as a number</li>\n<li><code>name</code> - the name of the error as a "bumpy case", i.e. <code>NotFound</code> or <code>InternalServerError</code>.</li>\n</ul>\n<h4>List of all constructors</h4>\n<table>\n<thead>\n<tr>\n<th>Status Code</th>\n<th>Constructor Name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>400</td>\n<td>BadRequest</td>\n</tr>\n<tr>\n<td>401</td>\n<td>Unauthorized</td>\n</tr>\n<tr>\n<td>402</td>\n<td>PaymentRequired</td>\n</tr>\n<tr>\n<td>403</td>\n<td>Forbidden</td>\n</tr>\n<tr>\n<td>404</td>\n<td>NotFound</td>\n</tr>\n<tr>\n<td>405</td>\n<td>MethodNotAllowed</td>\n</tr>\n<tr>\n<td>406</td>\n<td>NotAcceptable</td>\n</tr>\n<tr>\n<td>407</td>\n<td>ProxyAuthenticationRequired</td>\n</tr>\n<tr>\n<td>408</td>\n<td>RequestTimeout</td>\n</tr>\n<tr>\n<td>409</td>\n<td>Conflict</td>\n</tr>\n<tr>\n<td>410</td>\n<td>Gone</td>\n</tr>\n<tr>\n<td>411</td>\n<td>LengthRequired</td>\n</tr>\n<tr>\n<td>412</td>\n<td>PreconditionFailed</td>\n</tr>\n<tr>\n<td>413</td>\n<td>PayloadTooLarge</td>\n</tr>\n<tr>\n<td>414</td>\n<td>URITooLong</td>\n</tr>\n<tr>\n<td>415</td>\n<td>UnsupportedMediaType</td>\n</tr>\n<tr>\n<td>416</td>\n<td>RangeNotSatisfiable</td>\n</tr>\n<tr>\n<td>417</td>\n<td>ExpectationFailed</td>\n</tr>\n<tr>\n<td>418</td>\n<td>ImATeapot</td>\n</tr>\n<tr>\n<td>421</td>\n<td>MisdirectedRequest</td>\n</tr>\n<tr>\n<td>422</td>\n<td>UnprocessableEntity</td>\n</tr>\n<tr>\n<td>423</td>\n<td>Locked</td>\n</tr>\n<tr>\n<td>424</td>\n<td>FailedDependency</td>\n</tr>\n<tr>\n<td>425</td>\n<td>UnorderedCollection</td>\n</tr>\n<tr>\n<td>426</td>\n<td>UpgradeRequired</td>\n</tr>\n<tr>\n<td>428</td>\n<td>PreconditionRequired</td>\n</tr>\n<tr>\n<td>429</td>\n<td>TooManyRequests</td>\n</tr>\n<tr>\n<td>431</td>\n<td>RequestHeaderFieldsTooLarge</td>\n</tr>\n<tr>\n<td>451</td>\n<td>UnavailableForLegalReasons</td>\n</tr>\n<tr>\n<td>500</td>\n<td>InternalServerError</td>\n</tr>\n<tr>\n<td>501</td>\n<td>NotImplemented</td>\n</tr>\n<tr>\n<td>502</td>\n<td>BadGateway</td>\n</tr>\n<tr>\n<td>503</td>\n<td>ServiceUnavailable</td>\n</tr>\n<tr>\n<td>504</td>\n<td>GatewayTimeout</td>\n</tr>\n<tr>\n<td>505</td>\n<td>HTTPVersionNotSupported</td>\n</tr>\n<tr>\n<td>506</td>\n<td>VariantAlsoNegotiates</td>\n</tr>\n<tr>\n<td>507</td>\n<td>InsufficientStorage</td>\n</tr>\n<tr>\n<td>508</td>\n<td>LoopDetected</td>\n</tr>\n<tr>\n<td>509</td>\n<td>BandwidthLimitExceeded</td>\n</tr>\n<tr>\n<td>510</td>\n<td>NotExtended</td>\n</tr>\n<tr>\n<td>511</td>\n<td>NetworkAuthenticationRequired</td>\n</tr>\n</tbody>\n</table>\n<h2>License</h2>\n<p><a href="LICENSE">MIT</a></p>',docPath:"argo-ci/node_modules/http-errors/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-http-errors-readme-html-77d7f5d7d890be927d66.js.map