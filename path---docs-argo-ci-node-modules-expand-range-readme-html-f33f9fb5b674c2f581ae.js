webpackJsonp([0xdcfd5c42707d],{2297:function(e,n){e.exports={pathContext:{docHtml:"<h1>expand-range <a href=\"https://www.npmjs.com/package/expand-range\"><img src=\"https://img.shields.io/npm/v/expand-range.svg?style=flat\" alt=\"NPM version\"></a> <a href=\"https://npmjs.org/package/expand-range\"><img src=\"https://img.shields.io/npm/dm/expand-range.svg?style=flat\" alt=\"NPM downloads\"></a> <a href=\"https://travis-ci.org/jonschlinkert/expand-range\"><img src=\"https://img.shields.io/travis/jonschlinkert/expand-range.svg?style=flat\" alt=\"Build Status\"></a></h1>\n<p>Fast, bash-like range expansion. Expand a range of numbers or letters, uppercase or lowercase. See the benchmarks. Used by micromatch.</p>\n<h2>Install</h2>\n<p>Install with <a href=\"https://www.npmjs.com/\">npm</a>:</p>\n<pre><code class=\"language-sh\">$ npm install expand-range --save\n</code></pre>\n<p>Wraps [fill-range] to do range expansion using <code>..</code> separated strings. See [fill-range] for the full list of options and features.</p>\n<h2>Example usage</h2>\n<pre><code class=\"language-js\">var expand = require('expand-range');\n</code></pre>\n<p><strong>Params</strong></p>\n<pre><code class=\"language-js\">expand(start, stop, increment);\n</code></pre>\n<ul>\n<li><code>start</code>: the number or letter to start with</li>\n<li><code>end</code>: the number or letter to end with</li>\n<li><code>increment</code>: optionally pass the increment to use. works for letters or numbers</li>\n</ul>\n<p><strong>Examples</strong></p>\n<pre><code class=\"language-js\">expand('a..e')\n//=> ['a', 'b', 'c', 'd', 'e']\n\nexpand('a..e..2')\n//=> ['a', 'c', 'e']\n\nexpand('A..E..2')\n//=> ['A', 'C', 'E']\n\nexpand('1..3')\n//=> ['1', '2', '3']\n\nexpand('0..-5')\n//=> [ '0', '-1', '-2', '-3', '-4', '-5' ]\n\nexpand('-9..9..3')\n//=> [ '-9', '-6', '-3', '0', '3', '6', '9' ])\n\nexpand('-1..-10..-2')\n//=> [ '-1', '-3', '-5', '-7', '-9' ]\n\nexpand('1..10..2')\n//=> [ '1', '3', '5', '7', '9' ]\n</code></pre>\n<h3>Custom function</h3>\n<p>Optionally pass a custom function as the second argument:</p>\n<pre><code class=\"language-js\">expand('a..e', function (val, isNumber, pad, i) {\n  if (!isNumber) {\n    return String.fromCharCode(val) + i;\n  }\n  return val;\n});\n//=> ['a0', 'b1', 'c2', 'd3', 'e4']\n</code></pre>\n<h2>Benchmarks</h2>\n<pre><code class=\"language-sh\"># benchmark/fixtures/alpha-lower.js (29 bytes)\n  brace-expansion x 145,653 ops/sec ±0.89% (87 runs sampled)\n  expand-range x 453,213 ops/sec ±1.66% (85 runs sampled)\n  minimatch x 152,193 ops/sec ±1.17% (86 runs sampled)\n\n# benchmark/fixtures/alpha-upper.js (29 bytes)\n  brace-expansion x 149,975 ops/sec ±1.10% (88 runs sampled)\n  expand-range x 459,390 ops/sec ±1.27% (84 runs sampled)\n  minimatch x 155,253 ops/sec ±1.25% (88 runs sampled)\n\n# benchmark/fixtures/padded.js (33 bytes)\n  brace-expansion x 14,694 ops/sec ±1.37% (85 runs sampled)\n  expand-range x 169,393 ops/sec ±1.76% (80 runs sampled)\n  minimatch x 15,052 ops/sec ±1.15% (88 runs sampled)\n\n# benchmark/fixtures/range.js (29 bytes)\n  brace-expansion x 142,968 ops/sec ±1.35% (86 runs sampled)\n  expand-range x 465,579 ops/sec ±1.43% (86 runs sampled)\n  minimatch x 126,872 ops/sec ±1.18% (90 runs sampled)\n</code></pre>\n<h2>Related projects</h2>\n<p>You might also be interested in these projects:</p>\n<ul>\n<li><a href=\"https://www.npmjs.com/package/braces\">braces</a>: Fastest brace expansion for node.js, with the most complete support for the Bash 4.3 braces… <a href=\"https://www.npmjs.com/package/braces\">more</a> | <a href=\"https://github.com/jonschlinkert/braces\">homepage</a></li>\n<li><a href=\"https://www.npmjs.com/package/fill-range\">fill-range</a>: Fill in a range of numbers or letters, optionally passing an increment or multiplier to… <a href=\"https://www.npmjs.com/package/fill-range\">more</a> | <a href=\"https://github.com/jonschlinkert/fill-range\">homepage</a></li>\n<li><a href=\"https://www.npmjs.com/package/micromatch\">micromatch</a>: Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | <a href=\"https://github.com/jonschlinkert/micromatch\">homepage</a></li>\n</ul>\n<h2>Contributing</h2>\n<p>Pull requests and stars are always welcome. For bugs and feature requests, <a href=\"https://github.com/jonschlinkert/expand-range/issues/new\">please create an issue</a>.</p>\n<h2>Building docs</h2>\n<p>Generate readme and API documentation with <a href=\"https://github.com/verbose/verb\">verb</a>:</p>\n<pre><code class=\"language-sh\">$ npm install verb &#x26;&#x26; npm run docs\n</code></pre>\n<p>Or, if <a href=\"https://github.com/verbose/verb\">verb</a> is installed globally:</p>\n<pre><code class=\"language-sh\">$ verb\n</code></pre>\n<h2>Running tests</h2>\n<p>Install dev dependencies:</p>\n<pre><code class=\"language-sh\">$ npm install -d &#x26;&#x26; npm test\n</code></pre>\n<h2>Author</h2>\n<p><strong>Jon Schlinkert</strong></p>\n<ul>\n<li><a href=\"https://github.com/jonschlinkert\">github/jonschlinkert</a></li>\n<li><a href=\"http://twitter.com/jonschlinkert\">twitter/jonschlinkert</a></li>\n</ul>\n<h2>License</h2>\n<p>Copyright © 2016, <a href=\"https://github.com/jonschlinkert\">Jon Schlinkert</a>.\nReleased under the <a href=\"https://github.com/jonschlinkert/expand-range/blob/master/LICENSE\">MIT license</a>.</p>\n<hr>\n<p><em>This file was generated by <a href=\"https://github.com/verbose/verb\">verb</a>, v0.9.0, on May 05, 2016.</em></p>",docPath:"argo-ci/node_modules/expand-range/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-expand-range-readme-html-f33f9fb5b674c2f581ae.js.map