{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-request-promise-core-readme-html-0e6c1db624e21dbf2e79.js","webpack:///./.cache/json/docs-argo-ci-node-modules-request-promise-core-readme-html.json"],"names":["webpackJsonp","3120","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,k7MAAs+HC,QAAA,mDAAAC,KAAA","file":"path---docs-argo-ci-node-modules-request-promise-core-readme-html-0e6c1db624e21dbf2e79.js","sourcesContent":["webpackJsonp([132829100294353],{\n\n/***/ 3120:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<a href=\\\"http://promisesaplus.com/\\\">\\n    <img src=\\\"https://promises-aplus.github.io/promises-spec/assets/logo-small.png\\\" align=\\\"right\\\" alt=\\\"Promises/A+ logo\\\">\\n</a>\\n<h1>request-promise-core</h1>\\n<p><a href=\\\"https://gitter.im/request/request-promise?utm_source=badge&#x26;utm_medium=badge&#x26;utm_campaign=pr-badge&#x26;utm_content=badge\\\"><img src=\\\"https://img.shields.io/badge/gitter-join_chat-blue.svg?style=flat-square&#x26;maxAge=2592000\\\" alt=\\\"Gitter\\\"></a>\\n<a href=\\\"https://travis-ci.org/request/promise-core\\\"><img src=\\\"https://img.shields.io/travis/request/promise-core/master.svg?style=flat-square&#x26;maxAge=2592000\\\" alt=\\\"Build Status\\\"></a>\\n<a href=\\\"https://coveralls.io/r/request/promise-core\\\"><img src=\\\"https://img.shields.io/coveralls/request/promise-core.svg?style=flat-square&#x26;maxAge=2592000\\\" alt=\\\"Coverage Status\\\"></a>\\n<a href=\\\"https://david-dm.org/request/promise-core\\\"><img src=\\\"https://img.shields.io/david/request/promise-core.svg?style=flat-square&#x26;maxAge=2592000\\\" alt=\\\"Dependency Status\\\"></a>\\n<a href=\\\"https://snyk.io/test/npm/promise-core\\\"><img src=\\\"https://snyk.io/test/npm/promise-core/badge.svg?style=flat-square&#x26;maxAge=2592000\\\" alt=\\\"Known Vulnerabilities\\\"></a></p>\\n<p>This package is the core for the following packages:</p>\\n<ul>\\n<li><a href=\\\"https://github.com/request/request-promise\\\"><code>request-promise</code></a></li>\\n<li><a href=\\\"https://github.com/request/request-promise-any\\\"><code>request-promise-any</code></a></li>\\n<li><a href=\\\"https://github.com/request/request-promise-bluebird\\\"><code>request-promise-bluebird</code></a></li>\\n<li><a href=\\\"https://github.com/request/request-promise-native\\\"><code>request-promise-native</code></a></li>\\n</ul>\\n<p><code>request-promise-core</code> contains the core logic to add Promise support to <a href=\\\"https://github.com/request/request\\\"><code>request</code></a>.</p>\\n<p>Please use one of the libraries above. It is only recommended to use this library directly, if you have very specific requirements.</p>\\n<h2>Installation for <code>request@^2.34</code></h2>\\n<p>This module is installed via npm:</p>\\n<pre><code>npm install --save request\\nnpm install --save request-promise-core\\n</code></pre>\\n<p><code>request</code> is defined as a peer-dependency and thus has to be installed separately.</p>\\n<h2>Usage for <code>request@^2.34</code></h2>\\n<pre><code class=\\\"language-js\\\">// 1. Load the request library\\n\\n// Only use a direct require if you are 100% sure that:\\n// - Your project does not use request directly. That is without the Promise capabilities by calling require('request').\\n// - Any of the installed libraries use request.\\n// ...because Request's prototype will be patched in step 2.\\n/* var request = require('request'); */\\n\\n// Instead use:\\nvar stealthyRequire = require('stealthy-require');\\nvar request = stealthyRequire(require.cache, function () {\\n    return require('request');\\n});\\n\\n\\n// 2. Add Promise support to request\\n\\nvar configure = require('request-promise-core/configure/request2');\\n\\nconfigure({\\n    request: request,\\n    // Pass your favorite ES6-compatible promise implementation\\n    PromiseImpl: Promise,\\n    // Expose all methods of the promise instance you want to call on the request(...) call\\n    expose: [\\n        'then',   // Allows to use request(...).then(...)\\n        'catch',  // Allows to use request(...).catch(...)\\n        'promise' // Allows to use request(...).promise() which returns the promise instance\\n    ],\\n    // Optional: Pass a callback that is called within the Promise constructor\\n    constructorMixin: function (resolve, reject) {\\n        // `this` is the request object\\n        // Additional arguments may be passed depending on the PromiseImpl used\\n    }\\n});\\n\\n\\n// 3. Use request with its promise capabilities\\n\\n// E.g. crawl a web page:\\nrequest('http://www.google.com')\\n    .then(function (htmlString) {\\n        // Process html...\\n    })\\n    .catch(function (err) {\\n        // Crawling failed...\\n    });\\n</code></pre>\\n<h2>Installation and Usage for <code>request@next</code></h2>\\n<p><a href=\\\"https://github.com/request/request/issues/1982\\\">Request Next</a> is still in alpha. However, <code>request-promise-core</code> is already designed to be compatible and ships with a configuration helper – <code>require('request-promise-core/configure/request-next')</code> – that is <a href=\\\"https://github.com/request/request-promise/blob/next/lib/rp.js\\\">used by <code>request-promise</code></a> in its \\\"next\\\" branch.</p>\\n<h2>Contributing</h2>\\n<p>To set up your development environment:</p>\\n<ol>\\n<li>clone the repo to your desktop,</li>\\n<li>in the shell <code>cd</code> to the main folder,</li>\\n<li>hit <code>npm install</code>,</li>\\n<li>hit <code>npm install gulp -g</code> if you haven't installed gulp globally yet, and</li>\\n<li>run <code>gulp dev</code>. (Or run <code>node ./node_modules/.bin/gulp dev</code> if you don't want to install gulp globally.)</li>\\n</ol>\\n<p><code>gulp dev</code> watches all source files and if you save some changes it will lint the code and execute all tests. The test coverage report can be viewed from <code>./coverage/lcov-report/index.html</code>.</p>\\n<p>If you want to debug a test you should use <code>gulp test-without-coverage</code> to run all tests without obscuring the code by the test coverage instrumentation.</p>\\n<h2>Change History</h2>\\n<ul>\\n<li>\\n<p>1.1.1 (2016-08-08)</p>\\n<ul>\\n<li>Renamed package to <code>request-promise-core</code> because there where <a href=\\\"https://github.com/request/request-promise/issues/137\\\">too many issues</a> with the scoped package name <code>@request/promise-core</code></li>\\n</ul>\\n</li>\\n<li>\\n<p>1.1.0 (2016-07-30)</p>\\n<ul>\\n<li>Added <code>constructorMixin</code> option to enable <a href=\\\"https://github.com/request/request-promise/pull/123\\\">request/request-promise#123</a></li>\\n</ul>\\n</li>\\n<li>\\n<p>1.0.0 (2016-07-15)</p>\\n<ul>\\n<li>All tests green, ready for prime time</li>\\n</ul>\\n</li>\\n<li>\\n<p>1.0.0-rc.1 (2016-07-10)</p>\\n<ul>\\n<li>Reimplementation of core logic based on <code>request-promise@3.0.0</code></li>\\n<li>Plus <code>transform2xxOnly</code> option (fixes <a href=\\\"https://github.com/request/request-promise/issues/131\\\">request/request-promise#131</a>)</li>\\n</ul>\\n</li>\\n</ul>\\n<h2>License (ISC)</h2>\\n<p>In case you never heard about the <a href=\\\"http://en.wikipedia.org/wiki/ISC_license\\\">ISC license</a> it is functionally equivalent to the MIT license.</p>\\n<p>See the <a href=\\\"LICENSE\\\">LICENSE file</a> for details.</p>\",\"docPath\":\"argo-ci/node_modules/request-promise-core/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-request-promise-core-readme-html-0e6c1db624e21dbf2e79.js","module.exports = {\"pathContext\":{\"docHtml\":\"<a href=\\\"http://promisesaplus.com/\\\">\\n    <img src=\\\"https://promises-aplus.github.io/promises-spec/assets/logo-small.png\\\" align=\\\"right\\\" alt=\\\"Promises/A+ logo\\\">\\n</a>\\n<h1>request-promise-core</h1>\\n<p><a href=\\\"https://gitter.im/request/request-promise?utm_source=badge&#x26;utm_medium=badge&#x26;utm_campaign=pr-badge&#x26;utm_content=badge\\\"><img src=\\\"https://img.shields.io/badge/gitter-join_chat-blue.svg?style=flat-square&#x26;maxAge=2592000\\\" alt=\\\"Gitter\\\"></a>\\n<a href=\\\"https://travis-ci.org/request/promise-core\\\"><img src=\\\"https://img.shields.io/travis/request/promise-core/master.svg?style=flat-square&#x26;maxAge=2592000\\\" alt=\\\"Build Status\\\"></a>\\n<a href=\\\"https://coveralls.io/r/request/promise-core\\\"><img src=\\\"https://img.shields.io/coveralls/request/promise-core.svg?style=flat-square&#x26;maxAge=2592000\\\" alt=\\\"Coverage Status\\\"></a>\\n<a href=\\\"https://david-dm.org/request/promise-core\\\"><img src=\\\"https://img.shields.io/david/request/promise-core.svg?style=flat-square&#x26;maxAge=2592000\\\" alt=\\\"Dependency Status\\\"></a>\\n<a href=\\\"https://snyk.io/test/npm/promise-core\\\"><img src=\\\"https://snyk.io/test/npm/promise-core/badge.svg?style=flat-square&#x26;maxAge=2592000\\\" alt=\\\"Known Vulnerabilities\\\"></a></p>\\n<p>This package is the core for the following packages:</p>\\n<ul>\\n<li><a href=\\\"https://github.com/request/request-promise\\\"><code>request-promise</code></a></li>\\n<li><a href=\\\"https://github.com/request/request-promise-any\\\"><code>request-promise-any</code></a></li>\\n<li><a href=\\\"https://github.com/request/request-promise-bluebird\\\"><code>request-promise-bluebird</code></a></li>\\n<li><a href=\\\"https://github.com/request/request-promise-native\\\"><code>request-promise-native</code></a></li>\\n</ul>\\n<p><code>request-promise-core</code> contains the core logic to add Promise support to <a href=\\\"https://github.com/request/request\\\"><code>request</code></a>.</p>\\n<p>Please use one of the libraries above. It is only recommended to use this library directly, if you have very specific requirements.</p>\\n<h2>Installation for <code>request@^2.34</code></h2>\\n<p>This module is installed via npm:</p>\\n<pre><code>npm install --save request\\nnpm install --save request-promise-core\\n</code></pre>\\n<p><code>request</code> is defined as a peer-dependency and thus has to be installed separately.</p>\\n<h2>Usage for <code>request@^2.34</code></h2>\\n<pre><code class=\\\"language-js\\\">// 1. Load the request library\\n\\n// Only use a direct require if you are 100% sure that:\\n// - Your project does not use request directly. That is without the Promise capabilities by calling require('request').\\n// - Any of the installed libraries use request.\\n// ...because Request's prototype will be patched in step 2.\\n/* var request = require('request'); */\\n\\n// Instead use:\\nvar stealthyRequire = require('stealthy-require');\\nvar request = stealthyRequire(require.cache, function () {\\n    return require('request');\\n});\\n\\n\\n// 2. Add Promise support to request\\n\\nvar configure = require('request-promise-core/configure/request2');\\n\\nconfigure({\\n    request: request,\\n    // Pass your favorite ES6-compatible promise implementation\\n    PromiseImpl: Promise,\\n    // Expose all methods of the promise instance you want to call on the request(...) call\\n    expose: [\\n        'then',   // Allows to use request(...).then(...)\\n        'catch',  // Allows to use request(...).catch(...)\\n        'promise' // Allows to use request(...).promise() which returns the promise instance\\n    ],\\n    // Optional: Pass a callback that is called within the Promise constructor\\n    constructorMixin: function (resolve, reject) {\\n        // `this` is the request object\\n        // Additional arguments may be passed depending on the PromiseImpl used\\n    }\\n});\\n\\n\\n// 3. Use request with its promise capabilities\\n\\n// E.g. crawl a web page:\\nrequest('http://www.google.com')\\n    .then(function (htmlString) {\\n        // Process html...\\n    })\\n    .catch(function (err) {\\n        // Crawling failed...\\n    });\\n</code></pre>\\n<h2>Installation and Usage for <code>request@next</code></h2>\\n<p><a href=\\\"https://github.com/request/request/issues/1982\\\">Request Next</a> is still in alpha. However, <code>request-promise-core</code> is already designed to be compatible and ships with a configuration helper – <code>require('request-promise-core/configure/request-next')</code> – that is <a href=\\\"https://github.com/request/request-promise/blob/next/lib/rp.js\\\">used by <code>request-promise</code></a> in its \\\"next\\\" branch.</p>\\n<h2>Contributing</h2>\\n<p>To set up your development environment:</p>\\n<ol>\\n<li>clone the repo to your desktop,</li>\\n<li>in the shell <code>cd</code> to the main folder,</li>\\n<li>hit <code>npm install</code>,</li>\\n<li>hit <code>npm install gulp -g</code> if you haven't installed gulp globally yet, and</li>\\n<li>run <code>gulp dev</code>. (Or run <code>node ./node_modules/.bin/gulp dev</code> if you don't want to install gulp globally.)</li>\\n</ol>\\n<p><code>gulp dev</code> watches all source files and if you save some changes it will lint the code and execute all tests. The test coverage report can be viewed from <code>./coverage/lcov-report/index.html</code>.</p>\\n<p>If you want to debug a test you should use <code>gulp test-without-coverage</code> to run all tests without obscuring the code by the test coverage instrumentation.</p>\\n<h2>Change History</h2>\\n<ul>\\n<li>\\n<p>1.1.1 (2016-08-08)</p>\\n<ul>\\n<li>Renamed package to <code>request-promise-core</code> because there where <a href=\\\"https://github.com/request/request-promise/issues/137\\\">too many issues</a> with the scoped package name <code>@request/promise-core</code></li>\\n</ul>\\n</li>\\n<li>\\n<p>1.1.0 (2016-07-30)</p>\\n<ul>\\n<li>Added <code>constructorMixin</code> option to enable <a href=\\\"https://github.com/request/request-promise/pull/123\\\">request/request-promise#123</a></li>\\n</ul>\\n</li>\\n<li>\\n<p>1.0.0 (2016-07-15)</p>\\n<ul>\\n<li>All tests green, ready for prime time</li>\\n</ul>\\n</li>\\n<li>\\n<p>1.0.0-rc.1 (2016-07-10)</p>\\n<ul>\\n<li>Reimplementation of core logic based on <code>request-promise@3.0.0</code></li>\\n<li>Plus <code>transform2xxOnly</code> option (fixes <a href=\\\"https://github.com/request/request-promise/issues/131\\\">request/request-promise#131</a>)</li>\\n</ul>\\n</li>\\n</ul>\\n<h2>License (ISC)</h2>\\n<p>In case you never heard about the <a href=\\\"http://en.wikipedia.org/wiki/ISC_license\\\">ISC license</a> it is functionally equivalent to the MIT license.</p>\\n<p>See the <a href=\\\"LICENSE\\\">LICENSE file</a> for details.</p>\",\"docPath\":\"argo-ci/node_modules/request-promise-core/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-request-promise-core-readme-html.json\n// module id = 3120\n// module chunks = 132829100294353"],"sourceRoot":""}