{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-browser-stdout-readme-html-a3e42f6af7254e068337.js","webpack:///./.cache/json/docs-argo-ci-node-modules-browser-stdout-readme-html.json"],"names":["webpackJsonp","2119","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,6yBAAovBC,QAAA,6CAAAC,KAAA","file":"path---docs-argo-ci-node-modules-browser-stdout-readme-html-a3e42f6af7254e068337.js","sourcesContent":["webpackJsonp([145174887216086],{\n\n/***/ 2119:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h3>wat?</h3>\\n<p><code>process.stdout</code> in your browser.</p>\\n<h3>wai?</h3>\\n<p>iono. cuz hakz.</p>\\n<h3>hau?</h3>\\n<pre><code class=\\\"language-js\\\">var BrowserStdout = require('browser-stdout')\\n\\nmyStream.pipe(BrowserStdout())\\n</code></pre>\\n<h3>monkey</h3>\\n<p>You can monkey-patch <code>process.stdout</code> for your dependency graph like this:</p>\\n<pre><code>process.stdout = require('browser-stdout')()\\nvar coolTool = require('module-that-uses-stdout-somewhere-in-its-depths')\\n</code></pre>\\n<h3>opts</h3>\\n<p>opts are passed directly to <code>stream.Writable</code>.\\nadditionally, a label arg can be used to label console output.</p>\\n<pre><code class=\\\"language-js\\\">BrowserStdout({\\n  objectMode: true,\\n  label: 'dataz',\\n})\\n</code></pre>\\n<h3>ur doin it rong</h3>\\n<p>i accept pr's.</p>\",\"docPath\":\"argo-ci/node_modules/browser-stdout/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-browser-stdout-readme-html-a3e42f6af7254e068337.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h3>wat?</h3>\\n<p><code>process.stdout</code> in your browser.</p>\\n<h3>wai?</h3>\\n<p>iono. cuz hakz.</p>\\n<h3>hau?</h3>\\n<pre><code class=\\\"language-js\\\">var BrowserStdout = require('browser-stdout')\\n\\nmyStream.pipe(BrowserStdout())\\n</code></pre>\\n<h3>monkey</h3>\\n<p>You can monkey-patch <code>process.stdout</code> for your dependency graph like this:</p>\\n<pre><code>process.stdout = require('browser-stdout')()\\nvar coolTool = require('module-that-uses-stdout-somewhere-in-its-depths')\\n</code></pre>\\n<h3>opts</h3>\\n<p>opts are passed directly to <code>stream.Writable</code>.\\nadditionally, a label arg can be used to label console output.</p>\\n<pre><code class=\\\"language-js\\\">BrowserStdout({\\n  objectMode: true,\\n  label: 'dataz',\\n})\\n</code></pre>\\n<h3>ur doin it rong</h3>\\n<p>i accept pr's.</p>\",\"docPath\":\"argo-ci/node_modules/browser-stdout/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-browser-stdout-readme-html.json\n// module id = 2119\n// module chunks = 145174887216086"],"sourceRoot":""}