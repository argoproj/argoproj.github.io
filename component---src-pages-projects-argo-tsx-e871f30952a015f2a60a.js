webpackJsonp([0x5c48e138abfb],{216:function(e,i,n){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var l=n(3),o=n(56);i.default=function(){return l.createElement(o.Main,null,l.createElement(o.Project,{noReplace:!0,proj:"argo",animationType:"connections",markdownHtml:"\n<h2>What is Argo Workflows?</h2>\n<p>Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. Argo Workflows is implemented as a Kubernetes CRD.</p>\n<ul>\n<li>Define workflows where each step in the workflow is a container.</li>\n<li>Model multi-step workflows as a sequence of tasks or capture the dependencies between tasks using a graph (DAG).</li>\n<li>Easily run compute intensive jobs for machine learning or data processing in a fraction of the time using Argo Workflows on Kubernetes.</li>\n<li>Run CI/CD pipelines natively on Kubernetes without configuring complex software development products.</li>\n</ul>\n<h2>Why Argo Workflows?</h2>\n<ul>\n<li>Designed from the ground up for containers without the overhead and limitations of legacy VM and server-based environments.</li>\n<li>Cloud agnostic and can run on any Kubernetes cluster.</li>\n<li>Easily orchestrate highly parallel jobs on Kubernetes.</li>\n<li>Argo Workflows puts a cloud-scale supercomputer at your fingertips!</li>\n</ul>\n<h2>Features</h2>\n<ul>\n<li>DAG or Steps based declaration of workflows</li>\n<li>Artifact support (S3, Artifactory, HTTP, Git, raw)</li>\n<li>Step level input & outputs (artifacts/parameters)</li>\n<li>Loops</li>\n<li>Parameterization</li>\n<li>Conditionals</li>\n<li>Timeouts (step & workflow level)</li>\n<li>Retry (step & workflow level)</li>\n<li>Resubmit (memoized)</li>\n<li>Suspend & Resume</li>\n<li>Cancellation</li>\n<li>K8s resource orchestration</li>\n<li>Exit Hooks (notifications, cleanup)</li>\n<li>Garbage collection of completed workflow</li>\n<li>Scheduling (affinity/tolerations/node selectors)</li>\n<li>Volumes (ephemeral/existing)</li>\n<li>Parallelism limits</li>\n<li>Daemoned steps</li>\n<li>DinD (docker-in-docker)</li>\n<li>Script steps</li>\n</ul>\n",docsLink:"/docs/argo/readme.html"}))}}});
//# sourceMappingURL=component---src-pages-projects-argo-tsx-e871f30952a015f2a60a.js.map