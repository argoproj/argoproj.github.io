webpackJsonp([0xe2333977729b],{2016:function(e,t){e.exports={pathContext:{docHtml:'<h1>ansi-align</h1>\n<blockquote>\n<p>align-text with ANSI support for CLIs</p>\n</blockquote>\n<p><a href="https://travis-ci.org/nexdrew/ansi-align"><img src="https://travis-ci.org/nexdrew/ansi-align.svg?branch=master" alt="Build Status"></a>\n<a href="https://coveralls.io/github/nexdrew/ansi-align?branch=master"><img src="https://coveralls.io/repos/github/nexdrew/ansi-align/badge.svg?branch=master" alt="Coverage Status"></a>\n<a href="https://github.com/conventional-changelog/standard-version"><img src="https://img.shields.io/badge/release-standard%20version-brightgreen.svg" alt="Standard Version"></a></p>\n<p>Easily center- or right- align a block of text, carefully ignoring ANSI escape codes.</p>\n<p>E.g. turn this:</p>\n<img width="281" alt="ansi text block no alignment :(" src="https://cloud.githubusercontent.com/assets/1929625/14937509/7c3076dc-0ed7-11e6-8c16-4f6a4ccc8346.png">\n<p>Into this:</p>\n<img width="278" alt="ansi text block center aligned!" src="https://cloud.githubusercontent.com/assets/1929625/14937510/7c3ca0b0-0ed7-11e6-8f0a-541ca39b6e0a.png">\n<h2>Install</h2>\n<pre><code class="language-sh">npm install --save ansi-align\n</code></pre>\n<pre><code class="language-js">var ansiAlign = require(\'ansi-align\')\n</code></pre>\n<h2>API</h2>\n<h3><code>ansiAlign(text, [opts])</code></h3>\n<p>Align the given text per the line with the greatest <a href="https://github.com/sindresorhus/string-width"><code>string-width</code></a>, returning a new string (or array).</p>\n<h4>Arguments</h4>\n<ul>\n<li>\n<p><code>text</code>: required, string or array</p>\n<p>The text to align. If a string is given, it will be split using either the <code>opts.split</code> value or <code>\'\\n\'</code> by default. If an array is given, a different array of modified strings will be returned.</p>\n</li>\n<li>\n<p><code>opts</code>: optional, object</p>\n<p>Options to change behavior, see below.</p>\n</li>\n</ul>\n<h4>Options</h4>\n<ul>\n<li>\n<p><code>opts.align</code>: string, default <code>\'center\'</code></p>\n<p>The alignment mode. Use <code>\'center\'</code> for center-alignment, <code>\'right\'</code> for right-alignment, or <code>\'left\'</code> for left-alignment. Note that the given <code>text</code> is assumed to be left-aligned already, so specifying <code>align: \'left\'</code> just returns the <code>text</code> as is (no-op).</p>\n</li>\n<li>\n<p><code>opts.split</code>: string or RegExp, default <code>\'\\n\'</code></p>\n<p>The separator to use when splitting the text. Only used if text is given as a string.</p>\n</li>\n<li>\n<p><code>opts.pad</code>: string, default <code>\' \'</code></p>\n<p>The value used to left-pad (prepend to) lines of lesser width. Will be repeated as necessary to adjust alignment to the line with the greatest width.</p>\n</li>\n</ul>\n<h3><code>ansiAlign.center(text)</code></h3>\n<p>Alias for <code>ansiAlign(text, { align: \'center\' })</code>.</p>\n<h3><code>ansiAlign.right(text)</code></h3>\n<p>Alias for <code>ansiAlign(text, { align: \'right\' })</code>.</p>\n<h3><code>ansiAlign.left(text)</code></h3>\n<p>Alias for <code>ansiAlign(text, { align: \'left\' })</code>, which is a no-op.</p>\n<h2>Similar Packages</h2>\n<ul>\n<li><a href="https://github.com/jonschlinkert/center-align"><code>center-align</code></a>: Very close to this package, except it doesn\'t support ANSI codes.</li>\n<li><a href="https://github.com/camwest/left-pad"><code>left-pad</code></a>: Great for left-padding but does not support center alignment or ANSI codes.</li>\n<li>Pretty much anything by the <a href="https://github.com/chalk">chalk</a> team</li>\n</ul>\n<h2>License</h2>\n<p>ISC Â© Contributors</p>',docPath:"argo-ci/node_modules/ansi-align/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-ansi-align-7acb1ef1af74a7fa5759.js.map