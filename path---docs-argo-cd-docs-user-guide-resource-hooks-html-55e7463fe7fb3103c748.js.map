{"version":3,"sources":["webpack:///path---docs-argo-cd-docs-user-guide-resource-hooks-html-55e7463fe7fb3103c748.js","webpack:///./.cache/json/docs-argo-cd-docs-user-guide-resource-hooks-html.json"],"names":["webpackJsonp","580","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,gtMAAAC,QAAA,yCAAAC,KAAA","file":"path---docs-argo-cd-docs-user-guide-resource-hooks-html-55e7463fe7fb3103c748.js","sourcesContent":["webpackJsonp([171261598712709],{\n\n/***/ 580:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1 id=\\\"resource-hooks\\\"><a href=\\\"#resource-hooks\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Resource Hooks</h1>\\n<h2 id=\\\"overview\\\"><a href=\\\"#overview\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Overview</h2>\\n<p>Synchronization can be configured using resource hooks. Hooks are ways to interject custom logic before, during,\\nand after a Sync operation. Some use cases for hooks are:</p>\\n<ul>\\n<li>Using a <code>PreSync</code> hook to perform a database schema migration before deploying a new version of the app.</li>\\n<li>Using a <code>Sync</code> hook to orchestrate a complex deployment requiring more sophistication than the\\nkubernetes rolling update strategy (e.g. a blue/green deployment).</li>\\n<li>Using a <code>PostSync</code> hook to run integration and health checks after a deployment.</li>\\n</ul>\\n<h2 id=\\\"usage\\\"><a href=\\\"#usage\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Usage</h2>\\n<p>Hooks are simply kubernetes manifests annotated with the <code>argocd.argoproj.io/hook</code> annotation. To\\nmake use of hooks, simply add the annotation to any resource:</p>\\n<pre><code class=\\\"language-yaml\\\">apiVersion: batch/v1\\nkind: Job\\nmetadata:\\n  generateName: schema-migrate-\\n  annotations:\\n    argocd.argoproj.io/hook: PreSync\\n</code></pre>\\n<p>During a Sync operation, Argo CD will create the resource during the appropriate stage of the\\ndeployment. Hooks can be any type of Kuberentes resource kind, but tend to be most useful as a Pod,\\n<a href=\\\"https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/\\\">Job</a>\\nor <a href=\\\"https://github.com/argoproj/argo\\\">Argo Workflows</a>. Multiple hooks can be specified as a comma\\nseparated list.</p>\\n<h2 id=\\\"available-hooks\\\"><a href=\\\"#available-hooks\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Available Hooks</h2>\\n<p>The following hooks are defined:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Hook</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>PreSync</code></td>\\n<td>Executes prior to the apply of the manifests.</td>\\n</tr>\\n<tr>\\n<td><code>Sync</code></td>\\n<td>Executes after all \\n<code>PreSync</code>\\n hooks completed and were successful. Occurs in conjuction with the apply of the manifests.</td>\\n</tr>\\n<tr>\\n<td><code>Skip</code></td>\\n<td>Indicates to Argo CD to skip the apply of the manifest. This is typically used in conjunction with a \\n<code>Sync</code>\\n hook which is presumably handling the deployment in an alternate way (e.g. blue-green deployment)</td>\\n</tr>\\n<tr>\\n<td><code>PostSync</code></td>\\n<td>Executes after all \\n<code>Sync</code>\\n hooks completed and were successful, a succcessful apply, and all resources in a \\n<code>Healthy</code>\\n state.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"hook-deletion-policies\\\"><a href=\\\"#hook-deletion-policies\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Hook Deletion Policies</h2>\\n<p>Hooks can be deleted in an automatic fashion using the annotation: <code>argocd.argoproj.io/hook-delete-policy</code>.</p>\\n<pre><code class=\\\"language-yaml\\\">apiVersion: batch/v1\\nkind: Job\\nmetadata:\\n  generateName: integration-test-\\n  annotations:\\n    argocd.argoproj.io/hook: PostSync\\n    argocd.argoproj.io/hook-delete-policy: HookSucceeded\\n</code></pre>\\n<p>The following policies define when the hook will be deleted.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Policy</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>HookSucceeded</code></td>\\n<td>The hook resource is deleted after the hook succeeded (e.g. Job/Workflow completed successfully).</td>\\n</tr>\\n<tr>\\n<td><code>HookFailed</code></td>\\n<td>The hook resource is deleted after the hook failed.</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>As an alternative to hook deletion policies, both Jobs and Argo Workflows support the\\n<a href=\\\"https://kubernetes.io/docs/concepts/workloads/controllers/ttlafterfinished/\\\"><code>ttlSecondsAfterFinished</code></a>\\nfield in the spec, which let their respective controllers delete the Job/Workflow after it completes.</p>\\n<pre><code class=\\\"language-yaml\\\">spec:\\n  ttlSecondsAfterFinished: 600\\n</code></pre>\",\"docPath\":\"argo-cd/docs/user-guide/resource_hooks\",\"proj\":\"argo-cd\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-cd-docs-user-guide-resource-hooks-html-55e7463fe7fb3103c748.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1 id=\\\"resource-hooks\\\"><a href=\\\"#resource-hooks\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Resource Hooks</h1>\\n<h2 id=\\\"overview\\\"><a href=\\\"#overview\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Overview</h2>\\n<p>Synchronization can be configured using resource hooks. Hooks are ways to interject custom logic before, during,\\nand after a Sync operation. Some use cases for hooks are:</p>\\n<ul>\\n<li>Using a <code>PreSync</code> hook to perform a database schema migration before deploying a new version of the app.</li>\\n<li>Using a <code>Sync</code> hook to orchestrate a complex deployment requiring more sophistication than the\\nkubernetes rolling update strategy (e.g. a blue/green deployment).</li>\\n<li>Using a <code>PostSync</code> hook to run integration and health checks after a deployment.</li>\\n</ul>\\n<h2 id=\\\"usage\\\"><a href=\\\"#usage\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Usage</h2>\\n<p>Hooks are simply kubernetes manifests annotated with the <code>argocd.argoproj.io/hook</code> annotation. To\\nmake use of hooks, simply add the annotation to any resource:</p>\\n<pre><code class=\\\"language-yaml\\\">apiVersion: batch/v1\\nkind: Job\\nmetadata:\\n  generateName: schema-migrate-\\n  annotations:\\n    argocd.argoproj.io/hook: PreSync\\n</code></pre>\\n<p>During a Sync operation, Argo CD will create the resource during the appropriate stage of the\\ndeployment. Hooks can be any type of Kuberentes resource kind, but tend to be most useful as a Pod,\\n<a href=\\\"https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/\\\">Job</a>\\nor <a href=\\\"https://github.com/argoproj/argo\\\">Argo Workflows</a>. Multiple hooks can be specified as a comma\\nseparated list.</p>\\n<h2 id=\\\"available-hooks\\\"><a href=\\\"#available-hooks\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Available Hooks</h2>\\n<p>The following hooks are defined:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Hook</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>PreSync</code></td>\\n<td>Executes prior to the apply of the manifests.</td>\\n</tr>\\n<tr>\\n<td><code>Sync</code></td>\\n<td>Executes after all \\n<code>PreSync</code>\\n hooks completed and were successful. Occurs in conjuction with the apply of the manifests.</td>\\n</tr>\\n<tr>\\n<td><code>Skip</code></td>\\n<td>Indicates to Argo CD to skip the apply of the manifest. This is typically used in conjunction with a \\n<code>Sync</code>\\n hook which is presumably handling the deployment in an alternate way (e.g. blue-green deployment)</td>\\n</tr>\\n<tr>\\n<td><code>PostSync</code></td>\\n<td>Executes after all \\n<code>Sync</code>\\n hooks completed and were successful, a succcessful apply, and all resources in a \\n<code>Healthy</code>\\n state.</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"hook-deletion-policies\\\"><a href=\\\"#hook-deletion-policies\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Hook Deletion Policies</h2>\\n<p>Hooks can be deleted in an automatic fashion using the annotation: <code>argocd.argoproj.io/hook-delete-policy</code>.</p>\\n<pre><code class=\\\"language-yaml\\\">apiVersion: batch/v1\\nkind: Job\\nmetadata:\\n  generateName: integration-test-\\n  annotations:\\n    argocd.argoproj.io/hook: PostSync\\n    argocd.argoproj.io/hook-delete-policy: HookSucceeded\\n</code></pre>\\n<p>The following policies define when the hook will be deleted.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Policy</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>HookSucceeded</code></td>\\n<td>The hook resource is deleted after the hook succeeded (e.g. Job/Workflow completed successfully).</td>\\n</tr>\\n<tr>\\n<td><code>HookFailed</code></td>\\n<td>The hook resource is deleted after the hook failed.</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>As an alternative to hook deletion policies, both Jobs and Argo Workflows support the\\n<a href=\\\"https://kubernetes.io/docs/concepts/workloads/controllers/ttlafterfinished/\\\"><code>ttlSecondsAfterFinished</code></a>\\nfield in the spec, which let their respective controllers delete the Job/Workflow after it completes.</p>\\n<pre><code class=\\\"language-yaml\\\">spec:\\n  ttlSecondsAfterFinished: 600\\n</code></pre>\",\"docPath\":\"argo-cd/docs/user-guide/resource_hooks\",\"proj\":\"argo-cd\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-cd-docs-user-guide-resource-hooks-html.json\n// module id = 580\n// module chunks = 171261598712709"],"sourceRoot":""}