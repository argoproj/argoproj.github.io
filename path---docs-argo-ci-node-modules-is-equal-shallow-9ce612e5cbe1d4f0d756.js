webpackJsonp([69460220443802],{2741:function(e,t){e.exports={pathContext:{docHtml:'<h1>is-equal-shallow <a href="http://badge.fury.io/js/is-equal-shallow"><img src="https://badge.fury.io/js/is-equal-shallow.svg" alt="NPM version"></a>  <a href="https://travis-ci.org/jonschlinkert/is-equal-shallow"><img src="https://travis-ci.org/jonschlinkert/is-equal-shallow.svg" alt="Build Status"></a></h1>\n<blockquote>\n<p>Does a shallow comparison of two objects, returning false if the keys or values differ.</p>\n</blockquote>\n<p>The purpose of this lib is to do the fastest comparison possible of two objects when the values will predictably be primitives.</p>\n<ul>\n<li>only compares objects.</li>\n<li>only compares the first level of each object</li>\n<li>values must be primitives. If a value is not a primitive, even if the values are the same, <code>false</code> is returned.</li>\n</ul>\n<p>Install with <a href="https://www.npmjs.com/">npm</a></p>\n<pre><code class="language-sh">$ npm i is-equal-shallow --save\n</code></pre>\n<h2>Usage</h2>\n<pre><code class="language-js">var equals = require(\'is-equal-shallow\');\nequals(object_a, object_b);\n</code></pre>\n<p><strong>Examples</strong></p>\n<pre><code class="language-js">equals({a: true, b: true}, {a: true, b: true});\n//=> \'true\'\n\nequals({a: true, b: false}, {c: false, b: false});\n//=> \'false\'\n\nequals({a: true, b: false}, {a: false, b: false});\n//=> \'false\'\n</code></pre>\n<p>Strict comparison for equality:</p>\n<pre><code class="language-js">equals({a: true, b: true}, {a: true, b: \'true\'});\n//=> \'false\'\n</code></pre>\n<p>When values are not primitives, <code>false</code> is always returned:</p>\n<pre><code class="language-js">equals({ b: {}}, { b: {}});\n//=> \'false\'\n\nequals({ b: []}, { b: []});\n//=> \'false\'\n</code></pre>\n<h2>Related projects</h2>\n<p>Other object utils:</p>\n<ul>\n<li><a href="https://github.com/jonschlinkert/clone-deep">clone-deep</a>: Recursively (deep) clone JavaScript native types, like Object, Array, RegExp, Date as well as primitives.</li>\n<li><a href="https://github.com/jonschlinkert/for-in">for-in</a>: Iterate over the own and inherited enumerable properties of an objecte, and return an object… <a href="https://github.com/jonschlinkert/for-in">more</a></li>\n<li><a href="https://github.com/jonschlinkert/for-own">for-own</a>: Iterate over the own enumerable properties of an object, and return an object with properties… <a href="https://github.com/jonschlinkert/for-own">more</a></li>\n<li><a href="https://github.com/jonschlinkert/is-plain-object">is-plain-object</a>: Returns true if an object was created by the <code>Object</code> constructor.</li>\n<li><a href="https://github.com/jonschlinkert/isobject">isobject</a>: Returns true if the value is an object and not an array or null.</li>\n</ul>\n<h2>Running tests</h2>\n<p>Install dev dependencies:</p>\n<pre><code class="language-sh">$ npm i -d &#x26;&#x26; npm test\n</code></pre>\n<h2>Contributing</h2>\n<p>Pull requests and stars are always welcome. For bugs and feature requests, <a href="https://github.com/jonschlinkert/is-equal-shallow/issues/new">please create an issue</a></p>\n<h2>Author</h2>\n<p><strong>Jon Schlinkert</strong></p>\n<ul>\n<li><a href="https://github.com/jonschlinkert">github/jonschlinkert</a></li>\n<li><a href="http://twitter.com/jonschlinkert">twitter/jonschlinkert</a></li>\n</ul>\n<h2>License</h2>\n<p>Copyright © 2015 Jon Schlinkert\nReleased under the MIT license.</p>\n<hr>\n<p><em>This file was generated by <a href="https://github.com/assemble/verb-cli">verb-cli</a> on June 22, 2015.</em></p>',docPath:"argo-ci/node_modules/is-equal-shallow/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-is-equal-shallow-9ce612e5cbe1d4f0d756.js.map