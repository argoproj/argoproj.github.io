{"version":3,"sources":["webpack:///path---docs-argo-cd-docs-user-guide-diffing-html-3a857a548aed44bde2a6.js","webpack:///./.cache/json/docs-argo-cd-docs-user-guide-diffing-html.json"],"names":["webpackJsonp","579","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,shGAAAC,QAAA,kCAAAC,KAAA","file":"path---docs-argo-cd-docs-user-guide-diffing-html-3a857a548aed44bde2a6.js","sourcesContent":["webpackJsonp([202455983706937],{\n\n/***/ 579:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>Diffing Customization</h1>\\n<p>It is possible for an application to be <code>OutOfSync</code> even immediately after a successful Sync operation. Some reasons for this might be:</p>\\n<ul>\\n<li>There is a bug in the manifest, where it contains extra/unknown fields from the actual K8s spec. These extra fields would get dropped when querying Kubernetes for the live state,\\nresulting in an <code>OutOfSync</code> status indicating a missing field was detected.</li>\\n<li>The sync was performed (with pruning disabled), and there are resources which need to be deleted.</li>\\n<li>A controller or <a href=\\\"https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#mutatingadmissionwebhook\\\">mutating webhook</a> is altering the object after it was\\nsubmitted to Kubernetes in a manner which contradicts Git.</li>\\n<li>A Helm chart is using a template function such as <a href=\\\"https://github.com/helm/charts/blob/master/stable/redis/templates/secret.yaml#L16\\\"><code>randAlphaNum</code></a>,\\nwhich generates different data every time <code>helm template</code> is invoked.</li>\\n<li>For Horizontal Pod Autoscaling (HPA) objects, the HPA controller is known to reorder <code>spec.metrics</code>\\nin a specific order. See <a href=\\\"https://github.com/kubernetes/kubernetes/issues/74099\\\">kubernetes issue #74099</a>.\\nTo work around this, you can order <code>spec.replicas</code> in Git in the same order that the controller\\nprefers.</li>\\n</ul>\\n<p>In case it is impossible to fix the upstream issue, Argo CD allows you to optionally ignore differences of problematic resources.\\nThe diffing customization can be configured for single or multiple application resources or at a system level.</p>\\n<h2>Application Level Configuration</h2>\\n<p>Argo CD allows ignoring differences at a specific JSON path. The following sample application is configured to ignore differences in <code>spec.replicas</code> for all deployments:</p>\\n<pre><code class=\\\"language-yaml\\\">spec:\\n  ignoreDifferences:\\n  - group: apps\\n    kind: Deployment\\n    jsonPointers:\\n    - /spec/replicas\\n</code></pre>\\n<p>The above customization could be narrowed to a resource with the specified name and optional namespace:</p>\\n<pre><code class=\\\"language-yaml\\\">spec:\\n  ignoreDifferences:\\n  - group: apps\\n    kind: Deployment\\n    name: guestbook\\n    namespace: default\\n    jsonPointers:\\n    - /spec/replicas\\n</code></pre>\\n<h2>System-Level Configuration</h2>\\n<p>The comparison of resources with well-known issues can be customized at a system level. Ignored differences can be configured for a specified group and kind\\nin <code>resource.customizations</code> key of <code>argocd-cm</code> ConfigMap. Following is an example of a customization which ignores the <code>caBundle</code> field\\nof a <code>MutatingWebhookConfiguration</code> webhooks:</p>\\n<pre><code class=\\\"language-yaml\\\">data:\\n  resource.customizations: |\\n    admissionregistration.k8s.io/MutatingWebhookConfiguration:\\n      ignoreDifferences: |\\n        jsonPointers:\\n        - /webhooks/0/clientConfig/caBundle\\n</code></pre>\",\"docPath\":\"argo-cd/docs/user-guide/diffing\",\"proj\":\"argo-cd\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-cd-docs-user-guide-diffing-html-3a857a548aed44bde2a6.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>Diffing Customization</h1>\\n<p>It is possible for an application to be <code>OutOfSync</code> even immediately after a successful Sync operation. Some reasons for this might be:</p>\\n<ul>\\n<li>There is a bug in the manifest, where it contains extra/unknown fields from the actual K8s spec. These extra fields would get dropped when querying Kubernetes for the live state,\\nresulting in an <code>OutOfSync</code> status indicating a missing field was detected.</li>\\n<li>The sync was performed (with pruning disabled), and there are resources which need to be deleted.</li>\\n<li>A controller or <a href=\\\"https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#mutatingadmissionwebhook\\\">mutating webhook</a> is altering the object after it was\\nsubmitted to Kubernetes in a manner which contradicts Git.</li>\\n<li>A Helm chart is using a template function such as <a href=\\\"https://github.com/helm/charts/blob/master/stable/redis/templates/secret.yaml#L16\\\"><code>randAlphaNum</code></a>,\\nwhich generates different data every time <code>helm template</code> is invoked.</li>\\n<li>For Horizontal Pod Autoscaling (HPA) objects, the HPA controller is known to reorder <code>spec.metrics</code>\\nin a specific order. See <a href=\\\"https://github.com/kubernetes/kubernetes/issues/74099\\\">kubernetes issue #74099</a>.\\nTo work around this, you can order <code>spec.replicas</code> in Git in the same order that the controller\\nprefers.</li>\\n</ul>\\n<p>In case it is impossible to fix the upstream issue, Argo CD allows you to optionally ignore differences of problematic resources.\\nThe diffing customization can be configured for single or multiple application resources or at a system level.</p>\\n<h2>Application Level Configuration</h2>\\n<p>Argo CD allows ignoring differences at a specific JSON path. The following sample application is configured to ignore differences in <code>spec.replicas</code> for all deployments:</p>\\n<pre><code class=\\\"language-yaml\\\">spec:\\n  ignoreDifferences:\\n  - group: apps\\n    kind: Deployment\\n    jsonPointers:\\n    - /spec/replicas\\n</code></pre>\\n<p>The above customization could be narrowed to a resource with the specified name and optional namespace:</p>\\n<pre><code class=\\\"language-yaml\\\">spec:\\n  ignoreDifferences:\\n  - group: apps\\n    kind: Deployment\\n    name: guestbook\\n    namespace: default\\n    jsonPointers:\\n    - /spec/replicas\\n</code></pre>\\n<h2>System-Level Configuration</h2>\\n<p>The comparison of resources with well-known issues can be customized at a system level. Ignored differences can be configured for a specified group and kind\\nin <code>resource.customizations</code> key of <code>argocd-cm</code> ConfigMap. Following is an example of a customization which ignores the <code>caBundle</code> field\\nof a <code>MutatingWebhookConfiguration</code> webhooks:</p>\\n<pre><code class=\\\"language-yaml\\\">data:\\n  resource.customizations: |\\n    admissionregistration.k8s.io/MutatingWebhookConfiguration:\\n      ignoreDifferences: |\\n        jsonPointers:\\n        - /webhooks/0/clientConfig/caBundle\\n</code></pre>\",\"docPath\":\"argo-cd/docs/user-guide/diffing\",\"proj\":\"argo-cd\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-cd-docs-user-guide-diffing-html.json\n// module id = 579\n// module chunks = 202455983706937"],"sourceRoot":""}