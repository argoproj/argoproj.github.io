{"version":3,"sources":["webpack:///component---src-pages-projects-argo-tsx-e871f30952a015f2a60a.js","webpack:///./src/pages/projects/argo.tsx"],"names":["webpackJsonp","216","module","exports","__webpack_require__","Object","defineProperty","value","React","components_1","default","createElement","Main","Project","noReplace","proj","animationType","markdownHtml","docsLink"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAEAC,QAAOC,eAAeH,EAAS,cAAgBI,OAAO,GCPvD,IAAAC,GAAAJ,EAAA,GAEAK,EAAAL,EAAA,GAEAD,GAAAO,QAAe,WACX,MACIF,GAAAG,cAACF,EAAAG,KAAI,KACDJ,EAAAG,cAACF,EAAAI,SAAQC,WAAW,EAAMC,KAAK,OAAOC,cAAc,cAAcC,aAAa,mzDAwC7EC,SAAS","file":"component---src-pages-projects-argo-tsx-e871f30952a015f2a60a.js","sourcesContent":["webpackJsonp([101468085988347],{\n\n/***/ 216:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar React = __webpack_require__(3);\n\tvar components_1 = __webpack_require__(56);\n\texports.default = function () {\n\t    return React.createElement(components_1.Main, null, React.createElement(components_1.Project, { noReplace: true, proj: 'argo', animationType: 'connections', markdownHtml: '\\n<h2>What is Argo Workflows?</h2>\\n<p>Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. Argo Workflows is implemented as a Kubernetes CRD.</p>\\n<ul>\\n<li>Define workflows where each step in the workflow is a container.</li>\\n<li>Model multi-step workflows as a sequence of tasks or capture the dependencies between tasks using a graph (DAG).</li>\\n<li>Easily run compute intensive jobs for machine learning or data processing in a fraction of the time using Argo Workflows on Kubernetes.</li>\\n<li>Run CI/CD pipelines natively on Kubernetes without configuring complex software development products.</li>\\n</ul>\\n<h2>Why Argo Workflows?</h2>\\n<ul>\\n<li>Designed from the ground up for containers without the overhead and limitations of legacy VM and server-based environments.</li>\\n<li>Cloud agnostic and can run on any Kubernetes cluster.</li>\\n<li>Easily orchestrate highly parallel jobs on Kubernetes.</li>\\n<li>Argo Workflows puts a cloud-scale supercomputer at your fingertips!</li>\\n</ul>\\n<h2>Features</h2>\\n<ul>\\n<li>DAG or Steps based declaration of workflows</li>\\n<li>Artifact support (S3, Artifactory, HTTP, Git, raw)</li>\\n<li>Step level input & outputs (artifacts/parameters)</li>\\n<li>Loops</li>\\n<li>Parameterization</li>\\n<li>Conditionals</li>\\n<li>Timeouts (step & workflow level)</li>\\n<li>Retry (step & workflow level)</li>\\n<li>Resubmit (memoized)</li>\\n<li>Suspend & Resume</li>\\n<li>Cancellation</li>\\n<li>K8s resource orchestration</li>\\n<li>Exit Hooks (notifications, cleanup)</li>\\n<li>Garbage collection of completed workflow</li>\\n<li>Scheduling (affinity/tolerations/node selectors)</li>\\n<li>Volumes (ephemeral/existing)</li>\\n<li>Parallelism limits</li>\\n<li>Daemoned steps</li>\\n<li>DinD (docker-in-docker)</li>\\n<li>Script steps</li>\\n</ul>\\n', docsLink: '/docs/argo/readme.html' }));\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-projects-argo-tsx-e871f30952a015f2a60a.js","import * as React from 'react';\n\nimport { Main, Project } from '../../components';\n\nexport default () => {\n    return (\n        <Main>\n            <Project noReplace={true} proj='argo' animationType='connections' markdownHtml='\n<h2>What is Argo Workflows?</h2>\n<p>Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. Argo Workflows is implemented as a Kubernetes CRD.</p>\n<ul>\n<li>Define workflows where each step in the workflow is a container.</li>\n<li>Model multi-step workflows as a sequence of tasks or capture the dependencies between tasks using a graph (DAG).</li>\n<li>Easily run compute intensive jobs for machine learning or data processing in a fraction of the time using Argo Workflows on Kubernetes.</li>\n<li>Run CI/CD pipelines natively on Kubernetes without configuring complex software development products.</li>\n</ul>\n<h2>Why Argo Workflows?</h2>\n<ul>\n<li>Designed from the ground up for containers without the overhead and limitations of legacy VM and server-based environments.</li>\n<li>Cloud agnostic and can run on any Kubernetes cluster.</li>\n<li>Easily orchestrate highly parallel jobs on Kubernetes.</li>\n<li>Argo Workflows puts a cloud-scale supercomputer at your fingertips!</li>\n</ul>\n<h2>Features</h2>\n<ul>\n<li>DAG or Steps based declaration of workflows</li>\n<li>Artifact support (S3, Artifactory, HTTP, Git, raw)</li>\n<li>Step level input &#x26; outputs (artifacts/parameters)</li>\n<li>Loops</li>\n<li>Parameterization</li>\n<li>Conditionals</li>\n<li>Timeouts (step &#x26; workflow level)</li>\n<li>Retry (step &#x26; workflow level)</li>\n<li>Resubmit (memoized)</li>\n<li>Suspend &#x26; Resume</li>\n<li>Cancellation</li>\n<li>K8s resource orchestration</li>\n<li>Exit Hooks (notifications, cleanup)</li>\n<li>Garbage collection of completed workflow</li>\n<li>Scheduling (affinity/tolerations/node selectors)</li>\n<li>Volumes (ephemeral/existing)</li>\n<li>Parallelism limits</li>\n<li>Daemoned steps</li>\n<li>DinD (docker-in-docker)</li>\n<li>Script steps</li>\n</ul>\n'\n              docsLink='/docs/argo/readme.html'/>\n        </Main>\n    );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/projects/argo.tsx"],"sourceRoot":""}