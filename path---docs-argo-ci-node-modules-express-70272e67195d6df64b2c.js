webpackJsonp([0xad4a0fec431],{2312:function(e,s){e.exports={pathContext:{docHtml:'<p><a href="http://expressjs.com/"><img src="https://i.cloudup.com/zfY6lL7eFa-3000x3000.png" alt="Express Logo"></a></p>\n<p>  Fast, unopinionated, minimalist web framework for <a href="http://nodejs.org">node</a>.</p>\n<p>  <a href="https://npmjs.org/package/express"><img src="https://img.shields.io/npm/v/express.svg" alt="NPM Version"></a>\n<a href="https://npmjs.org/package/express"><img src="https://img.shields.io/npm/dm/express.svg" alt="NPM Downloads"></a>\n<a href="https://travis-ci.org/expressjs/express"><img src="https://img.shields.io/travis/expressjs/express/master.svg?label=linux" alt="Linux Build"></a>\n<a href="https://ci.appveyor.com/project/dougwilson/express"><img src="https://img.shields.io/appveyor/ci/dougwilson/express/master.svg?label=windows" alt="Windows Build"></a>\n<a href="https://coveralls.io/r/expressjs/express?branch=master"><img src="https://img.shields.io/coveralls/expressjs/express/master.svg" alt="Test Coverage"></a></p>\n<pre><code class="language-js">var express = require(\'express\')\nvar app = express()\n\napp.get(\'/\', function (req, res) {\n  res.send(\'Hello World\')\n})\n\napp.listen(3000)\n</code></pre>\n<h2>Installation</h2>\n<p>This is a <a href="https://nodejs.org/en/">Node.js</a> module available through the\n<a href="https://www.npmjs.com/">npm registry</a>.</p>\n<p>Before installing, <a href="https://nodejs.org/en/download/">download and install Node.js</a>.\nNode.js 0.10 or higher is required.</p>\n<p>Installation is done using the\n<a href="https://docs.npmjs.com/getting-started/installing-npm-packages-locally"><code>npm install</code> command</a>:</p>\n<pre><code class="language-bash">$ npm install express\n</code></pre>\n<p>Follow <a href="http://expressjs.com/en/starter/installing.html">our installing guide</a>\nfor more information.</p>\n<h2>Features</h2>\n<ul>\n<li>Robust routing</li>\n<li>Focus on high performance</li>\n<li>Super-high test coverage</li>\n<li>HTTP helpers (redirection, caching, etc)</li>\n<li>View system supporting 14+ template engines</li>\n<li>Content negotiation</li>\n<li>Executable for generating applications quickly</li>\n</ul>\n<h2>Docs &#x26; Community</h2>\n<ul>\n<li><a href="http://expressjs.com/">Website and Documentation</a> - [<a href="https://github.com/expressjs/expressjs.com">website repo</a>]</li>\n<li><a href="https://webchat.freenode.net/?channels=express">#express</a> on freenode IRC</li>\n<li><a href="https://github.com/expressjs">GitHub Organization</a> for Official Middleware &#x26; Modules</li>\n<li>Visit the <a href="https://github.com/expressjs/express/wiki">Wiki</a></li>\n<li><a href="https://groups.google.com/group/express-js">Google Group</a> for discussion</li>\n<li><a href="https://gitter.im/expressjs/express">Gitter</a> for support and discussion</li>\n</ul>\n<p><strong>PROTIP</strong> Be sure to read <a href="https://github.com/expressjs/express/wiki/Migrating-from-3.x-to-4.x">Migrating from 3.x to 4.x</a> as well as <a href="https://github.com/expressjs/express/wiki/New-features-in-4.x">New features in 4.x</a>.</p>\n<h3>Security Issues</h3>\n<p>If you discover a security vulnerability in Express, please see <a href="Security.html">Security Policies and Procedures</a>.</p>\n<h2>Quick Start</h2>\n<p>  The quickest way to get started with express is to utilize the executable <a href="https://github.com/expressjs/generator"><code>express(1)</code></a> to generate an application as shown below:</p>\n<p>  Install the executable. The executable\'s major version will match Express\'s:</p>\n<pre><code class="language-bash">$ npm install -g express-generator@4\n</code></pre>\n<p>  Create the app:</p>\n<pre><code class="language-bash">$ express /tmp/foo &#x26;&#x26; cd /tmp/foo\n</code></pre>\n<p>  Install dependencies:</p>\n<pre><code class="language-bash">$ npm install\n</code></pre>\n<p>  Start the server:</p>\n<pre><code class="language-bash">$ npm start\n</code></pre>\n<h2>Philosophy</h2>\n<p>  The Express philosophy is to provide small, robust tooling for HTTP servers, making\nit a great solution for single page applications, web sites, hybrids, or public\nHTTP APIs.</p>\n<p>  Express does not force you to use any specific ORM or template engine. With support for over\n14 template engines via <a href="https://github.com/tj/consolidate.js">Consolidate.js</a>,\nyou can quickly craft your perfect framework.</p>\n<h2>Examples</h2>\n<p>  To view the examples, clone the Express repo and install the dependencies:</p>\n<pre><code class="language-bash">$ git clone git://github.com/expressjs/express.git --depth 1\n$ cd express\n$ npm install\n</code></pre>\n<p>  Then run whichever example you want:</p>\n<pre><code class="language-bash">$ node examples/content-negotiation\n</code></pre>\n<h2>Tests</h2>\n<p>  To run the test suite, first install the dependencies, then run <code>npm test</code>:</p>\n<pre><code class="language-bash">$ npm install\n$ npm test\n</code></pre>\n<h2>People</h2>\n<p>The original author of Express is <a href="https://github.com/tj">TJ Holowaychuk</a> <a href="https://gratipay.com/visionmedia/"><img src="https://img.shields.io/gratipay/visionmedia.svg" alt="TJ&#x27;s Gratipay"></a></p>\n<p>The current lead maintainer is <a href="https://github.com/dougwilson">Douglas Christopher Wilson</a> <a href="https://gratipay.com/dougwilson/"><img src="https://img.shields.io/gratipay/dougwilson.svg" alt="Doug&#x27;s Gratipay"></a></p>\n<p><a href="https://github.com/expressjs/express/graphs/contributors">List of all contributors</a></p>\n<h2>License</h2>\n<p>  <a href="LICENSE">MIT</a></p>',docPath:"argo-ci/node_modules/express/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-express-70272e67195d6df64b2c.js.map