{"version":3,"sources":["webpack:///path---docs-argo-events-docs-gateways-slack-html-a9f7d5eb5ff3736f1bc7.js","webpack:///./.cache/json/docs-argo-events-docs-gateways-slack-html.json"],"names":["webpackJsonp","629","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,42CAAAC,QAAA,kCAAAC,KAAA","file":"path---docs-argo-events-docs-gateways-slack-html-a9f7d5eb5ff3736f1bc7.js","sourcesContent":["webpackJsonp([146101636869933],{\n\n/***/ 629:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>Slack</h1>\\n<p>The gateway listens to events from Slack.</p>\\n<h3>How to define an event source in confimap?</h3>\\n<p>An entry in the gateway configmap corresponds to <a href=\\\"https://github.com/argoproj/argo-events/blob/30eaa296651e80b11ffef3b20464a08a2041eb09/gateways/community/slack/config.go#L46-L49\\\">this</a>.</p>\\n<p>The gateway spec defined in <code>examples</code> has a <code>serviceSpec</code>. This service is used to expose the gateway server and make it reachable from Slack.</p>\\n<p>Create a K8s token that contains your slack <code>token</code> and refer that secret in gateway configmap.</p>\\n<p><strong>Note:</strong> The gateway will not register the webhook endpoint on Slack. You need to manually do it.</p>\\n<p><strong>How to get the URL for the service?</strong></p>\\n<p>Depending upon the Kubernetes provider, you can create the Ingress or Route. </p>\\n<h2>Setup</h2>\\n<p><strong>1. Install <a href=\\\"../../examples/gateways/slack.yaml\\\">Gateway</a></strong></p>\\n<p>Make sure gateway pod and service is running</p>\\n<p><strong>2. Install <a href=\\\"../../examples/event-sources/slack.yaml\\\">Event Source</a></strong></p>\\n<p><strong>3. Install <a href=\\\"../../examples/sensors/slack.yaml\\\">Sensor</a></strong></p>\\n<p>Make sure sensor pod is created.</p>\\n<p><strong>4. Trigger Workflow</strong></p>\\n<p>A workflow will be triggered when slack sends an event.</p>\",\"docPath\":\"argo-events/docs/gateways/slack\",\"proj\":\"argo-events\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-events-docs-gateways-slack-html-a9f7d5eb5ff3736f1bc7.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>Slack</h1>\\n<p>The gateway listens to events from Slack.</p>\\n<h3>How to define an event source in confimap?</h3>\\n<p>An entry in the gateway configmap corresponds to <a href=\\\"https://github.com/argoproj/argo-events/blob/30eaa296651e80b11ffef3b20464a08a2041eb09/gateways/community/slack/config.go#L46-L49\\\">this</a>.</p>\\n<p>The gateway spec defined in <code>examples</code> has a <code>serviceSpec</code>. This service is used to expose the gateway server and make it reachable from Slack.</p>\\n<p>Create a K8s token that contains your slack <code>token</code> and refer that secret in gateway configmap.</p>\\n<p><strong>Note:</strong> The gateway will not register the webhook endpoint on Slack. You need to manually do it.</p>\\n<p><strong>How to get the URL for the service?</strong></p>\\n<p>Depending upon the Kubernetes provider, you can create the Ingress or Route. </p>\\n<h2>Setup</h2>\\n<p><strong>1. Install <a href=\\\"../../examples/gateways/slack.yaml\\\">Gateway</a></strong></p>\\n<p>Make sure gateway pod and service is running</p>\\n<p><strong>2. Install <a href=\\\"../../examples/event-sources/slack.yaml\\\">Event Source</a></strong></p>\\n<p><strong>3. Install <a href=\\\"../../examples/sensors/slack.yaml\\\">Sensor</a></strong></p>\\n<p>Make sure sensor pod is created.</p>\\n<p><strong>4. Trigger Workflow</strong></p>\\n<p>A workflow will be triggered when slack sends an event.</p>\",\"docPath\":\"argo-events/docs/gateways/slack\",\"proj\":\"argo-events\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-events-docs-gateways-slack-html.json\n// module id = 629\n// module chunks = 146101636869933"],"sourceRoot":""}