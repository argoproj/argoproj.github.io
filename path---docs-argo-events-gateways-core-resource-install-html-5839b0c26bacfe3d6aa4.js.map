{"version":3,"sources":["webpack:///path---docs-argo-events-gateways-core-resource-install-html-5839b0c26bacfe3d6aa4.js","webpack:///./.cache/json/docs-argo-events-gateways-core-resource-install-html.json"],"names":["webpackJsonp","607","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,kuEAAsCC,QAAA,6CAAAC,KAAA","file":"path---docs-argo-events-gateways-core-resource-install-html-5839b0c26bacfe3d6aa4.js","sourcesContent":["webpackJsonp([122136122028405],{\n\n/***/ 607:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>Resource Gateway &#x26; Sensor</h1>\\n<p>K8s resources act as event sources for Resource gateway</p>\\n<ol>\\n<li><a href=\\\"#example-event-sources-definition\\\">Example event sources definition</a></li>\\n<li><a href=\\\"#install-gateway\\\">Install gateway</a></li>\\n<li><a href=\\\"#install-sensor\\\">Install sensor</a></li>\\n<li><a href=\\\"#trigger-workflow\\\">Trigger Workflow</a></li>\\n</ol>\\n<h2>Example event sources definition</h2>\\n<pre><code class=\\\"language-yaml\\\">apiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: resource-gateway-configmap\\ndata:\\n  successWorkflow: |-\\n    namespace: argo-events # namespace where wf is deloyed\\n    group: \\\"argoproj.io\\\" # wf group\\n    version: \\\"v1alpha1\\\" # wf version\\n    kind: \\\"Workflow\\\" # object kind\\n    filter: # filters can be applied on labels, annotations, creation time and name \\n      labels:\\n        workflows.argoproj.io/phase: Succeeded\\n        name: \\\"my-workflow\\\"\\n  failureWorkflow: |-\\n    namespace: argo-events\\n    group: \\\"argoproj.io\\\"\\n    version: \\\"v1alpha1\\\"\\n    kind: \\\"Workflow\\\"\\n    filter:\\n      prefix: scripts-bash\\n      labels:\\n        workflows.argoproj.io/phase: Failed\\n</code></pre>\\n<p>Create gateway event sources</p>\\n<pre><code class=\\\"language-yaml\\\">kubectl -n argo-events create -f  https://github.com/argoproj/argo-events/blob/master/examples/gateways/resource-gateway-configmap.yaml\\n</code></pre>\\n<h2>Install gateway</h2>\\n<ol>\\n<li>\\n<p><strong>Create gateway</strong></p>\\n<pre><code class=\\\"language-yaml\\\">kubectl -n argo-events create -f https://github.com/argoproj/argo-events/blob/master/examples/gateways/resource.yaml\\n</code></pre>\\n</li>\\n<li>\\n<p><strong>Check the status of the gateway</strong></p>\\n<pre><code class=\\\"language-yaml\\\">kubectl -n argo-events describe gateway resource-gateway\\n</code></pre>\\n<p>Make sure the gateway is in active state and all the event sources are in running state.</p>\\n</li>\\n</ol>\\n<h2>Install Sensor</h2>\\n<pre><code class=\\\"language-yaml\\\">kubectl -n argo-events create -f https://github.com/argoproj/argo-events/blob/master/examples/sensors/resource.yaml\\n</code></pre>\\n<h2>Trigger workflow</h2>\\n<p>Create an argo workflow with name <code>my-workflow</code>. As soon as <code>my-workflow</code> succeeds, a new workflow will be triggered.</p>\",\"docPath\":\"argo-events/gateways/core/resource/install\",\"proj\":\"argo-events\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-events-gateways-core-resource-install-html-5839b0c26bacfe3d6aa4.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>Resource Gateway &#x26; Sensor</h1>\\n<p>K8s resources act as event sources for Resource gateway</p>\\n<ol>\\n<li><a href=\\\"#example-event-sources-definition\\\">Example event sources definition</a></li>\\n<li><a href=\\\"#install-gateway\\\">Install gateway</a></li>\\n<li><a href=\\\"#install-sensor\\\">Install sensor</a></li>\\n<li><a href=\\\"#trigger-workflow\\\">Trigger Workflow</a></li>\\n</ol>\\n<h2>Example event sources definition</h2>\\n<pre><code class=\\\"language-yaml\\\">apiVersion: v1\\nkind: ConfigMap\\nmetadata:\\n  name: resource-gateway-configmap\\ndata:\\n  successWorkflow: |-\\n    namespace: argo-events # namespace where wf is deloyed\\n    group: \\\"argoproj.io\\\" # wf group\\n    version: \\\"v1alpha1\\\" # wf version\\n    kind: \\\"Workflow\\\" # object kind\\n    filter: # filters can be applied on labels, annotations, creation time and name \\n      labels:\\n        workflows.argoproj.io/phase: Succeeded\\n        name: \\\"my-workflow\\\"\\n  failureWorkflow: |-\\n    namespace: argo-events\\n    group: \\\"argoproj.io\\\"\\n    version: \\\"v1alpha1\\\"\\n    kind: \\\"Workflow\\\"\\n    filter:\\n      prefix: scripts-bash\\n      labels:\\n        workflows.argoproj.io/phase: Failed\\n</code></pre>\\n<p>Create gateway event sources</p>\\n<pre><code class=\\\"language-yaml\\\">kubectl -n argo-events create -f  https://github.com/argoproj/argo-events/blob/master/examples/gateways/resource-gateway-configmap.yaml\\n</code></pre>\\n<h2>Install gateway</h2>\\n<ol>\\n<li>\\n<p><strong>Create gateway</strong></p>\\n<pre><code class=\\\"language-yaml\\\">kubectl -n argo-events create -f https://github.com/argoproj/argo-events/blob/master/examples/gateways/resource.yaml\\n</code></pre>\\n</li>\\n<li>\\n<p><strong>Check the status of the gateway</strong></p>\\n<pre><code class=\\\"language-yaml\\\">kubectl -n argo-events describe gateway resource-gateway\\n</code></pre>\\n<p>Make sure the gateway is in active state and all the event sources are in running state.</p>\\n</li>\\n</ol>\\n<h2>Install Sensor</h2>\\n<pre><code class=\\\"language-yaml\\\">kubectl -n argo-events create -f https://github.com/argoproj/argo-events/blob/master/examples/sensors/resource.yaml\\n</code></pre>\\n<h2>Trigger workflow</h2>\\n<p>Create an argo workflow with name <code>my-workflow</code>. As soon as <code>my-workflow</code> succeeds, a new workflow will be triggered.</p>\",\"docPath\":\"argo-events/gateways/core/resource/install\",\"proj\":\"argo-events\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-events-gateways-core-resource-install-html.json\n// module id = 607\n// module chunks = 122136122028405"],"sourceRoot":""}