{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-osenv-2900d1fe413730901d04.js","webpack:///./.cache/json/docs-argo-ci-node-modules-osenv.json"],"names":["webpackJsonp","3011","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,iqDAAk0BC,QAAA,oCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-osenv-2900d1fe413730901d04.js","sourcesContent":["webpackJsonp([142637821814527],{\n\n/***/ 3011:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>osenv</h1>\\n<p>Look up environment settings specific to different operating systems.</p>\\n<h2>Usage</h2>\\n<pre><code class=\\\"language-javascript\\\">var osenv = require('osenv')\\nvar path = osenv.path()\\nvar user = osenv.user()\\n// etc.\\n\\n// Some things are not reliably in the env, and have a fallback command:\\nvar h = osenv.hostname(function (er, hostname) {\\n  h = hostname\\n})\\n// This will still cause it to be memoized, so calling osenv.hostname()\\n// is now an immediate operation.\\n\\n// You can always send a cb, which will get called in the nextTick\\n// if it's been memoized, or wait for the fallback data if it wasn't\\n// found in the environment.\\nosenv.hostname(function (er, hostname) {\\n  if (er) console.error('error looking up hostname')\\n  else console.log('this machine calls itself %s', hostname)\\n})\\n</code></pre>\\n<h2>osenv.hostname()</h2>\\n<p>The machine name.  Calls <code>hostname</code> if not found.</p>\\n<h2>osenv.user()</h2>\\n<p>The currently logged-in user.  Calls <code>whoami</code> if not found.</p>\\n<h2>osenv.prompt()</h2>\\n<p>Either PS1 on unix, or PROMPT on Windows.</p>\\n<h2>osenv.tmpdir()</h2>\\n<p>The place where temporary files should be created.</p>\\n<h2>osenv.home()</h2>\\n<p>No place like it.</p>\\n<h2>osenv.path()</h2>\\n<p>An array of the places that the operating system will search for\\nexecutables.</p>\\n<h2>osenv.editor()</h2>\\n<p>Return the executable name of the editor program.  This uses the EDITOR\\nand VISUAL environment variables, and falls back to <code>vi</code> on Unix, or\\n<code>notepad.exe</code> on Windows.</p>\\n<h2>osenv.shell()</h2>\\n<p>The SHELL on Unix, which Windows calls the ComSpec.  Defaults to 'bash'\\nor 'cmd'.</p>\",\"docPath\":\"argo-ci/node_modules/osenv/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-osenv-2900d1fe413730901d04.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>osenv</h1>\\n<p>Look up environment settings specific to different operating systems.</p>\\n<h2>Usage</h2>\\n<pre><code class=\\\"language-javascript\\\">var osenv = require('osenv')\\nvar path = osenv.path()\\nvar user = osenv.user()\\n// etc.\\n\\n// Some things are not reliably in the env, and have a fallback command:\\nvar h = osenv.hostname(function (er, hostname) {\\n  h = hostname\\n})\\n// This will still cause it to be memoized, so calling osenv.hostname()\\n// is now an immediate operation.\\n\\n// You can always send a cb, which will get called in the nextTick\\n// if it's been memoized, or wait for the fallback data if it wasn't\\n// found in the environment.\\nosenv.hostname(function (er, hostname) {\\n  if (er) console.error('error looking up hostname')\\n  else console.log('this machine calls itself %s', hostname)\\n})\\n</code></pre>\\n<h2>osenv.hostname()</h2>\\n<p>The machine name.  Calls <code>hostname</code> if not found.</p>\\n<h2>osenv.user()</h2>\\n<p>The currently logged-in user.  Calls <code>whoami</code> if not found.</p>\\n<h2>osenv.prompt()</h2>\\n<p>Either PS1 on unix, or PROMPT on Windows.</p>\\n<h2>osenv.tmpdir()</h2>\\n<p>The place where temporary files should be created.</p>\\n<h2>osenv.home()</h2>\\n<p>No place like it.</p>\\n<h2>osenv.path()</h2>\\n<p>An array of the places that the operating system will search for\\nexecutables.</p>\\n<h2>osenv.editor()</h2>\\n<p>Return the executable name of the editor program.  This uses the EDITOR\\nand VISUAL environment variables, and falls back to <code>vi</code> on Unix, or\\n<code>notepad.exe</code> on Windows.</p>\\n<h2>osenv.shell()</h2>\\n<p>The SHELL on Unix, which Windows calls the ComSpec.  Defaults to 'bash'\\nor 'cmd'.</p>\",\"docPath\":\"argo-ci/node_modules/osenv/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-osenv.json\n// module id = 3011\n// module chunks = 142637821814527"],"sourceRoot":""}