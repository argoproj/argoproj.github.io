webpackJsonp([0x66b65e22790d],{634:function(e,a){e.exports={pathContext:{docHtml:'<p align="center">\n  <img src="https://github.com/argoproj/argo-events/blob/ebdbdd4a2a8ce47a0fc6e9a6a63531be2c26148a/docs/assets/slack.png?raw=true" alt="Slack">\n</p>\n<br/>\n<h1>Slack</h1>\n<p>The gateway listens to events from Slack.</p>\n<h3>How to define an event source in confimap?</h3>\n<p>An entry in the gateway configmap corresponds to <a href="https://github.com/argoproj/argo-events/blob/30eaa296651e80b11ffef3b20464a08a2041eb09/gateways/community/slack/config.go#L46-L49">this</a>.</p>\n<p>The gateway spec defined in <code>examples</code> has a <code>serviceSpec</code>. This service is used to expose the gateway server and make it reachable from Slack.</p>\n<p>Create a K8s token that contains your slack <code>token</code> and refer that secret in gateway configmap.</p>\n<p><strong>Note:</strong> The gateway will not register the webhook endpoint on Slack. You need to manually do it.</p>\n<p><strong>How to get the URL for the service?</strong></p>\n<p>Depending upon the Kubernetes provider, you can create the Ingress or Route. </p>\n<h2>Setup</h2>\n<p><strong>1. Install <a href="../../../examples/gateways/slack.yaml">Gateway</a></strong></p>\n<p>Make sure gateway pod and service is running</p>\n<p><strong>2. Install <a href="../../../examples/gateways/slack-gateway-configmap.yaml">Gateway Configmap</a></strong></p>\n<p><strong>3. Install <a href="../../../examples/sensors/slack.yaml">Sensor</a></strong></p>\n<p>Make sure sensor pod is created.</p>\n<p><strong>4. Trigger Workflow</strong></p>\n<p>A workflow will be triggered when slack sends an event.</p>',docPath:"argo-events/gateways/community/slack/readme",proj:"argo-events"}}}});
//# sourceMappingURL=path---docs-argo-events-gateways-community-slack-dd64adf0d511b690d759.js.map