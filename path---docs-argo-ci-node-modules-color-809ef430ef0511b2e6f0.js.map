{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-color-809ef430ef0511b2e6f0.js","webpack:///./.cache/json/docs-argo-ci-node-modules-color.json"],"names":["webpackJsonp","2174","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,+0IAA6iGC,QAAA,oCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-color-809ef430ef0511b2e6f0.js","sourcesContent":["webpackJsonp([88389511742434],{\n\n/***/ 2174:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>color <a href=\\\"https://travis-ci.org/Qix-/color\\\"><img src=\\\"https://travis-ci.org/Qix-/color.svg?branch=master\\\" alt=\\\"Build Status\\\"></a></h1>\\n<blockquote>\\n<p>JavaScript library for immutable color conversion and manipulation with support for CSS color strings.</p>\\n</blockquote>\\n<pre><code class=\\\"language-js\\\">var color = Color('#7743CE').alpha(0.5).lighten(0.5);\\nconsole.log(color.hsl().string());  // 'hsla(262, 59%, 81%, 0.5)'\\n\\nconsole.log(color.cmyk().round().array());  // [ 16, 25, 0, 8, 0.5 ]\\n\\nconsole.log(color.ansi256().object());  // { ansi256: 183, alpha: 0.5 }\\n</code></pre>\\n<h2>Install</h2>\\n<pre><code class=\\\"language-console\\\">$ npm install color\\n</code></pre>\\n<h2>Usage</h2>\\n<pre><code class=\\\"language-js\\\">var Color = require('color');\\n</code></pre>\\n<h3>Constructors</h3>\\n<pre><code class=\\\"language-js\\\">var color = Color('rgb(255, 255, 255)')\\nvar color = Color({r: 255, g: 255, b: 255})\\nvar color = Color.rgb(255, 255, 255)\\nvar color = Color.rgb([255, 255, 255])\\n</code></pre>\\n<p>Set the values for individual channels with <code>alpha</code>, <code>red</code>, <code>green</code>, <code>blue</code>, <code>hue</code>, <code>saturationl</code> (hsl), <code>saturationv</code> (hsv), <code>lightness</code>, <code>whiteness</code>, <code>blackness</code>, <code>cyan</code>, <code>magenta</code>, <code>yellow</code>, <code>black</code></p>\\n<p>String constructors are handled by <a href=\\\"https://www.npmjs.com/package/color-string\\\">color-string</a></p>\\n<h3>Getters</h3>\\n<pre><code class=\\\"language-js\\\">color.hsl();\\n</code></pre>\\n<p>Convert a color to a different space (<code>hsl()</code>, <code>cmyk()</code>, etc.).</p>\\n<pre><code class=\\\"language-js\\\">color.object(); // {r: 255, g: 255, b: 255}\\n</code></pre>\\n<p>Get a hash of the color value. Reflects the color's current model (see above).</p>\\n<pre><code class=\\\"language-js\\\">color.rgb().array()  // [255, 255, 255]\\n</code></pre>\\n<p>Get an array of the values with <code>array()</code>. Reflects the color's current model (see above).</p>\\n<pre><code class=\\\"language-js\\\">color.rgbNumber() // 16777215 (0xffffff)\\n</code></pre>\\n<p>Get the rgb number value.</p>\\n<pre><code class=\\\"language-js\\\">color.red()       // 255\\n</code></pre>\\n<p>Get the value for an individual channel.</p>\\n<h3>CSS Strings</h3>\\n<pre><code class=\\\"language-js\\\">color.hsl().string()  // 'hsl(320, 50%, 100%)'\\n</code></pre>\\n<p>Calling <code>.string()</code> with a number rounds the numbers to that decimal place. It defaults to 1.</p>\\n<h3>Luminosity</h3>\\n<pre><code class=\\\"language-js\\\">color.luminosity();  // 0.412\\n</code></pre>\\n<p>The <a href=\\\"http://www.w3.org/TR/WCAG20/#relativeluminancedef\\\">WCAG luminosity</a> of the color. 0 is black, 1 is white.</p>\\n<pre><code class=\\\"language-js\\\">color.contrast(Color(\\\"blue\\\"))  // 12\\n</code></pre>\\n<p>The <a href=\\\"http://www.w3.org/TR/WCAG20/#contrast-ratiodef\\\">WCAG contrast ratio</a> to another color, from 1 (same color) to 21 (contrast b/w white and black).</p>\\n<pre><code class=\\\"language-js\\\">color.isLight();  // true\\ncolor.isDark();   // false\\n</code></pre>\\n<p>Get whether the color is \\\"light\\\" or \\\"dark\\\", useful for deciding text color.</p>\\n<h3>Manipulation</h3>\\n<pre><code class=\\\"language-js\\\">color.negate()         // rgb(0, 100, 255) -> rgb(255, 155, 0)\\n\\ncolor.lighten(0.5)     // hsl(100, 50%, 50%) -> hsl(100, 50%, 75%)\\ncolor.darken(0.5)      // hsl(100, 50%, 50%) -> hsl(100, 50%, 25%)\\n\\ncolor.saturate(0.5)    // hsl(100, 50%, 50%) -> hsl(100, 75%, 50%)\\ncolor.desaturate(0.5)  // hsl(100, 50%, 50%) -> hsl(100, 25%, 50%)\\ncolor.grayscale()      // #5CBF54 -> #969696\\n\\ncolor.whiten(0.5)      // hwb(100, 50%, 50%) -> hwb(100, 75%, 50%)\\ncolor.blacken(0.5)     // hwb(100, 50%, 50%) -> hwb(100, 50%, 75%)\\n\\ncolor.fade(0.5)     // rgba(10, 10, 10, 0.8) -> rgba(10, 10, 10, 0.4)\\ncolor.opaquer(0.5)     // rgba(10, 10, 10, 0.8) -> rgba(10, 10, 10, 1.0)\\n\\ncolor.rotate(180)      // hsl(60, 20%, 20%) -> hsl(240, 20%, 20%)\\ncolor.rotate(-90)      // hsl(60, 20%, 20%) -> hsl(330, 20%, 20%)\\n\\ncolor.mix(Color(\\\"yellow\\\"))        // cyan -> rgb(128, 255, 128)\\ncolor.mix(Color(\\\"yellow\\\"), 0.3)   // cyan -> rgb(77, 255, 179)\\n\\n// chaining\\ncolor.green(100).grayscale().lighten(0.6)\\n</code></pre>\\n<h2>Propers</h2>\\n<p>The API was inspired by <a href=\\\"https://github.com/brehaut/color-js\\\">color-js</a>. Manipulation functions by CSS tools like Sass, LESS, and Stylus.</p>\",\"docPath\":\"argo-ci/node_modules/color/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-color-809ef430ef0511b2e6f0.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>color <a href=\\\"https://travis-ci.org/Qix-/color\\\"><img src=\\\"https://travis-ci.org/Qix-/color.svg?branch=master\\\" alt=\\\"Build Status\\\"></a></h1>\\n<blockquote>\\n<p>JavaScript library for immutable color conversion and manipulation with support for CSS color strings.</p>\\n</blockquote>\\n<pre><code class=\\\"language-js\\\">var color = Color('#7743CE').alpha(0.5).lighten(0.5);\\nconsole.log(color.hsl().string());  // 'hsla(262, 59%, 81%, 0.5)'\\n\\nconsole.log(color.cmyk().round().array());  // [ 16, 25, 0, 8, 0.5 ]\\n\\nconsole.log(color.ansi256().object());  // { ansi256: 183, alpha: 0.5 }\\n</code></pre>\\n<h2>Install</h2>\\n<pre><code class=\\\"language-console\\\">$ npm install color\\n</code></pre>\\n<h2>Usage</h2>\\n<pre><code class=\\\"language-js\\\">var Color = require('color');\\n</code></pre>\\n<h3>Constructors</h3>\\n<pre><code class=\\\"language-js\\\">var color = Color('rgb(255, 255, 255)')\\nvar color = Color({r: 255, g: 255, b: 255})\\nvar color = Color.rgb(255, 255, 255)\\nvar color = Color.rgb([255, 255, 255])\\n</code></pre>\\n<p>Set the values for individual channels with <code>alpha</code>, <code>red</code>, <code>green</code>, <code>blue</code>, <code>hue</code>, <code>saturationl</code> (hsl), <code>saturationv</code> (hsv), <code>lightness</code>, <code>whiteness</code>, <code>blackness</code>, <code>cyan</code>, <code>magenta</code>, <code>yellow</code>, <code>black</code></p>\\n<p>String constructors are handled by <a href=\\\"https://www.npmjs.com/package/color-string\\\">color-string</a></p>\\n<h3>Getters</h3>\\n<pre><code class=\\\"language-js\\\">color.hsl();\\n</code></pre>\\n<p>Convert a color to a different space (<code>hsl()</code>, <code>cmyk()</code>, etc.).</p>\\n<pre><code class=\\\"language-js\\\">color.object(); // {r: 255, g: 255, b: 255}\\n</code></pre>\\n<p>Get a hash of the color value. Reflects the color's current model (see above).</p>\\n<pre><code class=\\\"language-js\\\">color.rgb().array()  // [255, 255, 255]\\n</code></pre>\\n<p>Get an array of the values with <code>array()</code>. Reflects the color's current model (see above).</p>\\n<pre><code class=\\\"language-js\\\">color.rgbNumber() // 16777215 (0xffffff)\\n</code></pre>\\n<p>Get the rgb number value.</p>\\n<pre><code class=\\\"language-js\\\">color.red()       // 255\\n</code></pre>\\n<p>Get the value for an individual channel.</p>\\n<h3>CSS Strings</h3>\\n<pre><code class=\\\"language-js\\\">color.hsl().string()  // 'hsl(320, 50%, 100%)'\\n</code></pre>\\n<p>Calling <code>.string()</code> with a number rounds the numbers to that decimal place. It defaults to 1.</p>\\n<h3>Luminosity</h3>\\n<pre><code class=\\\"language-js\\\">color.luminosity();  // 0.412\\n</code></pre>\\n<p>The <a href=\\\"http://www.w3.org/TR/WCAG20/#relativeluminancedef\\\">WCAG luminosity</a> of the color. 0 is black, 1 is white.</p>\\n<pre><code class=\\\"language-js\\\">color.contrast(Color(\\\"blue\\\"))  // 12\\n</code></pre>\\n<p>The <a href=\\\"http://www.w3.org/TR/WCAG20/#contrast-ratiodef\\\">WCAG contrast ratio</a> to another color, from 1 (same color) to 21 (contrast b/w white and black).</p>\\n<pre><code class=\\\"language-js\\\">color.isLight();  // true\\ncolor.isDark();   // false\\n</code></pre>\\n<p>Get whether the color is \\\"light\\\" or \\\"dark\\\", useful for deciding text color.</p>\\n<h3>Manipulation</h3>\\n<pre><code class=\\\"language-js\\\">color.negate()         // rgb(0, 100, 255) -> rgb(255, 155, 0)\\n\\ncolor.lighten(0.5)     // hsl(100, 50%, 50%) -> hsl(100, 50%, 75%)\\ncolor.darken(0.5)      // hsl(100, 50%, 50%) -> hsl(100, 50%, 25%)\\n\\ncolor.saturate(0.5)    // hsl(100, 50%, 50%) -> hsl(100, 75%, 50%)\\ncolor.desaturate(0.5)  // hsl(100, 50%, 50%) -> hsl(100, 25%, 50%)\\ncolor.grayscale()      // #5CBF54 -> #969696\\n\\ncolor.whiten(0.5)      // hwb(100, 50%, 50%) -> hwb(100, 75%, 50%)\\ncolor.blacken(0.5)     // hwb(100, 50%, 50%) -> hwb(100, 50%, 75%)\\n\\ncolor.fade(0.5)     // rgba(10, 10, 10, 0.8) -> rgba(10, 10, 10, 0.4)\\ncolor.opaquer(0.5)     // rgba(10, 10, 10, 0.8) -> rgba(10, 10, 10, 1.0)\\n\\ncolor.rotate(180)      // hsl(60, 20%, 20%) -> hsl(240, 20%, 20%)\\ncolor.rotate(-90)      // hsl(60, 20%, 20%) -> hsl(330, 20%, 20%)\\n\\ncolor.mix(Color(\\\"yellow\\\"))        // cyan -> rgb(128, 255, 128)\\ncolor.mix(Color(\\\"yellow\\\"), 0.3)   // cyan -> rgb(77, 255, 179)\\n\\n// chaining\\ncolor.green(100).grayscale().lighten(0.6)\\n</code></pre>\\n<h2>Propers</h2>\\n<p>The API was inspired by <a href=\\\"https://github.com/brehaut/color-js\\\">color-js</a>. Manipulation functions by CSS tools like Sass, LESS, and Stylus.</p>\",\"docPath\":\"argo-ci/node_modules/color/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-color.json\n// module id = 2174\n// module chunks = 88389511742434"],"sourceRoot":""}