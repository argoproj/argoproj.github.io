webpackJsonp([0xe54f40037d4],{561:function(e,t){e.exports={pathContext:{docHtml:'<h1 id="resource-health"><a href="#resource-health" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Resource Health</h1>\n<h2 id="overview"><a href="#overview" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Overview</h2>\n<p>Argo CD provides built-in health assessment for several standard Kubernetes types, which is then\nsurfaced to the overall Application health status as a whole. The following checks are made for\nspecific types of kuberentes resources:</p>\n<h3 id="deployment-replicaset-statefulset-daemonset"><a href="#deployment-replicaset-statefulset-daemonset" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Deployment, ReplicaSet, StatefulSet DaemonSet</h3>\n<ul>\n<li>Observed generation is equal to desired generation.</li>\n<li>Number of <strong>updated</strong> replicas equals the number of desired replicas.</li>\n</ul>\n<h3 id="service"><a href="#service" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Service</h3>\n<ul>\n<li>If service type is of type <code>LoadBalancer</code>, the <code>status.loadBalancer.ingress</code> list is non-empty,\nwith at least one value for <code>hostname</code> or <code>IP</code>.</li>\n</ul>\n<h3 id="ingress"><a href="#ingress" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Ingress</h3>\n<ul>\n<li>The <code>status.loadBalancer.ingress</code> list is non-empty, with at least one value for <code>hostname</code> or <code>IP</code>.</li>\n</ul>\n<h3 id="persistentvolumeclaim"><a href="#persistentvolumeclaim" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PersistentVolumeClaim</h3>\n<ul>\n<li>The <code>status.phase</code> is <code>Bound</code></li>\n</ul>\n<h2 id="custom-health-checks"><a href="#custom-health-checks" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Custom Health Checks</h2>\n<p>Argo CD supports custom health checks written in <a href="https://www.lua.org/">Lua</a>. This is useful if you:</p>\n<ul>\n<li>Are affected by known issues where your <code>Ingress</code> or <code>StatefulSet</code> resources are stuck in <code>Progressing</code> state because of bug in your resource controller.</li>\n<li>Have a custom resource for which Argo CD does not have a built-in health check.</li>\n</ul>\n<p>There are two ways to configure a custom health check. The next two sections describe those ways.</p>\n<h3 id="way-1-define-a-custom-health-check-in-argocd-cm-configmap"><a href="#way-1-define-a-custom-health-check-in-argocd-cm-configmap" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Way 1. Define a Custom Health Check in <code>argocd-cm</code> ConfigMap</h3>\n<p>Custom health checks can be defined in <code>resource.customizations</code> field of <code>argocd-cm</code>. Following example demonstrates a health check for <code>certmanager.k8s.io/Certificate</code>.</p>\n<pre><code class="language-yaml">data:\n  resource.customizations: |\n    certmanager.k8s.io/Certificate:\n      health.lua: |\n        hs = {}\n        if obj.status ~= nil then\n          if obj.status.conditions ~= nil then\n            for i, condition in ipairs(obj.status.conditions) do\n              if condition.type == "Ready" and condition.status == "False" then\n                hs.status = "Degraded"\n                hs.message = condition.message\n                return hs\n              end\n              if condition.type == "Ready" and condition.status == "True" then\n                hs.status = "Healthy"\n                hs.message = condition.message\n                return hs\n              end\n            end\n          end\n        end\n        \n        hs.status = "Progressing"\n        hs.message = "Waiting for certificate"\n        return hs\n</code></pre>\n<p>The <code>obj</code> is a global variable which contains the resource. The script must return an object with status and optional message field.</p>\n<p>NOTE: as a security measure you don\'t have access to most of the standard Lua libraries.</p>\n<h3 id="way-2-contribute-a-custom-health-check"><a href="#way-2-contribute-a-custom-health-check" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Way 2. Contribute a Custom Health Check</h3>\n<p>A health check can be bundled into Argo CD. Custom health check scripts are located in the <code>resource_customizations</code> directory of <a href="https://github.com/argoproj/argo-cd">https://github.com/argoproj/argo-cd</a>. This must have the following directory structure:</p>\n<pre><code>argo-cd\n|-- resource_customizations\n|    |-- your.crd.group.io               # CRD group\n|    |    |-- MyKind                     # Resource kind\n|    |    |    |-- health.lua            # Health check\n|    |    |    |-- health_test.yaml      # Test inputs and expected results\n|    |    |    +-- testdata              # Directory with test resource YAML definitions\n</code></pre>\n<p>Each health check must have tests defined in <code>health_test.yaml</code> file. The <code>health_test.yaml</code> is a YAML file with the following structure:</p>\n<pre><code class="language-yaml">tests:\n- healthStatus:\n    status: ExpectedStatus\n    message: Expected message\n  inputPath: testdata/test-resource-definition.yaml\n</code></pre>\n<p>The <a href="https://github.com/argoproj/argo-cd/pull/1139">PR#1139</a> is an example of Cert Manager CRDs custom health check.</p>',docPath:"argo-cd/docs/operator-manual/health",proj:"argo-cd"}}}});
//# sourceMappingURL=path---docs-argo-cd-docs-operator-manual-health-html-8ba739bf0db398911356.js.map