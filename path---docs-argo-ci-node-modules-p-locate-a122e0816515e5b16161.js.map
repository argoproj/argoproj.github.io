{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-p-locate-a122e0816515e5b16161.js","webpack:///./.cache/json/docs-argo-ci-node-modules-p-locate.json"],"names":["webpackJsonp","3017","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,+pFAA8qDC,QAAA,uCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-p-locate-a122e0816515e5b16161.js","sourcesContent":["webpackJsonp([126181743090839],{\n\n/***/ 3017:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>p-locate <a href=\\\"https://travis-ci.org/sindresorhus/p-locate\\\"><img src=\\\"https://travis-ci.org/sindresorhus/p-locate.svg?branch=master\\\" alt=\\\"Build Status\\\"></a></h1>\\n<blockquote>\\n<p>Get the first fulfilled promise that satisfies the provided testing function</p>\\n</blockquote>\\n<p>Think of it like an async version of <a href=\\\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/find\\\"><code>Array#find</code></a>.</p>\\n<h2>Install</h2>\\n<pre><code>$ npm install --save p-locate\\n</code></pre>\\n<h2>Usage</h2>\\n<p>Here we find the first file that exists on disk, in array order.</p>\\n<pre><code class=\\\"language-js\\\">const pathExists = require('path-exists');\\nconst pLocate = require('p-locate');\\n\\nconst files = [\\n    'unicorn.png',\\n    'rainbow.png', // only this one actually exists on disk\\n    'pony.png'\\n];\\n\\npLocate(files, file => pathExists(file)).then(foundPath => {\\n    console.log(foundPath);\\n    //=> 'rainbow'\\n});\\n</code></pre>\\n<p><em>The above is just an example. Use <a href=\\\"https://github.com/sindresorhus/locate-path\\\"><code>locate-path</code></a> if you need this.</em></p>\\n<h2>API</h2>\\n<h3>pLocate(input, tester, [options])</h3>\\n<p>Returns a <code>Promise</code> that is fulfilled when <code>tester</code> resolves to <code>true</code> or the iterable is done, or rejects if any of the promises reject. The fulfilled value is the current iterable value or <code>undefined</code> if <code>tester</code> never resolved to <code>true</code>.</p>\\n<h4>input</h4>\\n<p>Type: <code>Iterable&#x3C;Promise|any></code></p>\\n<h4>tester(element)</h4>\\n<p>Type: <code>Function</code></p>\\n<p>Expected to return a <code>Promise&#x3C;boolean></code> or boolean.</p>\\n<h4>options</h4>\\n<p>Type: <code>Object</code></p>\\n<h5>concurrency</h5>\\n<p>Type: <code>number</code><br>\\nDefault: <code>Infinity</code><br>\\nMinimum: <code>1</code></p>\\n<p>Number of concurrently pending promises returned by <code>tester</code>.</p>\\n<h5>preserveOrder</h5>\\n<p>Type: <code>boolean</code><br>\\nDefault: <code>true</code></p>\\n<p>Preserve <code>input</code> order when searching.</p>\\n<p>Disable this to improve performance if you don't care about the order.</p>\\n<h2>Related</h2>\\n<ul>\\n<li><a href=\\\"https://github.com/sindresorhus/p-map\\\">p-map</a> - Map over promises concurrently</li>\\n<li><a href=\\\"https://github.com/sindresorhus/p-filter\\\">p-filter</a> - Filter promises concurrently</li>\\n<li><a href=\\\"https://github.com/sindresorhus/p-any\\\">p-any</a> - Wait for any promise to be fulfilled</li>\\n<li><a href=\\\"https://github.com/sindresorhus/promise-fun\\\">More…</a></li>\\n</ul>\\n<h2>License</h2>\\n<p>MIT © <a href=\\\"https://sindresorhus.com\\\">Sindre Sorhus</a></p>\",\"docPath\":\"argo-ci/node_modules/p-locate/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-p-locate-a122e0816515e5b16161.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>p-locate <a href=\\\"https://travis-ci.org/sindresorhus/p-locate\\\"><img src=\\\"https://travis-ci.org/sindresorhus/p-locate.svg?branch=master\\\" alt=\\\"Build Status\\\"></a></h1>\\n<blockquote>\\n<p>Get the first fulfilled promise that satisfies the provided testing function</p>\\n</blockquote>\\n<p>Think of it like an async version of <a href=\\\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/find\\\"><code>Array#find</code></a>.</p>\\n<h2>Install</h2>\\n<pre><code>$ npm install --save p-locate\\n</code></pre>\\n<h2>Usage</h2>\\n<p>Here we find the first file that exists on disk, in array order.</p>\\n<pre><code class=\\\"language-js\\\">const pathExists = require('path-exists');\\nconst pLocate = require('p-locate');\\n\\nconst files = [\\n    'unicorn.png',\\n    'rainbow.png', // only this one actually exists on disk\\n    'pony.png'\\n];\\n\\npLocate(files, file => pathExists(file)).then(foundPath => {\\n    console.log(foundPath);\\n    //=> 'rainbow'\\n});\\n</code></pre>\\n<p><em>The above is just an example. Use <a href=\\\"https://github.com/sindresorhus/locate-path\\\"><code>locate-path</code></a> if you need this.</em></p>\\n<h2>API</h2>\\n<h3>pLocate(input, tester, [options])</h3>\\n<p>Returns a <code>Promise</code> that is fulfilled when <code>tester</code> resolves to <code>true</code> or the iterable is done, or rejects if any of the promises reject. The fulfilled value is the current iterable value or <code>undefined</code> if <code>tester</code> never resolved to <code>true</code>.</p>\\n<h4>input</h4>\\n<p>Type: <code>Iterable&#x3C;Promise|any></code></p>\\n<h4>tester(element)</h4>\\n<p>Type: <code>Function</code></p>\\n<p>Expected to return a <code>Promise&#x3C;boolean></code> or boolean.</p>\\n<h4>options</h4>\\n<p>Type: <code>Object</code></p>\\n<h5>concurrency</h5>\\n<p>Type: <code>number</code><br>\\nDefault: <code>Infinity</code><br>\\nMinimum: <code>1</code></p>\\n<p>Number of concurrently pending promises returned by <code>tester</code>.</p>\\n<h5>preserveOrder</h5>\\n<p>Type: <code>boolean</code><br>\\nDefault: <code>true</code></p>\\n<p>Preserve <code>input</code> order when searching.</p>\\n<p>Disable this to improve performance if you don't care about the order.</p>\\n<h2>Related</h2>\\n<ul>\\n<li><a href=\\\"https://github.com/sindresorhus/p-map\\\">p-map</a> - Map over promises concurrently</li>\\n<li><a href=\\\"https://github.com/sindresorhus/p-filter\\\">p-filter</a> - Filter promises concurrently</li>\\n<li><a href=\\\"https://github.com/sindresorhus/p-any\\\">p-any</a> - Wait for any promise to be fulfilled</li>\\n<li><a href=\\\"https://github.com/sindresorhus/promise-fun\\\">More…</a></li>\\n</ul>\\n<h2>License</h2>\\n<p>MIT © <a href=\\\"https://sindresorhus.com\\\">Sindre Sorhus</a></p>\",\"docPath\":\"argo-ci/node_modules/p-locate/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-p-locate.json\n// module id = 3017\n// module chunks = 126181743090839"],"sourceRoot":""}