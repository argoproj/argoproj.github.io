webpackJsonp([0xb9a75cde7575],{604:function(e,t){e.exports={pathContext:{docHtml:'<h1>Artifact Gateway &#x26; Sensor</h1>\n<p>Minio bucket notifications acts as event sources for artifact gateway. To setup minio, follow  <a href="https://www.minio.io/kubernetes.html">https://www.minio.io/kubernetes.html</a></p>\n<ol>\n<li><a href="#example-event-sources-definition">Example event sources definition</a></li>\n<li><a href="#install-gateway">Install gateway</a></li>\n<li><a href="#install-sensor">Install sensor</a></li>\n<li><a href="#trigger-workflow">Trigger Workflow</a></li>\n</ol>\n<h2>Example event sources definition</h2>\n<pre><code class="language-yaml">apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: artifact-gateway-configmap\ndata:  \n  input: |-\n    bucket: \n      name: input # name of the bucket we want to listen to\n    endpoint: minio-service.argo-events:9000 # minio service endpoint\n    event: s3:ObjectCreated:Put # type of event\n    filter: # filter on object name if any\n      prefix: ""\n      suffix: ""\n    insecure: true # type of minio server deployment\n    accessKey: \n      key: accesskey # key within below k8 secret whose corresponding value is name of the accessKey\n      name: artifacts-minio # k8 secret name that holds minio creds\n    secretKey:\n      key: secretkey # key within below k8 secret whose corresponding value is name of the secretKey\n      name: artifacts-minio # k8 secret name that holds minio creds\n</code></pre>\n<pre><code class="language-yaml">kubectl -n argo-events create -f https://github.com/argoproj/argo-events/blob/master/examples/gateways/artifact-gateway-configmap.yaml\n</code></pre>\n<h2>Install Gateway</h2>\n<p>Pre-requisite - create necessary buckets in Minio.</p>\n<ol>\n<li>\n<p><strong>Create gateway</strong></p>\n<pre><code class="language-yaml">kubectl -n argo-events create -f https://github.com/argoproj/argo-events/blob/master/examples/gateways/artifact-http.yaml\n</code></pre>\n</li>\n<li>\n<p><strong>Check the status of the gateway</strong></p>\n<pre><code class="language-yaml">kubectl -n argo-events describe gateway artifact-gateway\n</code></pre>\n<p>Make sure the gateway is in active state and all the event sources are in running state.</p>\n</li>\n</ol>\n<h2>Install Sensor</h2>\n<pre><code class="language-yaml">kubectl -n argo-events create -f https://github.com/argoproj/argo-events/blob/master/examples/sensors/artifact.yaml\n</code></pre>\n<h2>Trigger workflow</h2>\n<p>Drop a file onto <code>input</code> bucket and monitor workflows</p>',docPath:"argo-events/gateways/core/artifact/install",proj:"argo-events"}}}});
//# sourceMappingURL=path---docs-argo-events-gateways-core-artifact-install-html-353abb3e077c27fbeddc.js.map