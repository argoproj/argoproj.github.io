{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-async-readme-html-9f1feb87e7f1336163a6.js","webpack:///./.cache/json/docs-argo-ci-node-modules-async-readme-html.json"],"names":["webpackJsonp","2068","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,0pFAA8sFC,QAAA,oCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-async-readme-html-9f1feb87e7f1336163a6.js","sourcesContent":["webpackJsonp([228113470602717],{\n\n/***/ 2068:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<p><img src=\\\"https://raw.githubusercontent.com/caolan/async/master/logo/async-logo_readme.jpg\\\" alt=\\\"Async Logo\\\"></p>\\n<p><a href=\\\"https://travis-ci.org/caolan/async\\\"><img src=\\\"https://travis-ci.org/caolan/async.svg?branch=master\\\" alt=\\\"Build Status via Travis CI\\\"></a>\\n<a href=\\\"https://www.npmjs.com/package/async\\\"><img src=\\\"https://img.shields.io/npm/v/async.svg\\\" alt=\\\"NPM version\\\"></a>\\n<a href=\\\"https://coveralls.io/r/caolan/async?branch=master\\\"><img src=\\\"https://coveralls.io/repos/caolan/async/badge.svg?branch=master\\\" alt=\\\"Coverage Status\\\"></a>\\n<a href=\\\"https://gitter.im/caolan/async?utm_source=badge&#x26;utm_medium=badge&#x26;utm_campaign=pr-badge&#x26;utm_content=badge\\\"><img src=\\\"https://badges.gitter.im/Join%20Chat.svg\\\" alt=\\\"Join the chat at https://gitter.im/caolan/async\\\"></a>\\n<a href=\\\"https://www.libhive.com/providers/npm/packages/async\\\"><img src=\\\"https://www.libhive.com/providers/npm/packages/async/examples/badge.svg\\\" alt=\\\"libhive - Open source examples\\\"></a>\\n<a href=\\\"https://www.jsdelivr.com/package/npm/async\\\"><img src=\\\"https://data.jsdelivr.com/v1/package/npm/async/badge?style=rounded\\\" alt=\\\"jsDelivr Hits\\\"></a></p>\\n<p>Async is a utility module which provides straight-forward, powerful functions for working with <a href=\\\"http://caolan.github.io/async/global.html\\\">asynchronous JavaScript</a>. Although originally designed for use with <a href=\\\"https://nodejs.org/\\\">Node.js</a> and installable via <code>npm install --save async</code>, it can also be used directly in the browser.</p>\\n<p>For Documentation, visit <a href=\\\"https://caolan.github.io/async/\\\">https://caolan.github.io/async/</a></p>\\n<p><em>For Async v1.5.x documentation, go <a href=\\\"https://github.com/caolan/async/blob/v1.5.2/README.md\\\">HERE</a></em></p>\\n<pre><code class=\\\"language-javascript\\\">// for use with Node-style callbacks...\\nvar obj = {dev: \\\"/dev.json\\\", test: \\\"/test.json\\\", prod: \\\"/prod.json\\\"};\\nvar configs = {};\\n\\nasync.forEachOf(obj, (value, key, callback) => {\\n    fs.readFile(__dirname + value, \\\"utf8\\\", (err, data) => {\\n        if (err) return callback(err);\\n        try {\\n            configs[key] = JSON.parse(data);\\n        } catch (e) {\\n            return callback(e);\\n        }\\n        callback();\\n    });\\n}, err => {\\n    if (err) console.error(err.message);\\n    // configs is now a map of JSON data\\n    doSomethingWith(configs);\\n});\\n</code></pre>\\n<pre><code class=\\\"language-javascript\\\">// ...or ES2017 async functions\\nasync.mapLimit(urls, 5, async function(url) {\\n    const response = await fetch(url)\\n    return response.body\\n}, (err, results) => {\\n    if (err) throw err\\n    // results is now an array of the response bodies\\n    console.log(results)\\n})\\n</code></pre>\",\"docPath\":\"argo-ci/node_modules/async/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-async-readme-html-9f1feb87e7f1336163a6.js","module.exports = {\"pathContext\":{\"docHtml\":\"<p><img src=\\\"https://raw.githubusercontent.com/caolan/async/master/logo/async-logo_readme.jpg\\\" alt=\\\"Async Logo\\\"></p>\\n<p><a href=\\\"https://travis-ci.org/caolan/async\\\"><img src=\\\"https://travis-ci.org/caolan/async.svg?branch=master\\\" alt=\\\"Build Status via Travis CI\\\"></a>\\n<a href=\\\"https://www.npmjs.com/package/async\\\"><img src=\\\"https://img.shields.io/npm/v/async.svg\\\" alt=\\\"NPM version\\\"></a>\\n<a href=\\\"https://coveralls.io/r/caolan/async?branch=master\\\"><img src=\\\"https://coveralls.io/repos/caolan/async/badge.svg?branch=master\\\" alt=\\\"Coverage Status\\\"></a>\\n<a href=\\\"https://gitter.im/caolan/async?utm_source=badge&#x26;utm_medium=badge&#x26;utm_campaign=pr-badge&#x26;utm_content=badge\\\"><img src=\\\"https://badges.gitter.im/Join%20Chat.svg\\\" alt=\\\"Join the chat at https://gitter.im/caolan/async\\\"></a>\\n<a href=\\\"https://www.libhive.com/providers/npm/packages/async\\\"><img src=\\\"https://www.libhive.com/providers/npm/packages/async/examples/badge.svg\\\" alt=\\\"libhive - Open source examples\\\"></a>\\n<a href=\\\"https://www.jsdelivr.com/package/npm/async\\\"><img src=\\\"https://data.jsdelivr.com/v1/package/npm/async/badge?style=rounded\\\" alt=\\\"jsDelivr Hits\\\"></a></p>\\n<p>Async is a utility module which provides straight-forward, powerful functions for working with <a href=\\\"http://caolan.github.io/async/global.html\\\">asynchronous JavaScript</a>. Although originally designed for use with <a href=\\\"https://nodejs.org/\\\">Node.js</a> and installable via <code>npm install --save async</code>, it can also be used directly in the browser.</p>\\n<p>For Documentation, visit <a href=\\\"https://caolan.github.io/async/\\\">https://caolan.github.io/async/</a></p>\\n<p><em>For Async v1.5.x documentation, go <a href=\\\"https://github.com/caolan/async/blob/v1.5.2/README.md\\\">HERE</a></em></p>\\n<pre><code class=\\\"language-javascript\\\">// for use with Node-style callbacks...\\nvar obj = {dev: \\\"/dev.json\\\", test: \\\"/test.json\\\", prod: \\\"/prod.json\\\"};\\nvar configs = {};\\n\\nasync.forEachOf(obj, (value, key, callback) => {\\n    fs.readFile(__dirname + value, \\\"utf8\\\", (err, data) => {\\n        if (err) return callback(err);\\n        try {\\n            configs[key] = JSON.parse(data);\\n        } catch (e) {\\n            return callback(e);\\n        }\\n        callback();\\n    });\\n}, err => {\\n    if (err) console.error(err.message);\\n    // configs is now a map of JSON data\\n    doSomethingWith(configs);\\n});\\n</code></pre>\\n<pre><code class=\\\"language-javascript\\\">// ...or ES2017 async functions\\nasync.mapLimit(urls, 5, async function(url) {\\n    const response = await fetch(url)\\n    return response.body\\n}, (err, results) => {\\n    if (err) throw err\\n    // results is now an array of the response bodies\\n    console.log(results)\\n})\\n</code></pre>\",\"docPath\":\"argo-ci/node_modules/async/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-async-readme-html.json\n// module id = 2068\n// module chunks = 228113470602717"],"sourceRoot":""}