webpackJsonp([26061259373268],{2789:function(e,r){e.exports={pathContext:{docHtml:'<h1>isStream</h1>\n<p><a href="http://travis-ci.org/rvagg/isstream"><img src="https://secure.travis-ci.org/rvagg/isstream.png" alt="Build Status"></a></p>\n<p><strong>Test if an object is a <code>Stream</code></strong></p>\n<p><a href="https://nodei.co/npm/isstream/"><img src="https://nodei.co/npm/isstream.svg" alt="NPM"></a></p>\n<p>The missing <code>Stream.isStream(obj)</code>: determine if an object is standard Node.js <code>Stream</code>. Works for Node-core <code>Stream</code> objects (for 0.8, 0.10, 0.11, and in theory, older and newer versions) and all versions of <strong><a href="https://github.com/isaacs/readable-stream">readable-stream</a></strong>.</p>\n<h2>Usage:</h2>\n<pre><code class="language-js">var isStream = require(\'isstream\')\nvar Stream = require(\'stream\')\n\nisStream(new Stream()) // true\n\nisStream({}) // false\n\nisStream(new Stream.Readable())    // true\nisStream(new Stream.Writable())    // true\nisStream(new Stream.Duplex())      // true\nisStream(new Stream.Transform())   // true\nisStream(new Stream.PassThrough()) // true\n</code></pre>\n<h2>But wait! There\'s more!</h2>\n<p>You can also test for <code>isReadable(obj)</code>, <code>isWritable(obj)</code> and <code>isDuplex(obj)</code> to test for implementations of Streams2 (and Streams3) base classes.</p>\n<pre><code class="language-js">var isReadable = require(\'isstream\').isReadable\nvar isWritable = require(\'isstream\').isWritable\nvar isDuplex = require(\'isstream\').isDuplex\nvar Stream = require(\'stream\')\n\nisReadable(new Stream()) // false\nisWritable(new Stream()) // false\nisDuplex(new Stream())   // false\n\nisReadable(new Stream.Readable())    // true\nisReadable(new Stream.Writable())    // false\nisReadable(new Stream.Duplex())      // true\nisReadable(new Stream.Transform())   // true\nisReadable(new Stream.PassThrough()) // true\n\nisWritable(new Stream.Readable())    // false\nisWritable(new Stream.Writable())    // true\nisWritable(new Stream.Duplex())      // true\nisWritable(new Stream.Transform())   // true\nisWritable(new Stream.PassThrough()) // true\n\nisDuplex(new Stream.Readable())    // false\nisDuplex(new Stream.Writable())    // false\nisDuplex(new Stream.Duplex())      // true\nisDuplex(new Stream.Transform())   // true\nisDuplex(new Stream.PassThrough()) // true\n</code></pre>\n<p>*Reminder: when implementing your own streams, please <a href="http://r.va.gg/2014/06/why-i-dont-use-nodes-core-stream-module.html">use <strong>readable-stream</strong> rather than core streams</a>.*</p>\n<h2>License</h2>\n<p><strong>isStream</strong> is Copyright (c) 2015 Rod Vagg <a href="https://twitter.com/rvagg">@rvagg</a> and licenced under the MIT licence. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE.md file for more details.</p>',docPath:"argo-ci/node_modules/isstream/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-isstream-5e5ac925a688dfe247ae.js.map