{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-tslib-86b3fde58e8b0a113464.js","webpack:///./.cache/json/docs-argo-ci-node-modules-tslib.json"],"names":["webpackJsonp","3252","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,wsIAAs8FC,QAAA,oCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-tslib-86b3fde58e8b0a113464.js","sourcesContent":["webpackJsonp([244228565596242],{\n\n/***/ 3252:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>tslib</h1>\\n<p>This is a runtime library for <a href=\\\"http://www.typescriptlang.org/\\\">TypeScript</a> that contains all of the TypeScript helper functions.</p>\\n<p>This library is primarily used by the <code>--importHelpers</code> flag in TypeScript.\\nWhen using <code>--importHelpers</code>, a module that uses helper functions like <code>__extends</code> and <code>__assign</code> in the following emitted file:</p>\\n<pre><code class=\\\"language-ts\\\">var __assign = (this &#x26;&#x26; this.__assign) || Object.assign || function(t) {\\n    for (var s, i = 1, n = arguments.length; i &#x3C; n; i++) {\\n        s = arguments[i];\\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\\n            t[p] = s[p];\\n    }\\n    return t;\\n};\\nexports.x = {};\\nexports.y = __assign({}, exports.x);\\n</code></pre>\\n<p>will instead be emitted as something like the following:</p>\\n<pre><code class=\\\"language-ts\\\">var tslib_1 = require(\\\"tslib\\\");\\nexports.x = {};\\nexports.y = tslib_1.__assign({}, exports.x);\\n</code></pre>\\n<p>Because this can avoid duplicate declarations of things like <code>__extends</code>, <code>__assign</code>, etc., this means delivering users smaller files on average, as well as less runtime overhead.\\nFor optimized bundles with TypeScript, you should absolutely consider using <code>tslib</code> and <code>--importHelpers</code>.</p>\\n<h1>Installing</h1>\\n<p>For the latest stable version, run:</p>\\n<h2>npm</h2>\\n<pre><code class=\\\"language-sh\\\"># TypeScript 2.3.3 or later\\nnpm install --save tslib\\n\\n# TypeScript 2.3.2 or earlier\\nnpm install --save tslib@1.6.1\\n</code></pre>\\n<h2>bower</h2>\\n<pre><code class=\\\"language-sh\\\"># TypeScript 2.3.3 or later\\nbower install tslib\\n\\n# TypeScript 2.3.2 or earlier\\nbower install tslib@1.6.1\\n</code></pre>\\n<h2>JSPM</h2>\\n<pre><code class=\\\"language-sh\\\"># TypeScript 2.3.3 or later\\njspm install tslib\\n\\n# TypeScript 2.3.2 or earlier\\njspm install tslib@1.6.1\\n</code></pre>\\n<h1>Usage</h1>\\n<p>Set the <code>importHelpers</code> compiler option on the command line:</p>\\n<pre><code>tsc --importHelpers file.ts\\n</code></pre>\\n<p>or in your tsconfig.json:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"compilerOptions\\\": {\\n        \\\"importHelpers\\\": true\\n    }\\n}\\n</code></pre>\\n<h4>For bower and JSPM users</h4>\\n<p>You will need to add a <code>paths</code> mapping for <code>tslib</code>, e.g. For Bower users:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"compilerOptions\\\": {\\n        \\\"module\\\": \\\"amd\\\",\\n        \\\"importHelpers\\\": true,\\n        \\\"baseUrl\\\": \\\"./\\\",\\n        \\\"paths\\\": {\\n            \\\"tslib\\\" : [\\\"bower_components/tslib/tslib.d.ts\\\"]\\n        }\\n    }\\n}\\n</code></pre>\\n<p>For JSPM users:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"compilerOptions\\\": {\\n        \\\"module\\\": \\\"system\\\",\\n        \\\"importHelpers\\\": true,\\n        \\\"baseUrl\\\": \\\"./\\\",\\n        \\\"paths\\\": {\\n            \\\"tslib\\\" : [\\\"jspm_packages/npm/tslib@1.8.1/tslib.d.ts\\\"]\\n        }\\n    }\\n}\\n</code></pre>\\n<h1>Contribute</h1>\\n<p>There are many ways to <a href=\\\"https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md\\\">contribute</a> to TypeScript.</p>\\n<ul>\\n<li><a href=\\\"https://github.com/Microsoft/TypeScript/issues\\\">Submit bugs</a> and help us verify fixes as they are checked in.</li>\\n<li>Review the <a href=\\\"https://github.com/Microsoft/TypeScript/pulls\\\">source code changes</a>.</li>\\n<li>Engage with other TypeScript users and developers on <a href=\\\"http://stackoverflow.com/questions/tagged/typescript\\\">StackOverflow</a>.</li>\\n<li>Join the <a href=\\\"http://twitter.com/#!/search/realtime/%23typescript\\\">#typescript</a> discussion on Twitter.</li>\\n<li><a href=\\\"https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md\\\">Contribute bug fixes</a>.</li>\\n<li>Read the language specification (<a href=\\\"http://go.microsoft.com/fwlink/?LinkId=267121\\\">docx</a>, <a href=\\\"http://go.microsoft.com/fwlink/?LinkId=267238\\\">pdf</a>).</li>\\n</ul>\\n<h1>Documentation</h1>\\n<ul>\\n<li><a href=\\\"http://www.typescriptlang.org/Tutorial\\\">Quick tutorial</a></li>\\n<li><a href=\\\"http://www.typescriptlang.org/Handbook\\\">Programming handbook</a></li>\\n<li><a href=\\\"https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md\\\">Language specification</a></li>\\n<li><a href=\\\"http://www.typescriptlang.org/\\\">Homepage</a></li>\\n</ul>\",\"docPath\":\"argo-ci/node_modules/tslib/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-tslib-86b3fde58e8b0a113464.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>tslib</h1>\\n<p>This is a runtime library for <a href=\\\"http://www.typescriptlang.org/\\\">TypeScript</a> that contains all of the TypeScript helper functions.</p>\\n<p>This library is primarily used by the <code>--importHelpers</code> flag in TypeScript.\\nWhen using <code>--importHelpers</code>, a module that uses helper functions like <code>__extends</code> and <code>__assign</code> in the following emitted file:</p>\\n<pre><code class=\\\"language-ts\\\">var __assign = (this &#x26;&#x26; this.__assign) || Object.assign || function(t) {\\n    for (var s, i = 1, n = arguments.length; i &#x3C; n; i++) {\\n        s = arguments[i];\\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\\n            t[p] = s[p];\\n    }\\n    return t;\\n};\\nexports.x = {};\\nexports.y = __assign({}, exports.x);\\n</code></pre>\\n<p>will instead be emitted as something like the following:</p>\\n<pre><code class=\\\"language-ts\\\">var tslib_1 = require(\\\"tslib\\\");\\nexports.x = {};\\nexports.y = tslib_1.__assign({}, exports.x);\\n</code></pre>\\n<p>Because this can avoid duplicate declarations of things like <code>__extends</code>, <code>__assign</code>, etc., this means delivering users smaller files on average, as well as less runtime overhead.\\nFor optimized bundles with TypeScript, you should absolutely consider using <code>tslib</code> and <code>--importHelpers</code>.</p>\\n<h1>Installing</h1>\\n<p>For the latest stable version, run:</p>\\n<h2>npm</h2>\\n<pre><code class=\\\"language-sh\\\"># TypeScript 2.3.3 or later\\nnpm install --save tslib\\n\\n# TypeScript 2.3.2 or earlier\\nnpm install --save tslib@1.6.1\\n</code></pre>\\n<h2>bower</h2>\\n<pre><code class=\\\"language-sh\\\"># TypeScript 2.3.3 or later\\nbower install tslib\\n\\n# TypeScript 2.3.2 or earlier\\nbower install tslib@1.6.1\\n</code></pre>\\n<h2>JSPM</h2>\\n<pre><code class=\\\"language-sh\\\"># TypeScript 2.3.3 or later\\njspm install tslib\\n\\n# TypeScript 2.3.2 or earlier\\njspm install tslib@1.6.1\\n</code></pre>\\n<h1>Usage</h1>\\n<p>Set the <code>importHelpers</code> compiler option on the command line:</p>\\n<pre><code>tsc --importHelpers file.ts\\n</code></pre>\\n<p>or in your tsconfig.json:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"compilerOptions\\\": {\\n        \\\"importHelpers\\\": true\\n    }\\n}\\n</code></pre>\\n<h4>For bower and JSPM users</h4>\\n<p>You will need to add a <code>paths</code> mapping for <code>tslib</code>, e.g. For Bower users:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"compilerOptions\\\": {\\n        \\\"module\\\": \\\"amd\\\",\\n        \\\"importHelpers\\\": true,\\n        \\\"baseUrl\\\": \\\"./\\\",\\n        \\\"paths\\\": {\\n            \\\"tslib\\\" : [\\\"bower_components/tslib/tslib.d.ts\\\"]\\n        }\\n    }\\n}\\n</code></pre>\\n<p>For JSPM users:</p>\\n<pre><code class=\\\"language-json\\\">{\\n    \\\"compilerOptions\\\": {\\n        \\\"module\\\": \\\"system\\\",\\n        \\\"importHelpers\\\": true,\\n        \\\"baseUrl\\\": \\\"./\\\",\\n        \\\"paths\\\": {\\n            \\\"tslib\\\" : [\\\"jspm_packages/npm/tslib@1.8.1/tslib.d.ts\\\"]\\n        }\\n    }\\n}\\n</code></pre>\\n<h1>Contribute</h1>\\n<p>There are many ways to <a href=\\\"https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md\\\">contribute</a> to TypeScript.</p>\\n<ul>\\n<li><a href=\\\"https://github.com/Microsoft/TypeScript/issues\\\">Submit bugs</a> and help us verify fixes as they are checked in.</li>\\n<li>Review the <a href=\\\"https://github.com/Microsoft/TypeScript/pulls\\\">source code changes</a>.</li>\\n<li>Engage with other TypeScript users and developers on <a href=\\\"http://stackoverflow.com/questions/tagged/typescript\\\">StackOverflow</a>.</li>\\n<li>Join the <a href=\\\"http://twitter.com/#!/search/realtime/%23typescript\\\">#typescript</a> discussion on Twitter.</li>\\n<li><a href=\\\"https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md\\\">Contribute bug fixes</a>.</li>\\n<li>Read the language specification (<a href=\\\"http://go.microsoft.com/fwlink/?LinkId=267121\\\">docx</a>, <a href=\\\"http://go.microsoft.com/fwlink/?LinkId=267238\\\">pdf</a>).</li>\\n</ul>\\n<h1>Documentation</h1>\\n<ul>\\n<li><a href=\\\"http://www.typescriptlang.org/Tutorial\\\">Quick tutorial</a></li>\\n<li><a href=\\\"http://www.typescriptlang.org/Handbook\\\">Programming handbook</a></li>\\n<li><a href=\\\"https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md\\\">Language specification</a></li>\\n<li><a href=\\\"http://www.typescriptlang.org/\\\">Homepage</a></li>\\n</ul>\",\"docPath\":\"argo-ci/node_modules/tslib/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-tslib.json\n// module id = 3252\n// module chunks = 244228565596242"],"sourceRoot":""}