webpackJsonp([45933945519350],{3239:function(e,o){e.exports={pathContext:{docHtml:'<h1>node-touch</h1>\n<p>For all your node touching needs.</p>\n<h2>Installing</h2>\n<pre><code class="language-bash">npm install touch\n</code></pre>\n<h2>CLI Usage:</h2>\n<p>See <code>man touch</code></p>\n<p>This package exports a binary called <code>nodetouch</code> that works mostly\nlike the unix builtin <code>touch(1)</code>.</p>\n<h2>API Usage:</h2>\n<pre><code class="language-javascript">var touch = require("touch")\n</code></pre>\n<p>Gives you the following functions:</p>\n<ul>\n<li><code>touch(filename, options, cb)</code></li>\n<li><code>touch.sync(filename, options)</code></li>\n<li><code>touch.ftouch(fd, options, cb)</code></li>\n<li><code>touch.ftouchSync(fd, options)</code></li>\n</ul>\n<p>All the <code>options</code> objects are optional.</p>\n<p>All the async functions return a Promise.  If a callback function is\nprovided, then it\'s attached to the Promise.</p>\n<h2>Options</h2>\n<ul>\n<li><code>force</code> like <code>touch -f</code> Boolean</li>\n<li><code>time</code> like <code>touch -t &#x3C;date></code> Can be a Date object, or any parseable\nDate string, or epoch ms number.</li>\n<li><code>atime</code> like <code>touch -a</code> Can be either a Boolean, or a Date.</li>\n<li><code>mtime</code> like <code>touch -m</code> Can be either a Boolean, or a Date.</li>\n<li><code>ref</code> like <code>touch -r &#x3C;file></code> Must be path to a file.</li>\n<li><code>nocreate</code> like <code>touch -c</code> Boolean</li>\n</ul>\n<p>If neither <code>atime</code> nor <code>mtime</code> are set, then both values are set.  If\none of them is set, then the other is not.</p>\n<h2>cli</h2>\n<p>This package creates a <code>nodetouch</code> command line executable that works\nvery much like the unix builtin <code>touch(1)</code></p>',docPath:"argo-ci/node_modules/touch/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-touch-readme-html-be98dcdde3b9761411c0.js.map