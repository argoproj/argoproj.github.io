{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-request-node-modules-sntp-readme-html-3b36b435816e9e75a495.js","webpack:///./.cache/json/docs-argo-ci-node-modules-request-node-modules-sntp-readme-html.json"],"names":["webpackJsonp","3116","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,2lEAAslEC,QAAA,wDAAAC,KAAA","file":"path---docs-argo-ci-node-modules-request-node-modules-sntp-readme-html-3b36b435816e9e75a495.js","sourcesContent":["webpackJsonp([226699574615551],{\n\n/***/ 3116:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>sntp</h1>\\n<p>An SNTP v4 client (RFC4330) for node. Simpy connects to the NTP or SNTP server requested and returns the server time\\nalong with the roundtrip duration and clock offset. To adjust the local time to the NTP time, add the returned <code>t</code> offset\\nto the local time.</p>\\n<p><a href=\\\"http://travis-ci.org/hueniverse/sntp\\\"><img src=\\\"https://secure.travis-ci.org/hueniverse/sntp.png\\\" alt=\\\"Build Status\\\"></a></p>\\n<h1>Usage</h1>\\n<pre><code class=\\\"language-javascript\\\">var Sntp = require('sntp');\\n\\n// All options are optional\\n\\nvar options = {\\n    host: 'nist1-sj.ustiming.org',  // Defaults to pool.ntp.org\\n    port: 123,                      // Defaults to 123 (NTP)\\n    resolveReference: true,         // Default to false (not resolving)\\n    timeout: 1000                   // Defaults to zero (no timeout)\\n};\\n\\n// Request server time\\n\\nSntp.time(options, function (err, time) {\\n\\n    if (err) {\\n        console.log('Failed: ' + err.message);\\n        process.exit(1);\\n    }\\n\\n    console.log('Local clock is off by: ' + time.t + ' milliseconds');\\n    process.exit(0);\\n});\\n</code></pre>\\n<p>If an application needs to maintain continuous time synchronization, the module provides a stateful method for\\nquerying the current offset only when the last one is too old (defaults to daily).</p>\\n<pre><code class=\\\"language-javascript\\\">// Request offset once\\n\\nSntp.offset(function (err, offset) {\\n\\n    console.log(offset);                    // New (served fresh)\\n\\n    // Request offset again\\n\\n    Sntp.offset(function (err, offset) {\\n\\n        console.log(offset);                // Identical (served from cache)\\n    });\\n});\\n</code></pre>\\n<p>To set a background offset refresh, start the interval and use the provided now() method. If for any reason the\\nclient fails to obtain an up-to-date offset, the current system clock is used.</p>\\n<pre><code class=\\\"language-javascript\\\">var before = Sntp.now();                    // System time without offset\\n\\nSntp.start(function () {\\n\\n    var now = Sntp.now();                   // With offset\\n    Sntp.stop();\\n});\\n</code></pre>\",\"docPath\":\"argo-ci/node_modules/request/node_modules/sntp/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-request-node-modules-sntp-readme-html-3b36b435816e9e75a495.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>sntp</h1>\\n<p>An SNTP v4 client (RFC4330) for node. Simpy connects to the NTP or SNTP server requested and returns the server time\\nalong with the roundtrip duration and clock offset. To adjust the local time to the NTP time, add the returned <code>t</code> offset\\nto the local time.</p>\\n<p><a href=\\\"http://travis-ci.org/hueniverse/sntp\\\"><img src=\\\"https://secure.travis-ci.org/hueniverse/sntp.png\\\" alt=\\\"Build Status\\\"></a></p>\\n<h1>Usage</h1>\\n<pre><code class=\\\"language-javascript\\\">var Sntp = require('sntp');\\n\\n// All options are optional\\n\\nvar options = {\\n    host: 'nist1-sj.ustiming.org',  // Defaults to pool.ntp.org\\n    port: 123,                      // Defaults to 123 (NTP)\\n    resolveReference: true,         // Default to false (not resolving)\\n    timeout: 1000                   // Defaults to zero (no timeout)\\n};\\n\\n// Request server time\\n\\nSntp.time(options, function (err, time) {\\n\\n    if (err) {\\n        console.log('Failed: ' + err.message);\\n        process.exit(1);\\n    }\\n\\n    console.log('Local clock is off by: ' + time.t + ' milliseconds');\\n    process.exit(0);\\n});\\n</code></pre>\\n<p>If an application needs to maintain continuous time synchronization, the module provides a stateful method for\\nquerying the current offset only when the last one is too old (defaults to daily).</p>\\n<pre><code class=\\\"language-javascript\\\">// Request offset once\\n\\nSntp.offset(function (err, offset) {\\n\\n    console.log(offset);                    // New (served fresh)\\n\\n    // Request offset again\\n\\n    Sntp.offset(function (err, offset) {\\n\\n        console.log(offset);                // Identical (served from cache)\\n    });\\n});\\n</code></pre>\\n<p>To set a background offset refresh, start the interval and use the provided now() method. If for any reason the\\nclient fails to obtain an up-to-date offset, the current system clock is used.</p>\\n<pre><code class=\\\"language-javascript\\\">var before = Sntp.now();                    // System time without offset\\n\\nSntp.start(function () {\\n\\n    var now = Sntp.now();                   // With offset\\n    Sntp.stop();\\n});\\n</code></pre>\",\"docPath\":\"argo-ci/node_modules/request/node_modules/sntp/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-request-node-modules-sntp-readme-html.json\n// module id = 3116\n// module chunks = 226699574615551"],"sourceRoot":""}