{"version":3,"sources":["webpack:///path---docs-argo-cd-docs-internal-releasing-html-a49d5b6d645f80220ffc.js","webpack:///./.cache/json/docs-argo-cd-docs-internal-releasing-html.json"],"names":["webpackJsonp","505","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,ixCAAAC,QAAA,kCAAAC,KAAA","file":"path---docs-argo-cd-docs-internal-releasing-html-a49d5b6d645f80220ffc.js","sourcesContent":["webpackJsonp([176951404091317],{\n\n/***/ 505:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>ArgoCD Release Instructions</h1>\\n<ol>\\n<li>\\n<p>Tag and build argo-cd-ui</p>\\n<pre><code class=\\\"language-bash\\\">cd argo-cd-ui\\ngit tag vX.Y.Z\\ngit push upstream vX.Y.Z\\nIMAGE_NAMESPACE=argoproj IMAGE_TAG=vX.Y.Z DOCKER_PUSH=true yarn docker\\n</code></pre>\\n</li>\\n<li>\\n<p>Edit CHANGELOG.md, getting_started.md, install manifests with new version</p>\\n<pre><code class=\\\"language-bash\\\">make install-manifest IMAGE_NAMESPACE=argoproj IMAGE_TAG=vX.Y.Z\\ngit commit -a -m \\\"Update manifests to vX.Y.Z\\\"\\ngit push upstream master\\n</code></pre>\\n</li>\\n<li>\\n<p>Tag, build the release, and push to docker hub</p>\\n<pre><code class=\\\"language-bash\\\">git tag vX.Y.Z\\nmake release IMAGE_NAMESPACE=argoproj IMAGE_TAG=vX.Y.Z DOCKER_PUSH=true\\ngit push upstream vX.Y.Z\\n</code></pre>\\n</li>\\n<li>\\n<p>Create release-X.Y branch (if necessary)</p>\\n<pre><code class=\\\"language-bash\\\">git checkout -b release-X.Y\\ngit push upstream release-X.Y\\n</code></pre>\\n</li>\\n<li>\\n<p>Update argocd brew formula</p>\\n<pre><code class=\\\"language-bash\\\">git clone https://github.com/argoproj/homebrew-tap\\ncd homebrew-tap\\nshasum -a 256 ~/go/src/github.com/argoproj/argo-cd/dist/argocd-darwin-amd64\\n# edit argocd.rb with version and checksum\\ngit commit -a -m \\\"Update argocd to vX.Y.Z\\\"\\ngit push\\n</code></pre>\\n</li>\\n</ol>\",\"docPath\":\"argo-cd/docs/internal/releasing\",\"proj\":\"argo-cd\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-cd-docs-internal-releasing-html-a49d5b6d645f80220ffc.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>ArgoCD Release Instructions</h1>\\n<ol>\\n<li>\\n<p>Tag and build argo-cd-ui</p>\\n<pre><code class=\\\"language-bash\\\">cd argo-cd-ui\\ngit tag vX.Y.Z\\ngit push upstream vX.Y.Z\\nIMAGE_NAMESPACE=argoproj IMAGE_TAG=vX.Y.Z DOCKER_PUSH=true yarn docker\\n</code></pre>\\n</li>\\n<li>\\n<p>Edit CHANGELOG.md, getting_started.md, install manifests with new version</p>\\n<pre><code class=\\\"language-bash\\\">make install-manifest IMAGE_NAMESPACE=argoproj IMAGE_TAG=vX.Y.Z\\ngit commit -a -m \\\"Update manifests to vX.Y.Z\\\"\\ngit push upstream master\\n</code></pre>\\n</li>\\n<li>\\n<p>Tag, build the release, and push to docker hub</p>\\n<pre><code class=\\\"language-bash\\\">git tag vX.Y.Z\\nmake release IMAGE_NAMESPACE=argoproj IMAGE_TAG=vX.Y.Z DOCKER_PUSH=true\\ngit push upstream vX.Y.Z\\n</code></pre>\\n</li>\\n<li>\\n<p>Create release-X.Y branch (if necessary)</p>\\n<pre><code class=\\\"language-bash\\\">git checkout -b release-X.Y\\ngit push upstream release-X.Y\\n</code></pre>\\n</li>\\n<li>\\n<p>Update argocd brew formula</p>\\n<pre><code class=\\\"language-bash\\\">git clone https://github.com/argoproj/homebrew-tap\\ncd homebrew-tap\\nshasum -a 256 ~/go/src/github.com/argoproj/argo-cd/dist/argocd-darwin-amd64\\n# edit argocd.rb with version and checksum\\ngit commit -a -m \\\"Update argocd to vX.Y.Z\\\"\\ngit push\\n</code></pre>\\n</li>\\n</ol>\",\"docPath\":\"argo-cd/docs/internal/releasing\",\"proj\":\"argo-cd\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-cd-docs-internal-releasing-html.json\n// module id = 505\n// module chunks = 176951404091317"],"sourceRoot":""}