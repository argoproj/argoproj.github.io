{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-nan-doc-node-misc-html-7d59a6228aa4575e1b70.js","webpack:///./.cache/json/docs-argo-ci-node-modules-nan-doc-node-misc-html.json"],"names":["webpackJsonp","2912","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,ooFAAipFC,QAAA,yCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-nan-doc-node-misc-html-7d59a6228aa4575e1b70.js","sourcesContent":["webpackJsonp([149119376568411],{\n\n/***/ 2912:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h2>Miscellaneous Node Helpers</h2>\\n<ul>\\n<li><a href=\\\"#api_nan_make_callback\\\"><b><code>Nan::MakeCallback()</code></b></a></li>\\n<li><a href=\\\"#api_nan_module_init\\\"><b><code>NAN<em>MODULE</em>INIT()</code></b></a></li>\\n<li><a href=\\\"#api_nan_export\\\"><b><code>Nan::Export()</code></b></a></li>\\n</ul>\\n<p><a name=\\\"api_nan_make_callback\\\"></a></p>\\n<h3>Nan::MakeCallback()</h3>\\n<p>Wrappers around <code>node::MakeCallback()</code> providing a consistent API across all supported versions of Node.</p>\\n<p>Use <code>MakeCallback()</code> rather than using <code>v8::Function#Call()</code> directly in order to properly process internal Node functionality including domains, async hooks, the microtask queue, and other debugging functionality.</p>\\n<p>Signatures:</p>\\n<pre><code class=\\\"language-c++\\\">v8::Local&#x3C;v8::Value> Nan::MakeCallback(v8::Local&#x3C;v8::Object> target,\\n                                       v8::Local&#x3C;v8::Function> func,\\n                                       int argc,\\n                                       v8::Local&#x3C;v8::Value>* argv);\\nv8::Local&#x3C;v8::Value> Nan::MakeCallback(v8::Local&#x3C;v8::Object> target,\\n                                       v8::Local&#x3C;v8::String> symbol,\\n                                       int argc,\\n                                       v8::Local&#x3C;v8::Value>* argv);\\nv8::Local&#x3C;v8::Value> Nan::MakeCallback(v8::Local&#x3C;v8::Object> target,\\n                                       const char* method,\\n                                       int argc,\\n                                       v8::Local&#x3C;v8::Value>* argv);\\n</code></pre>\\n<p><a name=\\\"api_nan_module_init\\\"></a></p>\\n<h3>NAN<em>MODULE</em>INIT()</h3>\\n<p>Used to define the entry point function to a Node add-on. Creates a function with a given <code>name</code> that receives a <code>target</code> object representing the equivalent of the JavaScript <code>exports</code> object.</p>\\n<p>See example below.</p>\\n<p><a name=\\\"api_nan_export\\\"></a></p>\\n<h3>Nan::Export()</h3>\\n<p>A simple helper to register a <code>v8::FunctionTemplate</code> from a JavaScript-accessible method (see <a href=\\\"./methods.html\\\">Methods</a>) as a property on an object. Can be used in a way similar to assigning properties to <code>module.exports</code> in JavaScript.</p>\\n<p>Signature:</p>\\n<pre><code class=\\\"language-c++\\\">void Export(v8::Local&#x3C;v8::Object> target, const char *name, Nan::FunctionCallback f)\\n</code></pre>\\n<p>Also available as the shortcut <code>NAN_EXPORT</code> macro.</p>\\n<p>Example:</p>\\n<pre><code class=\\\"language-c++\\\">NAN_METHOD(Foo) {\\n  ...\\n}\\n\\nNAN_MODULE_INIT(Init) {\\n  NAN_EXPORT(target, Foo);\\n}\\n</code></pre>\",\"docPath\":\"argo-ci/node_modules/nan/doc/node_misc\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-nan-doc-node-misc-html-7d59a6228aa4575e1b70.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h2>Miscellaneous Node Helpers</h2>\\n<ul>\\n<li><a href=\\\"#api_nan_make_callback\\\"><b><code>Nan::MakeCallback()</code></b></a></li>\\n<li><a href=\\\"#api_nan_module_init\\\"><b><code>NAN<em>MODULE</em>INIT()</code></b></a></li>\\n<li><a href=\\\"#api_nan_export\\\"><b><code>Nan::Export()</code></b></a></li>\\n</ul>\\n<p><a name=\\\"api_nan_make_callback\\\"></a></p>\\n<h3>Nan::MakeCallback()</h3>\\n<p>Wrappers around <code>node::MakeCallback()</code> providing a consistent API across all supported versions of Node.</p>\\n<p>Use <code>MakeCallback()</code> rather than using <code>v8::Function#Call()</code> directly in order to properly process internal Node functionality including domains, async hooks, the microtask queue, and other debugging functionality.</p>\\n<p>Signatures:</p>\\n<pre><code class=\\\"language-c++\\\">v8::Local&#x3C;v8::Value> Nan::MakeCallback(v8::Local&#x3C;v8::Object> target,\\n                                       v8::Local&#x3C;v8::Function> func,\\n                                       int argc,\\n                                       v8::Local&#x3C;v8::Value>* argv);\\nv8::Local&#x3C;v8::Value> Nan::MakeCallback(v8::Local&#x3C;v8::Object> target,\\n                                       v8::Local&#x3C;v8::String> symbol,\\n                                       int argc,\\n                                       v8::Local&#x3C;v8::Value>* argv);\\nv8::Local&#x3C;v8::Value> Nan::MakeCallback(v8::Local&#x3C;v8::Object> target,\\n                                       const char* method,\\n                                       int argc,\\n                                       v8::Local&#x3C;v8::Value>* argv);\\n</code></pre>\\n<p><a name=\\\"api_nan_module_init\\\"></a></p>\\n<h3>NAN<em>MODULE</em>INIT()</h3>\\n<p>Used to define the entry point function to a Node add-on. Creates a function with a given <code>name</code> that receives a <code>target</code> object representing the equivalent of the JavaScript <code>exports</code> object.</p>\\n<p>See example below.</p>\\n<p><a name=\\\"api_nan_export\\\"></a></p>\\n<h3>Nan::Export()</h3>\\n<p>A simple helper to register a <code>v8::FunctionTemplate</code> from a JavaScript-accessible method (see <a href=\\\"./methods.html\\\">Methods</a>) as a property on an object. Can be used in a way similar to assigning properties to <code>module.exports</code> in JavaScript.</p>\\n<p>Signature:</p>\\n<pre><code class=\\\"language-c++\\\">void Export(v8::Local&#x3C;v8::Object> target, const char *name, Nan::FunctionCallback f)\\n</code></pre>\\n<p>Also available as the shortcut <code>NAN_EXPORT</code> macro.</p>\\n<p>Example:</p>\\n<pre><code class=\\\"language-c++\\\">NAN_METHOD(Foo) {\\n  ...\\n}\\n\\nNAN_MODULE_INIT(Init) {\\n  NAN_EXPORT(target, Foo);\\n}\\n</code></pre>\",\"docPath\":\"argo-ci/node_modules/nan/doc/node_misc\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-nan-doc-node-misc-html.json\n// module id = 2912\n// module chunks = 149119376568411"],"sourceRoot":""}