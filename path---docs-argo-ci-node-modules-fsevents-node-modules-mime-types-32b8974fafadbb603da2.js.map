{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-fsevents-node-modules-mime-types-32b8974fafadbb603da2.js","webpack:///./.cache/json/docs-argo-ci-node-modules-fsevents-node-modules-mime-types.json"],"names":["webpackJsonp","2515","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,4gHAA65FC,QAAA,+DAAAC,KAAA","file":"path---docs-argo-ci-node-modules-fsevents-node-modules-mime-types-32b8974fafadbb603da2.js","sourcesContent":["webpackJsonp([187640869886676],{\n\n/***/ 2515:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>mime-types</h1>\\n<p><a href=\\\"https://npmjs.org/package/mime-types\\\"><img src=\\\"https://img.shields.io/npm/v/mime-types.svg\\\" alt=\\\"NPM Version\\\"></a>\\n<a href=\\\"https://npmjs.org/package/mime-types\\\"><img src=\\\"https://img.shields.io/npm/dm/mime-types.svg\\\" alt=\\\"NPM Downloads\\\"></a>\\n<a href=\\\"https://nodejs.org/en/download/\\\"><img src=\\\"https://img.shields.io/node/v/mime-types.svg\\\" alt=\\\"Node.js Version\\\"></a>\\n<a href=\\\"https://travis-ci.org/jshttp/mime-types\\\"><img src=\\\"https://img.shields.io/travis/jshttp/mime-types/master.svg\\\" alt=\\\"Build Status\\\"></a>\\n<a href=\\\"https://coveralls.io/r/jshttp/mime-types\\\"><img src=\\\"https://img.shields.io/coveralls/jshttp/mime-types/master.svg\\\" alt=\\\"Test Coverage\\\"></a></p>\\n<p>The ultimate javascript content-type utility.</p>\\n<p>Similar to <a href=\\\"https://www.npmjs.com/package/mime\\\">the <code>mime</code> module</a>, except:</p>\\n<ul>\\n<li><strong>No fallbacks.</strong> Instead of naively returning the first available type,\\n<code>mime-types</code> simply returns <code>false</code>, so do\\n<code>var type = mime.lookup('unrecognized') || 'application/octet-stream'</code>.</li>\\n<li>No <code>new Mime()</code> business, so you could do <code>var lookup = require('mime-types').lookup</code>.</li>\\n<li>No <code>.define()</code> functionality</li>\\n<li>Bug fixes for <code>.lookup(path)</code></li>\\n</ul>\\n<p>Otherwise, the API is compatible.</p>\\n<h2>Install</h2>\\n<p>This is a <a href=\\\"https://nodejs.org/en/\\\">Node.js</a> module available through the\\n<a href=\\\"https://www.npmjs.com/\\\">npm registry</a>. Installation is done using the\\n<a href=\\\"https://docs.npmjs.com/getting-started/installing-npm-packages-locally\\\"><code>npm install</code> command</a>:</p>\\n<pre><code class=\\\"language-sh\\\">$ npm install mime-types\\n</code></pre>\\n<h2>Adding Types</h2>\\n<p>All mime types are based on <a href=\\\"https://www.npmjs.com/package/mime-db\\\">mime-db</a>,\\nso open a PR there if you'd like to add mime types.</p>\\n<h2>API</h2>\\n<pre><code class=\\\"language-js\\\">var mime = require('mime-types')\\n</code></pre>\\n<p>All functions return <code>false</code> if input is invalid or not found.</p>\\n<h3>mime.lookup(path)</h3>\\n<p>Lookup the content-type associated with a file.</p>\\n<pre><code class=\\\"language-js\\\">mime.lookup('json')             // 'application/json'\\nmime.lookup('.md')              // 'text/x-markdown'\\nmime.lookup('file.html')        // 'text/html'\\nmime.lookup('folder/file.js')   // 'application/javascript'\\nmime.lookup('folder/.htaccess') // false\\n\\nmime.lookup('cats') // false\\n</code></pre>\\n<h3>mime.contentType(type)</h3>\\n<p>Create a full content-type header given a content-type or extension.</p>\\n<pre><code class=\\\"language-js\\\">mime.contentType('markdown')  // 'text/x-markdown; charset=utf-8'\\nmime.contentType('file.json') // 'application/json; charset=utf-8'\\n\\n// from a full path\\nmime.contentType(path.extname('/path/to/file.json')) // 'application/json; charset=utf-8'\\n</code></pre>\\n<h3>mime.extension(type)</h3>\\n<p>Get the default extension for a content-type.</p>\\n<pre><code class=\\\"language-js\\\">mime.extension('application/octet-stream') // 'bin'\\n</code></pre>\\n<h3>mime.charset(type)</h3>\\n<p>Lookup the implied default charset of a content-type.</p>\\n<pre><code class=\\\"language-js\\\">mime.charset('text/x-markdown') // 'UTF-8'\\n</code></pre>\\n<h3>var type = mime.types[extension]</h3>\\n<p>A map of content-types by extension.</p>\\n<h3>[extensions...] = mime.extensions[type]</h3>\\n<p>A map of extensions by content-type.</p>\\n<h2>License</h2>\\n<p><a href=\\\"LICENSE\\\">MIT</a></p>\",\"docPath\":\"argo-ci/node_modules/fsevents/node_modules/mime-types/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-fsevents-node-modules-mime-types-32b8974fafadbb603da2.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>mime-types</h1>\\n<p><a href=\\\"https://npmjs.org/package/mime-types\\\"><img src=\\\"https://img.shields.io/npm/v/mime-types.svg\\\" alt=\\\"NPM Version\\\"></a>\\n<a href=\\\"https://npmjs.org/package/mime-types\\\"><img src=\\\"https://img.shields.io/npm/dm/mime-types.svg\\\" alt=\\\"NPM Downloads\\\"></a>\\n<a href=\\\"https://nodejs.org/en/download/\\\"><img src=\\\"https://img.shields.io/node/v/mime-types.svg\\\" alt=\\\"Node.js Version\\\"></a>\\n<a href=\\\"https://travis-ci.org/jshttp/mime-types\\\"><img src=\\\"https://img.shields.io/travis/jshttp/mime-types/master.svg\\\" alt=\\\"Build Status\\\"></a>\\n<a href=\\\"https://coveralls.io/r/jshttp/mime-types\\\"><img src=\\\"https://img.shields.io/coveralls/jshttp/mime-types/master.svg\\\" alt=\\\"Test Coverage\\\"></a></p>\\n<p>The ultimate javascript content-type utility.</p>\\n<p>Similar to <a href=\\\"https://www.npmjs.com/package/mime\\\">the <code>mime</code> module</a>, except:</p>\\n<ul>\\n<li><strong>No fallbacks.</strong> Instead of naively returning the first available type,\\n<code>mime-types</code> simply returns <code>false</code>, so do\\n<code>var type = mime.lookup('unrecognized') || 'application/octet-stream'</code>.</li>\\n<li>No <code>new Mime()</code> business, so you could do <code>var lookup = require('mime-types').lookup</code>.</li>\\n<li>No <code>.define()</code> functionality</li>\\n<li>Bug fixes for <code>.lookup(path)</code></li>\\n</ul>\\n<p>Otherwise, the API is compatible.</p>\\n<h2>Install</h2>\\n<p>This is a <a href=\\\"https://nodejs.org/en/\\\">Node.js</a> module available through the\\n<a href=\\\"https://www.npmjs.com/\\\">npm registry</a>. Installation is done using the\\n<a href=\\\"https://docs.npmjs.com/getting-started/installing-npm-packages-locally\\\"><code>npm install</code> command</a>:</p>\\n<pre><code class=\\\"language-sh\\\">$ npm install mime-types\\n</code></pre>\\n<h2>Adding Types</h2>\\n<p>All mime types are based on <a href=\\\"https://www.npmjs.com/package/mime-db\\\">mime-db</a>,\\nso open a PR there if you'd like to add mime types.</p>\\n<h2>API</h2>\\n<pre><code class=\\\"language-js\\\">var mime = require('mime-types')\\n</code></pre>\\n<p>All functions return <code>false</code> if input is invalid or not found.</p>\\n<h3>mime.lookup(path)</h3>\\n<p>Lookup the content-type associated with a file.</p>\\n<pre><code class=\\\"language-js\\\">mime.lookup('json')             // 'application/json'\\nmime.lookup('.md')              // 'text/x-markdown'\\nmime.lookup('file.html')        // 'text/html'\\nmime.lookup('folder/file.js')   // 'application/javascript'\\nmime.lookup('folder/.htaccess') // false\\n\\nmime.lookup('cats') // false\\n</code></pre>\\n<h3>mime.contentType(type)</h3>\\n<p>Create a full content-type header given a content-type or extension.</p>\\n<pre><code class=\\\"language-js\\\">mime.contentType('markdown')  // 'text/x-markdown; charset=utf-8'\\nmime.contentType('file.json') // 'application/json; charset=utf-8'\\n\\n// from a full path\\nmime.contentType(path.extname('/path/to/file.json')) // 'application/json; charset=utf-8'\\n</code></pre>\\n<h3>mime.extension(type)</h3>\\n<p>Get the default extension for a content-type.</p>\\n<pre><code class=\\\"language-js\\\">mime.extension('application/octet-stream') // 'bin'\\n</code></pre>\\n<h3>mime.charset(type)</h3>\\n<p>Lookup the implied default charset of a content-type.</p>\\n<pre><code class=\\\"language-js\\\">mime.charset('text/x-markdown') // 'UTF-8'\\n</code></pre>\\n<h3>var type = mime.types[extension]</h3>\\n<p>A map of content-types by extension.</p>\\n<h3>[extensions...] = mime.extensions[type]</h3>\\n<p>A map of extensions by content-type.</p>\\n<h2>License</h2>\\n<p><a href=\\\"LICENSE\\\">MIT</a></p>\",\"docPath\":\"argo-ci/node_modules/fsevents/node_modules/mime-types/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-fsevents-node-modules-mime-types.json\n// module id = 2515\n// module chunks = 187640869886676"],"sourceRoot":""}