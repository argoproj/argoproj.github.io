{"version":3,"sources":["webpack:///path---docs-argo-cd-docs-developer-guide-releasing-html-0f0a4e9ad84e907eb27b.js","webpack:///./.cache/json/docs-argo-cd-docs-developer-guide-releasing-html.json"],"names":["webpackJsonp","550","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,u+DAAu3DC,QAAA,yCAAAC,KAAA","file":"path---docs-argo-cd-docs-developer-guide-releasing-html-0f0a4e9ad84e907eb27b.js","sourcesContent":["webpackJsonp([97983591878712],{\n\n/***/ 550:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>Releasing</h1>\\n<p>Ensure the changelog is up to date. </p>\\n<p>Export the branch name, e.g.:</p>\\n<pre><code class=\\\"language-bash\\\">BRANCH=release-1.0\\n</code></pre>\\n<p>Set the <code>VERSION</code> environment variable:</p>\\n<pre><code class=\\\"language-bash\\\"># release candidate\\nVERSION=v1.0.0-rc1\\n# GA release\\nVERSION=v1.0.0\\n</code></pre>\\n<p>If not already created, create UI release branch:</p>\\n<pre><code class=\\\"language-bash\\\">cd argo-cd-ui\\ngit checkout -b $BRANCH\\n</code></pre>\\n<p>Tag UI:</p>\\n<pre><code class=\\\"language-bash\\\">git tag $VERSION\\ngit push upstream $BRANCH --tags\\nIMAGE_NAMESPACE=argoproj IMAGE_TAG=$VERSION DOCKER_PUSH=true yarn docker\\n</code></pre>\\n<p>If not already created, create release branch:</p>\\n<pre><code class=\\\"language-bash\\\">cd argo-cd\\ngit checkout -b $BRANCH\\ngit push origin $BRANCH\\n</code></pre>\\n<p>Update <code>VERSION</code> and manifests with new version:</p>\\n<pre><code class=\\\"language-bash\\\">echo $VERSION > VERSION\\nmake manifests IMAGE_TAG=$VERSION\\ngit commit -am \\\"Update manifests to $VERSION\\\"\\ngit push origin $BRANCH\\n</code></pre>\\n<p>Tag, build, and push release to Docker Hub</p>\\n<pre><code class=\\\"language-bash\\\">git tag $VERSION\\nmake release IMAGE_NAMESPACE=argoproj IMAGE_TAG=$VERSION DOCKER_PUSH=true\\ngit push origin $VERSION\\n</code></pre>\\n<p>Update Github releases with:</p>\\n<ul>\\n<li>Getting started (copy from previous release)</li>\\n<li>Changelog</li>\\n</ul>\\n<h2>Stable Release</h2>\\n<p>Update Brew formula:</p>\\n<pre><code class=\\\"language-bash\\\">git clone https://github.com/argoproj/homebrew-tap\\ncd homebrew-tap\\n./update.sh ~/go/src/github.com/argoproj/argo-cd/dist/argocd-darwin-amd64\\ngit commit -a -m \\\"Update argocd to $VERSION\\\"\\ngit push\\n</code></pre>\\n<p>Deploy the <a href=\\\"site.html\\\">site</a>.</p>\\n<p>Update <code>stable</code> tag:</p>\\n<pre><code>git tag stable --force &#x26;&#x26; git push origin stable --force\\n</code></pre>\\n<p>Create GitHub release from new tag and upload binaries (e.g. dist/argocd-darwin-amd64).</p>\",\"docPath\":\"argo-cd/docs/developer-guide/releasing\",\"proj\":\"argo-cd\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-cd-docs-developer-guide-releasing-html-0f0a4e9ad84e907eb27b.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>Releasing</h1>\\n<p>Ensure the changelog is up to date. </p>\\n<p>Export the branch name, e.g.:</p>\\n<pre><code class=\\\"language-bash\\\">BRANCH=release-1.0\\n</code></pre>\\n<p>Set the <code>VERSION</code> environment variable:</p>\\n<pre><code class=\\\"language-bash\\\"># release candidate\\nVERSION=v1.0.0-rc1\\n# GA release\\nVERSION=v1.0.0\\n</code></pre>\\n<p>If not already created, create UI release branch:</p>\\n<pre><code class=\\\"language-bash\\\">cd argo-cd-ui\\ngit checkout -b $BRANCH\\n</code></pre>\\n<p>Tag UI:</p>\\n<pre><code class=\\\"language-bash\\\">git tag $VERSION\\ngit push upstream $BRANCH --tags\\nIMAGE_NAMESPACE=argoproj IMAGE_TAG=$VERSION DOCKER_PUSH=true yarn docker\\n</code></pre>\\n<p>If not already created, create release branch:</p>\\n<pre><code class=\\\"language-bash\\\">cd argo-cd\\ngit checkout -b $BRANCH\\ngit push origin $BRANCH\\n</code></pre>\\n<p>Update <code>VERSION</code> and manifests with new version:</p>\\n<pre><code class=\\\"language-bash\\\">echo $VERSION > VERSION\\nmake manifests IMAGE_TAG=$VERSION\\ngit commit -am \\\"Update manifests to $VERSION\\\"\\ngit push origin $BRANCH\\n</code></pre>\\n<p>Tag, build, and push release to Docker Hub</p>\\n<pre><code class=\\\"language-bash\\\">git tag $VERSION\\nmake release IMAGE_NAMESPACE=argoproj IMAGE_TAG=$VERSION DOCKER_PUSH=true\\ngit push origin $VERSION\\n</code></pre>\\n<p>Update Github releases with:</p>\\n<ul>\\n<li>Getting started (copy from previous release)</li>\\n<li>Changelog</li>\\n</ul>\\n<h2>Stable Release</h2>\\n<p>Update Brew formula:</p>\\n<pre><code class=\\\"language-bash\\\">git clone https://github.com/argoproj/homebrew-tap\\ncd homebrew-tap\\n./update.sh ~/go/src/github.com/argoproj/argo-cd/dist/argocd-darwin-amd64\\ngit commit -a -m \\\"Update argocd to $VERSION\\\"\\ngit push\\n</code></pre>\\n<p>Deploy the <a href=\\\"site.html\\\">site</a>.</p>\\n<p>Update <code>stable</code> tag:</p>\\n<pre><code>git tag stable --force &#x26;&#x26; git push origin stable --force\\n</code></pre>\\n<p>Create GitHub release from new tag and upload binaries (e.g. dist/argocd-darwin-amd64).</p>\",\"docPath\":\"argo-cd/docs/developer-guide/releasing\",\"proj\":\"argo-cd\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-cd-docs-developer-guide-releasing-html.json\n// module id = 550\n// module chunks = 97983591878712"],"sourceRoot":""}