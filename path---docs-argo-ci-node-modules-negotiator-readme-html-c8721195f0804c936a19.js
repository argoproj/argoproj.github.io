webpackJsonp([0xe39a18927578],{2926:function(e,a){e.exports={pathContext:{docHtml:"<h1>negotiator</h1>\n<p><a href=\"https://npmjs.org/package/negotiator\"><img src=\"https://img.shields.io/npm/v/negotiator.svg\" alt=\"NPM Version\"></a>\n<a href=\"https://npmjs.org/package/negotiator\"><img src=\"https://img.shields.io/npm/dm/negotiator.svg\" alt=\"NPM Downloads\"></a>\n<a href=\"https://nodejs.org/en/download/\"><img src=\"https://img.shields.io/node/v/negotiator.svg\" alt=\"Node.js Version\"></a>\n<a href=\"https://travis-ci.org/jshttp/negotiator\"><img src=\"https://img.shields.io/travis/jshttp/negotiator/master.svg\" alt=\"Build Status\"></a>\n<a href=\"https://coveralls.io/r/jshttp/negotiator?branch=master\"><img src=\"https://img.shields.io/coveralls/jshttp/negotiator/master.svg\" alt=\"Test Coverage\"></a></p>\n<p>An HTTP content negotiator for Node.js</p>\n<h2>Installation</h2>\n<pre><code class=\"language-sh\">$ npm install negotiator\n</code></pre>\n<h2>API</h2>\n<pre><code class=\"language-js\">var Negotiator = require('negotiator')\n</code></pre>\n<h3>Accept Negotiation</h3>\n<pre><code class=\"language-js\">availableMediaTypes = ['text/html', 'text/plain', 'application/json']\n\n// The negotiator constructor receives a request object\nnegotiator = new Negotiator(request)\n\n// Let's say Accept header is 'text/html, application/*;q=0.2, image/jpeg;q=0.8'\n\nnegotiator.mediaTypes()\n// -> ['text/html', 'image/jpeg', 'application/*']\n\nnegotiator.mediaTypes(availableMediaTypes)\n// -> ['text/html', 'application/json']\n\nnegotiator.mediaType(availableMediaTypes)\n// -> 'text/html'\n</code></pre>\n<p>You can check a working example at <code>examples/accept.js</code>.</p>\n<h4>Methods</h4>\n<h5>mediaType()</h5>\n<p>Returns the most preferred media type from the client.</p>\n<h5>mediaType(availableMediaType)</h5>\n<p>Returns the most preferred media type from a list of available media types.</p>\n<h5>mediaTypes()</h5>\n<p>Returns an array of preferred media types ordered by the client preference.</p>\n<h5>mediaTypes(availableMediaTypes)</h5>\n<p>Returns an array of preferred media types ordered by priority from a list of\navailable media types.</p>\n<h3>Accept-Language Negotiation</h3>\n<pre><code class=\"language-js\">negotiator = new Negotiator(request)\n\navailableLanguages = ['en', 'es', 'fr']\n\n// Let's say Accept-Language header is 'en;q=0.8, es, pt'\n\nnegotiator.languages()\n// -> ['es', 'pt', 'en']\n\nnegotiator.languages(availableLanguages)\n// -> ['es', 'en']\n\nlanguage = negotiator.language(availableLanguages)\n// -> 'es'\n</code></pre>\n<p>You can check a working example at <code>examples/language.js</code>.</p>\n<h4>Methods</h4>\n<h5>language()</h5>\n<p>Returns the most preferred language from the client.</p>\n<h5>language(availableLanguages)</h5>\n<p>Returns the most preferred language from a list of available languages.</p>\n<h5>languages()</h5>\n<p>Returns an array of preferred languages ordered by the client preference.</p>\n<h5>languages(availableLanguages)</h5>\n<p>Returns an array of preferred languages ordered by priority from a list of\navailable languages.</p>\n<h3>Accept-Charset Negotiation</h3>\n<pre><code class=\"language-js\">availableCharsets = ['utf-8', 'iso-8859-1', 'iso-8859-5']\n\nnegotiator = new Negotiator(request)\n\n// Let's say Accept-Charset header is 'utf-8, iso-8859-1;q=0.8, utf-7;q=0.2'\n\nnegotiator.charsets()\n// -> ['utf-8', 'iso-8859-1', 'utf-7']\n\nnegotiator.charsets(availableCharsets)\n// -> ['utf-8', 'iso-8859-1']\n\nnegotiator.charset(availableCharsets)\n// -> 'utf-8'\n</code></pre>\n<p>You can check a working example at <code>examples/charset.js</code>.</p>\n<h4>Methods</h4>\n<h5>charset()</h5>\n<p>Returns the most preferred charset from the client.</p>\n<h5>charset(availableCharsets)</h5>\n<p>Returns the most preferred charset from a list of available charsets.</p>\n<h5>charsets()</h5>\n<p>Returns an array of preferred charsets ordered by the client preference.</p>\n<h5>charsets(availableCharsets)</h5>\n<p>Returns an array of preferred charsets ordered by priority from a list of\navailable charsets.</p>\n<h3>Accept-Encoding Negotiation</h3>\n<pre><code class=\"language-js\">availableEncodings = ['identity', 'gzip']\n\nnegotiator = new Negotiator(request)\n\n// Let's say Accept-Encoding header is 'gzip, compress;q=0.2, identity;q=0.5'\n\nnegotiator.encodings()\n// -> ['gzip', 'identity', 'compress']\n\nnegotiator.encodings(availableEncodings)\n// -> ['gzip', 'identity']\n\nnegotiator.encoding(availableEncodings)\n// -> 'gzip'\n</code></pre>\n<p>You can check a working example at <code>examples/encoding.js</code>.</p>\n<h4>Methods</h4>\n<h5>encoding()</h5>\n<p>Returns the most preferred encoding from the client.</p>\n<h5>encoding(availableEncodings)</h5>\n<p>Returns the most preferred encoding from a list of available encodings.</p>\n<h5>encodings()</h5>\n<p>Returns an array of preferred encodings ordered by the client preference.</p>\n<h5>encodings(availableEncodings)</h5>\n<p>Returns an array of preferred encodings ordered by priority from a list of\navailable encodings.</p>\n<h2>See Also</h2>\n<p>The <a href=\"https://npmjs.org/package/accepts#readme\">accepts</a> module builds on\nthis module and provides an alternative interface, mime type validation,\nand more.</p>\n<h2>License</h2>\n<p><a href=\"LICENSE\">MIT</a></p>",docPath:"argo-ci/node_modules/negotiator/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-negotiator-readme-html-c8721195f0804c936a19.js.map