{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-nan-changelog-html-ade0cecacd979bfe65ca.js","webpack:///./.cache/json/docs-argo-ci-node-modules-nan-changelog-html.json"],"names":["webpackJsonp","2902","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,+2qBAAy0qBC,QAAA,qCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-nan-changelog-html-ade0cecacd979bfe65ca.js","sourcesContent":["webpackJsonp([247183432119909],{\n\n/***/ 2902:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>NAN ChangeLog</h1>\\n<p><strong>Version 2.8.0: current Node 9.2.0, Node 12: 0.12.18, Node 10: 0.10.48, iojs: 3.3.1</strong></p>\\n<h3>2.8.0 Nov 15 2017</h3>\\n<ul>\\n<li>Deprecation: Deprecate <code>Nan::ForceSet</code> in favor of <code>Nan::DefineOwnProperty()</code> 95cbb976d6fbbba88ba0f86dd188223a8591b4e7</li>\\n<li>Feature: Add <code>Nan::AsyncProgressQueueWorker</code> a976636ecc2ef617d1b061ce4a6edf39923691cb</li>\\n<li>Feature: Add <code>Nan::DefineOwnProperty()</code> 95cbb976d6fbbba88ba0f86dd188223a8591b4e7</li>\\n<li>Bugfix: Fix compiling on io.js 1 &#x26; 2 82705a64503ce60c62e98df5bd02972bba090900</li>\\n<li>Bugfix: Use DefineOwnProperty instead of ForceSet 95cbb976d6fbbba88ba0f86dd188223a8591b4e7</li>\\n</ul>\\n<h3>2.7.0 Aug 30 2017</h3>\\n<ul>\\n<li>Feature: Add <code>Nan::To&#x3C;v8::Function>()</code> overload. b93280670c9f6da42ed4cf6cbf085ffdd87bd65b</li>\\n<li>Bugfix: Fix ternary in <code>Nan::MaybeLocal&#x3C;T>::FromMaybe&#x3C;S>()</code>. 79a26f7d362e756a9524e672a82c3d603b542867</li>\\n</ul>\\n<h3>2.6.2 Apr 12 2017</h3>\\n<ul>\\n<li>Bugfix: Fix v8::JSON::Parse() deprecation warning. 87f6a3c65815fa062296a994cc863e2fa124867d</li>\\n</ul>\\n<h3>2.6.1 Apr 6 2017</h3>\\n<ul>\\n<li>Bugfix: nan_json.h: fix build breakage in Node 6 ac8d47dc3c10bfbf3f15a6b951633120c0ee6d51</li>\\n</ul>\\n<h3>2.6.0 Apr 6 2017</h3>\\n<ul>\\n<li>Feature: nan: add support for JSON::Parse &#x26; Stringify b533226c629cce70e1932a873bb6f849044a56c5</li>\\n</ul>\\n<h3>2.5.1 Jan 23 2017</h3>\\n<ul>\\n<li>Bugfix: Fix disappearing handle for private value 6a80995694f162ef63dbc9948fbefd45d4485aa0</li>\\n<li>Bugfix: Add missing scopes a93b8bae6bc7d32a170db6e89228b7f60ee57112</li>\\n<li>Bugfix: Use string::data instead of string::front in NewOneByteString d5f920371e67e1f3b268295daee6e83af86b6e50</li>\\n</ul>\\n<h3>2.5.0 Dec 21 2016</h3>\\n<ul>\\n<li>Feature: Support Private accessors a86255cb357e8ad8ccbf1f6a4a901c921e39a178</li>\\n<li>Bugfix: Abort in delete operators that shouldn't be called 0fe38215ff8581703967dfd26c12793feb960018</li>\\n</ul>\\n<h3>2.4.0 Jul 10 2016</h3>\\n<ul>\\n<li>Feature: Rewrite Callback to add Callback::Reset c4cf44d61f8275cd5f7b0c911d7a806d4004f649</li>\\n<li>Feature: AsyncProgressWorker: add template types for .send 1242c9a11a7ed481c8f08ec06316385cacc513d0</li>\\n<li>Bugfix: Add constness to old Persistent comparison operators bd43cb9982c7639605d60fd073efe8cae165d9b2</li>\\n</ul>\\n<h3>2.3.5 May 31 2016</h3>\\n<ul>\\n<li>Bugfix: Replace NAN_INLINE with 'inline' keyword. 71819d8725f822990f439479c9aba3b240804909</li>\\n</ul>\\n<h3>2.3.4 May 31 2016</h3>\\n<ul>\\n<li>Bugfix: Remove V8 deprecation warnings 0592fb0a47f3a1c7763087ebea8e1138829f24f9</li>\\n<li>Bugfix: Fix new versions not to use WeakCallbackInfo::IsFirstPass 615c19d9e03d4be2049c10db0151edbc3b229246</li>\\n<li>Bugfix: Make ObjectWrap::handle() const d19af99595587fe7a26bd850af6595c2a7145afc</li>\\n<li>Bugfix: Fix compilation errors related to 0592fb0a47f3a1c7763087ebea8e1138829f24f9 e9191c525b94f652718325e28610a1adcf90fed8</li>\\n</ul>\\n<h3>2.3.3 May 4 2016</h3>\\n<ul>\\n<li>Bugfix: Refactor SetMethod() to deal with v8::Templates (#566) b9083cf6d5de6ebe6bcb49c7502fbb7c0d9ddda8</li>\\n</ul>\\n<h3>2.3.2 Apr 27 2016</h3>\\n<ul>\\n<li>Bugfix: Fix compilation on outdated versions due to Handle removal f8b7c875d04d425a41dfd4f3f8345bc3a11e6c52</li>\\n</ul>\\n<h3>2.3.1 Apr 27 2016</h3>\\n<ul>\\n<li>Bugfix: Don't use deprecated v8::Template::Set() in SetMethod a90951e9ea70fa1b3836af4b925322919159100e</li>\\n</ul>\\n<h3>2.3.0 Apr 27 2016</h3>\\n<ul>\\n<li>Feature: added Signal() for invoking async callbacks without sending data from AsyncProgressWorker d8adba45f20e077d00561b20199133620c990b38</li>\\n<li>Bugfix: Don't use deprecated v8::Template::Set() 00dacf0a4b86027415867fa7f1059acc499dcece</li>\\n</ul>\\n<h3>2.2.1 Mar 29 2016</h3>\\n<ul>\\n<li>Bugfix: Use NewFromUnsigned in ReturnValue<T>::Set(uint32<em>t i) for pre</em>12 3a18f9bdce29826e0e4c217854bc476918241a58</li>\\n<li>Performance: Remove unneeeded nullptr checks b715ef44887931c94f0d1605b3b1a4156eebece9</li>\\n</ul>\\n<h3>2.2.0 Jan 9 2016</h3>\\n<ul>\\n<li>Feature: Add Function::Call wrapper 4c157474dacf284d125c324177b45aa5dabc08c6</li>\\n<li>Feature: Rename GC*logueCallback to GCCallback for > 4.0 3603435109f981606d300eb88004ca101283acec</li>\\n<li>Bugfix: Fix Global::Pass for old versions 367e82a60fbaa52716232cc89db1cc3f685d77d9</li>\\n<li>Bugfix: Remove weird MaybeLocal wrapping of what already is a MaybeLocal 23b4590db10c2ba66aee2338aebe9751c4cb190b</li>\\n</ul>\\n<h3>2.1.0 Oct 8 2015</h3>\\n<ul>\\n<li>Deprecation: Deprecate NanErrnoException in favor of ErrnoException 0af1ca4cf8b3f0f65ed31bc63a663ab3319da55c</li>\\n<li>Feature: added helper class for accessing contents of typedarrays 17b51294c801e534479d5463697a73462d0ca555</li>\\n<li>Feature: [Maybe types] Add MakeMaybe(...) 48d7b53d9702b0c7a060e69ea10fea8fb48d814d</li>\\n<li>Feature: new: allow utf16 string with length 66ac6e65c8ab9394ef588adfc59131b3b9d8347b</li>\\n<li>Feature: Introduce SetCallHandler and SetCallAsFunctionHandler 7764a9a115d60ba10dc24d86feb0fbc9b4f75537</li>\\n<li>Bugfix: Enable creating Locals from Globals under Node 0.10. 9bf9b8b190821af889790fdc18ace57257e4f9ff</li>\\n<li>Bugfix: Fix issue #462 where PropertyCallbackInfo data is not stored safely. 55f50adedd543098526c7b9f4fffd607d3f9861f</li>\\n</ul>\\n<h3>2.0.9 Sep 8 2015</h3>\\n<ul>\\n<li>Bugfix: EscapableHandleScope in Nan::NewBuffer for Node 0.8 and 0.10 b1654d7</li>\\n</ul>\\n<h3>2.0.8 Aug 28 2015</h3>\\n<ul>\\n<li>Work around duplicate linking bug in clang 11902da</li>\\n</ul>\\n<h3>2.0.7 Aug 26 2015</h3>\\n<ul>\\n<li>Build: Repackage</li>\\n</ul>\\n<h3>2.0.6 Aug 26 2015</h3>\\n<ul>\\n<li>Bugfix: Properly handle null callback in FunctionTemplate factory 6e99cb1</li>\\n<li>Bugfix: Remove unused static std::map instances 525bddc</li>\\n<li>Bugfix: Make better use of maybe versions of APIs bfba85b</li>\\n<li>Bugfix: Fix shadowing issues with handle in ObjectWrap 0a9072d</li>\\n</ul>\\n<h3>2.0.5 Aug 10 2015</h3>\\n<ul>\\n<li>Bugfix: Reimplement weak callback in ObjectWrap 98d38c1</li>\\n<li>Bugfix: Make sure callback classes are not assignable, copyable or movable 81f9b1d</li>\\n</ul>\\n<h3>2.0.4 Aug 6 2015</h3>\\n<ul>\\n<li>Build: Repackage</li>\\n</ul>\\n<h3>2.0.3 Aug 6 2015</h3>\\n<ul>\\n<li>Bugfix: Don't use clang++ / g++ syntax extension. 231450e</li>\\n</ul>\\n<h3>2.0.2 Aug 6 2015</h3>\\n<ul>\\n<li>Build: Repackage</li>\\n</ul>\\n<h3>2.0.1 Aug 6 2015</h3>\\n<ul>\\n<li>Bugfix: Add workaround for missing REPLACE<em>INVALID</em>UTF8 60d6687</li>\\n<li>Bugfix: Reimplement ObjectWrap from scratch to prevent memory leaks 6484601</li>\\n<li>Bugfix: Fix Persistent leak in FunctionCallbackInfo and PropertyCallbackInfo 641ef5f</li>\\n<li>Bugfix: Add missing overload for Nan::NewInstance that takes argc/argv 29450ed</li>\\n</ul>\\n<h3>2.0.0 Jul 31 2015</h3>\\n<ul>\\n<li>Change: Renamed identifiers with leading underscores\\tb5932b4</li>\\n<li>Change: Replaced NanObjectWrapHandle with class NanObjectWrap\\t464f1e1</li>\\n<li>Change: Replace NanScope and NanEscpableScope macros with classes\\t47751c4</li>\\n<li>Change: Rename NanNewBufferHandle to NanNewBuffer\\t6745f99</li>\\n<li>Change: Rename NanBufferUse to NanNewBuffer\\t3e8b0a5</li>\\n<li>Change: Rename NanNewBuffer to NanCopyBuffer\\td6af78d</li>\\n<li>Change: Remove Nan prefix from all names\\t72d1f67</li>\\n<li>Change: Update Buffer API for new upstream changes\\td5d3291</li>\\n<li>Change: Rename Scope and EscapableScope to HandleScope and EscapableHandleScope\\t21a7a6a</li>\\n<li>Change: Get rid of Handles\\t e6c0daf</li>\\n<li>Feature: Support io.js 3 with V8 4.4</li>\\n<li>Feature: Introduce NanPersistent\\t7fed696</li>\\n<li>Feature: Introduce NanGlobal\\t4408da1</li>\\n<li>Feature: Added NanTryCatch\\t10f1ca4</li>\\n<li>Feature: Update for V8 v4.3\\t4b6404a</li>\\n<li>Feature: Introduce NanNewOneByteString\\tc543d32</li>\\n<li>Feature: Introduce namespace Nan\\t67ed1b1</li>\\n<li>Removal: Remove NanLocker and NanUnlocker\\tdd6e401</li>\\n<li>Removal: Remove string converters, except NanUtf8String, which now follows the node implementation b5d00a9</li>\\n<li>Removal: Remove NanReturn* macros\\td90a25c</li>\\n<li>Removal: Remove HasInstance\\te8f84fe</li>\\n</ul>\\n<h3>1.9.0 Jul 31 2015</h3>\\n<ul>\\n<li>Feature: Added <code>NanFatalException</code> 81d4a2c</li>\\n<li>Feature: Added more error types 4265f06</li>\\n<li>Feature: Added dereference and function call operators to NanCallback c4b2ed0</li>\\n<li>Feature: Added indexed GetFromPersistent and SaveToPersistent edd510c</li>\\n<li>Feature: Added more overloads of SaveToPersistent and GetFromPersistent 8b1cef6</li>\\n<li>Feature: Added NanErrnoException dd87d9e</li>\\n<li>Correctness: Prevent assign, copy, and move for classes that do not support it 1f55c59, 4b808cb, c96d9b2, fba4a29, 3357130</li>\\n<li>Deprecation: Deprecate <code>NanGetPointerSafe</code> and <code>NanSetPointerSafe</code> 81d4a2c</li>\\n<li>Deprecation: Deprecate <code>NanBooleanOptionValue</code> and <code>NanUInt32OptionValue</code> 0ad254b</li>\\n</ul>\\n<h3>1.8.4 Apr 26 2015</h3>\\n<ul>\\n<li>Build: Repackage</li>\\n</ul>\\n<h3>1.8.3 Apr 26 2015</h3>\\n<ul>\\n<li>Bugfix: Include missing header 1af8648</li>\\n</ul>\\n<h3>1.8.2 Apr 23 2015</h3>\\n<ul>\\n<li>Build: Repackage</li>\\n</ul>\\n<h3>1.8.1 Apr 23 2015</h3>\\n<ul>\\n<li>Bugfix: NanObjectWrapHandle should take a pointer 155f1d3</li>\\n</ul>\\n<h3>1.8.0 Apr 23 2015</h3>\\n<ul>\\n<li>Feature: Allow primitives with NanReturnValue 2e4475e</li>\\n<li>Feature: Added comparison operators to NanCallback 55b075e</li>\\n<li>Feature: Backport thread local storage 15bb7fa</li>\\n<li>Removal: Remove support for signatures with arguments 8a2069d</li>\\n<li>Correcteness: Replaced NanObjectWrapHandle macro with function 0bc6d59</li>\\n</ul>\\n<h3>1.7.0 Feb 28 2015</h3>\\n<ul>\\n<li>Feature: Made NanCallback::Call accept optional target 8d54da7</li>\\n<li>Feature: Support atom-shell 0.21 0b7f1bb</li>\\n</ul>\\n<h3>1.6.2 Feb 6 2015</h3>\\n<ul>\\n<li>Bugfix: NanEncode: fix argument type for node::Encode on io.js 2be8639</li>\\n</ul>\\n<h3>1.6.1 Jan 23 2015</h3>\\n<ul>\\n<li>Build: version bump</li>\\n</ul>\\n<h3>1.5.3 Jan 23 2015</h3>\\n<ul>\\n<li>Build: repackage</li>\\n</ul>\\n<h3>1.6.0 Jan 23 2015</h3>\\n<ul>\\n<li>Deprecated <code>NanNewContextHandle</code> in favor of <code>NanNew&#x3C;Context></code> 49259af</li>\\n<li>Support utility functions moved in newer v8 versions (Node 0.11.15, io.js 1.0) a0aa179</li>\\n<li>Added <code>NanEncode</code>, <code>NanDecodeBytes</code> and <code>NanDecodeWrite</code> 75e6fb9</li>\\n</ul>\\n<h3>1.5.2 Jan 23 2015</h3>\\n<ul>\\n<li>Bugfix: Fix non-inline definition build error with clang++ 21d96a1, 60fadd4</li>\\n<li>Bugfix: Readded missing String constructors 18d828f</li>\\n<li>Bugfix: Add overload handling NanNew<FunctionTemplate>(..) 5ef813b</li>\\n<li>Bugfix: Fix uv<em>work</em>cb versioning 997e4ae</li>\\n<li>Bugfix: Add function factory and test 4eca89c</li>\\n<li>Bugfix: Add object template factory and test cdcb951</li>\\n<li>Correctness: Lifted an io.js related typedef c9490be</li>\\n<li>Correctness: Make explicit downcasts of String lengths 00074e6</li>\\n<li>Windows: Limit the scope of disabled warning C4530 83d7deb</li>\\n</ul>\\n<h3>1.5.1 Jan 15 2015</h3>\\n<ul>\\n<li>Build: version bump</li>\\n</ul>\\n<h3>1.4.3 Jan 15 2015</h3>\\n<ul>\\n<li>Build: version bump</li>\\n</ul>\\n<h3>1.4.2 Jan 15 2015</h3>\\n<ul>\\n<li>Feature: Support io.js 0dbc5e8</li>\\n</ul>\\n<h3>1.5.0 Jan 14 2015</h3>\\n<ul>\\n<li>Feature: Support io.js b003843</li>\\n<li>Correctness: Improved NanNew internals 9cd4f6a</li>\\n<li>Feature: Implement progress to NanAsyncWorker 8d6a160</li>\\n</ul>\\n<h3>1.4.1 Nov 8 2014</h3>\\n<ul>\\n<li>Bugfix: Handle DEBUG definition correctly</li>\\n<li>Bugfix: Accept int as Boolean</li>\\n</ul>\\n<h3>1.4.0 Nov 1 2014</h3>\\n<ul>\\n<li>Feature: Added NAN<em>GC</em>CALLBACK 6a5c245</li>\\n<li>Performance: Removed unnecessary local handle creation 18a7243, 41fe2f8</li>\\n<li>Correctness: Added constness to references in NanHasInstance 02c61cd</li>\\n<li>Warnings: Fixed spurious warnings from -Wundef and -Wshadow, 541b122, 99d8cb6</li>\\n<li>Windoze: Shut Visual Studio up when compiling 8d558c1</li>\\n<li>License: Switch to plain MIT from custom hacked MIT license 11de983</li>\\n<li>Build: Added test target to Makefile e232e46</li>\\n<li>Performance: Removed superfluous scope in NanAsyncWorker f4b7821</li>\\n<li>Sugar/Feature: Added NanReturnThis() and NanReturnHolder() shorthands 237a5ff, d697208</li>\\n<li>Feature: Added suitable overload of NanNew for v8::Integer::NewFromUnsigned b27b450</li>\\n</ul>\\n<h3>1.3.0 Aug 2 2014</h3>\\n<ul>\\n<li>Added NanNew&#x3C;v8::String, std::string>(std::string)</li>\\n<li>Added NanNew&#x3C;v8::String, std::string&#x26;>(std::string&#x26;)</li>\\n<li>Added NanAsciiString helper class</li>\\n<li>Added NanUtf8String helper class</li>\\n<li>Added NanUcs2String helper class</li>\\n<li>Deprecated NanRawString()</li>\\n<li>Deprecated NanCString()</li>\\n<li>Added NanGetIsolateData(v8::Isolate *isolate)</li>\\n<li>Added NanMakeCallback(v8::Handle&#x3C;v8::Object> target, v8::Handle&#x3C;v8::Function> func, int argc, v8::Handle&#x3C;v8::Value>* argv)</li>\\n<li>Added NanMakeCallback(v8::Handle&#x3C;v8::Object> target, v8::Handle&#x3C;v8::String> symbol, int argc, v8::Handle&#x3C;v8::Value>* argv)</li>\\n<li>Added NanMakeCallback(v8::Handle&#x3C;v8::Object> target, const char* method, int argc, v8::Handle&#x3C;v8::Value>* argv)</li>\\n<li>Added NanSetTemplate(v8::Handle&#x3C;v8::Template> templ, v8::Handle&#x3C;v8::String> name , v8::Handle&#x3C;v8::Data> value, v8::PropertyAttribute attributes)</li>\\n<li>Added NanSetPrototypeTemplate(v8::Local&#x3C;v8::FunctionTemplate> templ, v8::Handle&#x3C;v8::String> name, v8::Handle&#x3C;v8::Data> value, v8::PropertyAttribute attributes)</li>\\n<li>Added NanSetInstanceTemplate(v8::Local&#x3C;v8::FunctionTemplate> templ, const char *name, v8::Handle&#x3C;v8::Data> value)</li>\\n<li>Added NanSetInstanceTemplate(v8::Local&#x3C;v8::FunctionTemplate> templ, v8::Handle&#x3C;v8::String> name, v8::Handle&#x3C;v8::Data> value, v8::PropertyAttribute attributes)</li>\\n</ul>\\n<h3>1.2.0 Jun 5 2014</h3>\\n<ul>\\n<li>Add NanSetPrototypeTemplate</li>\\n<li>Changed NAN<em>WEAK</em>CALLBACK internals, switched _NanWeakCallbackData to class,\\nintroduced _NanWeakCallbackDispatcher</li>\\n<li>Removed -Wno-unused-local-typedefs from test builds</li>\\n<li>Made test builds Windows compatible ('Sleep()')</li>\\n</ul>\\n<h3>1.1.2 May 28 2014</h3>\\n<ul>\\n<li>Release to fix more stuff-ups in 1.1.1</li>\\n</ul>\\n<h3>1.1.1 May 28 2014</h3>\\n<ul>\\n<li>Release to fix version mismatch in nan.h and lack of changelog entry for 1.1.0</li>\\n</ul>\\n<h3>1.1.0 May 25 2014</h3>\\n<ul>\\n<li>Remove nan_isolate, use v8::Isolate::GetCurrent() internally instead</li>\\n<li>Additional explicit overloads for NanNew(): (char<em>,int), (uint8_t</em>[,int]),\\n(uint16_t<em>[,int), double, int, unsigned int, bool, v8::String::ExternalStringResource</em>,\\nv8::String::ExternalAsciiStringResource*</li>\\n<li>Deprecate NanSymbol()</li>\\n<li>Added SetErrorMessage() and ErrorMessage() to NanAsyncWorker</li>\\n</ul>\\n<h3>1.0.0 May 4 2014</h3>\\n<ul>\\n<li>Heavy API changes for V8 3.25 / Node 0.11.13</li>\\n<li>Use cpplint.py</li>\\n<li>Removed NanInitPersistent</li>\\n<li>Removed NanPersistentToLocal</li>\\n<li>Removed NanFromV8String</li>\\n<li>Removed NanMakeWeak</li>\\n<li>Removed NanNewLocal</li>\\n<li>Removed NAN<em>WEAK</em>CALLBACK_OBJECT</li>\\n<li>Removed NAN<em>WEAK</em>CALLBACK_DATA</li>\\n<li>Introduce NanNew, replaces NanNewLocal, NanPersistentToLocal, adds many overloaded typed versions</li>\\n<li>Introduce NanUndefined, NanNull, NanTrue and NanFalse</li>\\n<li>Introduce NanEscapableScope and NanEscapeScope</li>\\n<li>Introduce NanMakeWeakPersistent (requires a special callback to work on both old and new node)</li>\\n<li>Introduce NanMakeCallback for node::MakeCallback</li>\\n<li>Introduce NanSetTemplate</li>\\n<li>Introduce NanGetCurrentContext</li>\\n<li>Introduce NanCompileScript and NanRunScript</li>\\n<li>Introduce NanAdjustExternalMemory</li>\\n<li>Introduce NanAddGCEpilogueCallback, NanAddGCPrologueCallback, NanRemoveGCEpilogueCallback, NanRemoveGCPrologueCallback</li>\\n<li>Introduce NanGetHeapStatistics</li>\\n<li>Rename NanAsyncWorker#SavePersistent() to SaveToPersistent()</li>\\n</ul>\\n<h3>0.8.0 Jan 9 2014</h3>\\n<ul>\\n<li>NanDispose -> NanDisposePersistent, deprecate NanDispose</li>\\n<li>Extract <em>NAN</em><em><em>RETURN</em>TYPE, pull up NAN_</em>()</li>\\n</ul>\\n<h3>0.7.1 Jan 9 2014</h3>\\n<ul>\\n<li>Fixes to work against debug builds of Node</li>\\n<li>Safer NanPersistentToLocal (avoid reinterpret_cast)</li>\\n<li>Speed up common NanRawString case by only extracting flattened string when necessary</li>\\n</ul>\\n<h3>0.7.0 Dec 17 2013</h3>\\n<ul>\\n<li>New no-arg form of NanCallback() constructor.</li>\\n<li>NanCallback#Call takes Handle rather than Local</li>\\n<li>Removed deprecated NanCallback#Run method, use NanCallback#Call instead</li>\\n<li>Split off <em>NAN</em><em><em>ARGS</em>TYPE from <em>NAN</em></em>_ARGS</li>\\n<li>Restore (unofficial) Node 0.6 compatibility at NanCallback#Call()</li>\\n<li>Introduce NanRawString() for char* (or appropriate void*) from v8::String\\n(replacement for NanFromV8String)</li>\\n<li>Introduce NanCString() for null-terminated char* from v8::String</li>\\n</ul>\\n<h3>0.6.0 Nov 21 2013</h3>\\n<ul>\\n<li>Introduce NanNewLocal<T>(v8::Handle<T> value) for use in place of\\nv8::Local<T>::New(...) since v8 started requiring isolate in Node 0.11.9</li>\\n</ul>\\n<h3>0.5.2 Nov 16 2013</h3>\\n<ul>\\n<li>Convert SavePersistent and GetFromPersistent in NanAsyncWorker from protected and public</li>\\n</ul>\\n<h3>0.5.1 Nov 12 2013</h3>\\n<ul>\\n<li>Use node::MakeCallback() instead of direct v8::Function::Call()</li>\\n</ul>\\n<h3>0.5.0 Nov 11 2013</h3>\\n<ul>\\n<li>Added @TooTallNate as collaborator</li>\\n<li>New, much simpler, \\\"include_dirs\\\" for binding.gyp</li>\\n<li>Added full range of NAN<em>INDEX</em>* macros to match NAN<em>PROPERTY</em>* macros</li>\\n</ul>\\n<h3>0.4.4 Nov 2 2013</h3>\\n<ul>\\n<li>Isolate argument from v8::Persistent::MakeWeak removed for 0.11.8+</li>\\n</ul>\\n<h3>0.4.3 Nov 2 2013</h3>\\n<ul>\\n<li>Include node<em>object</em>wrap.h, removed from node.h for Node 0.11.8.</li>\\n</ul>\\n<h3>0.4.2 Nov 2 2013</h3>\\n<ul>\\n<li>Handle deprecation of v8::Persistent::Dispose(v8::Isolate* isolate)) for\\nNode 0.11.8 release.</li>\\n</ul>\\n<h3>0.4.1 Sep 16 2013</h3>\\n<ul>\\n<li>Added explicit <code>#include &#x3C;uv.h></code> as it was removed from node.h for v0.11.8</li>\\n</ul>\\n<h3>0.4.0 Sep 2 2013</h3>\\n<ul>\\n<li>Added NAN<em>INLINE and NAN</em>DEPRECATED and made use of them</li>\\n<li>Added NanError, NanTypeError and NanRangeError</li>\\n<li>Cleaned up code</li>\\n</ul>\\n<h3>0.3.2 Aug 30 2013</h3>\\n<ul>\\n<li>Fix missing scope declaration in GetFromPersistent() and SaveToPersistent\\nin NanAsyncWorker</li>\\n</ul>\\n<h3>0.3.1 Aug 20 2013</h3>\\n<ul>\\n<li>fix \\\"not all control paths return a value\\\" compile warning on some platforms</li>\\n</ul>\\n<h3>0.3.0 Aug 19 2013</h3>\\n<ul>\\n<li>Made NAN work with NPM</li>\\n<li>Lots of fixes to NanFromV8String, pulling in features from new Node core</li>\\n<li>Changed node::encoding to Nan::Encoding in NanFromV8String to unify the API</li>\\n<li>Added optional error number argument for NanThrowError()</li>\\n<li>Added NanInitPersistent()</li>\\n<li>Added NanReturnNull() and NanReturnEmptyString()</li>\\n<li>Added NanLocker and NanUnlocker</li>\\n<li>Added missing scopes</li>\\n<li>Made sure to clear disposed Persistent handles</li>\\n<li>Changed NanAsyncWorker to allocate error messages on the heap</li>\\n<li>Changed NanThrowError(Local<Value>) to NanThrowError(Handle<Value>)</li>\\n<li>Fixed leak in NanAsyncWorker when errmsg is used</li>\\n</ul>\\n<h3>0.2.2 Aug 5 2013</h3>\\n<ul>\\n<li>Fixed usage of undefined variable with node::BASE64 in NanFromV8String()</li>\\n</ul>\\n<h3>0.2.1 Aug 5 2013</h3>\\n<ul>\\n<li>Fixed 0.8 breakage, node::BUFFER encoding type not available in 0.8 for\\nNanFromV8String()</li>\\n</ul>\\n<h3>0.2.0 Aug 5 2013</h3>\\n<ul>\\n<li>Added NAN<em>PROPERTY</em>GETTER, NAN<em>PROPERTY</em>SETTER, NAN<em>PROPERTY</em>ENUMERATOR,\\nNAN<em>PROPERTY</em>DELETER, NAN<em>PROPERTY</em>QUERY</li>\\n<li>Extracted <em>NAN</em>METHOD<em>ARGS, _NAN</em>GETTER<em>ARGS, _NAN</em>SETTER<em>ARGS,\\n_NAN</em>PROPERTY<em>GETTER</em>ARGS, <em>NAN</em>PROPERTY<em>SETTER</em>ARGS,\\n<em>NAN</em>PROPERTY<em>ENUMERATOR</em>ARGS, <em>NAN</em>PROPERTY<em>DELETER</em>ARGS,\\n<em>NAN</em>PROPERTY<em>QUERY</em>ARGS</li>\\n<li>Added NanGetInternalFieldPointer, NanSetInternalFieldPointer</li>\\n<li>Added NAN<em>WEAK</em>CALLBACK, NAN<em>WEAK</em>CALLBACK<em>OBJECT,\\nNAN</em>WEAK<em>CALLBACK</em>DATA, NanMakeWeak</li>\\n<li>Renamed THROW<em>ERROR to _NAN</em>THROW_ERROR</li>\\n<li>Added NanNewBufferHandle(char<em>, size_t, node::smalloc::FreeCallback, void</em>)</li>\\n<li>Added NanBufferUse(char*, uint32_t)</li>\\n<li>Added NanNewContextHandle(v8::ExtensionConfiguration*,\\nv8::Handle&#x3C;v8::ObjectTemplate>, v8::Handle&#x3C;v8::Value>)</li>\\n<li>Fixed broken NanCallback#GetFunction()</li>\\n<li>Added optional encoding and size arguments to NanFromV8String()</li>\\n<li>Added NanGetPointerSafe() and NanSetPointerSafe()</li>\\n<li>Added initial test suite (to be expanded)</li>\\n<li>Allow NanUInt32OptionValue to convert any Number object</li>\\n</ul>\\n<h3>0.1.0 Jul 21 2013</h3>\\n<ul>\\n<li>Added <code>NAN_GETTER</code>, <code>NAN_SETTER</code></li>\\n<li>Added <code>NanThrowError</code> with single Local<Value> argument</li>\\n<li>Added <code>NanNewBufferHandle</code> with single uint32_t argument</li>\\n<li>Added <code>NanHasInstance(Persistent&#x3C;FunctionTemplate>&#x26;, Handle&#x3C;Value>)</code></li>\\n<li>Added <code>Local&#x3C;Function> NanCallback#GetFunction()</code></li>\\n<li>Added <code>NanCallback#Call(int, Local&#x3C;Value>[])</code></li>\\n<li>Deprecated <code>NanCallback#Run(int, Local&#x3C;Value>[])</code> in favour of Call</li>\\n</ul>\",\"docPath\":\"argo-ci/node_modules/nan/changelog\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-nan-changelog-html-ade0cecacd979bfe65ca.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>NAN ChangeLog</h1>\\n<p><strong>Version 2.8.0: current Node 9.2.0, Node 12: 0.12.18, Node 10: 0.10.48, iojs: 3.3.1</strong></p>\\n<h3>2.8.0 Nov 15 2017</h3>\\n<ul>\\n<li>Deprecation: Deprecate <code>Nan::ForceSet</code> in favor of <code>Nan::DefineOwnProperty()</code> 95cbb976d6fbbba88ba0f86dd188223a8591b4e7</li>\\n<li>Feature: Add <code>Nan::AsyncProgressQueueWorker</code> a976636ecc2ef617d1b061ce4a6edf39923691cb</li>\\n<li>Feature: Add <code>Nan::DefineOwnProperty()</code> 95cbb976d6fbbba88ba0f86dd188223a8591b4e7</li>\\n<li>Bugfix: Fix compiling on io.js 1 &#x26; 2 82705a64503ce60c62e98df5bd02972bba090900</li>\\n<li>Bugfix: Use DefineOwnProperty instead of ForceSet 95cbb976d6fbbba88ba0f86dd188223a8591b4e7</li>\\n</ul>\\n<h3>2.7.0 Aug 30 2017</h3>\\n<ul>\\n<li>Feature: Add <code>Nan::To&#x3C;v8::Function>()</code> overload. b93280670c9f6da42ed4cf6cbf085ffdd87bd65b</li>\\n<li>Bugfix: Fix ternary in <code>Nan::MaybeLocal&#x3C;T>::FromMaybe&#x3C;S>()</code>. 79a26f7d362e756a9524e672a82c3d603b542867</li>\\n</ul>\\n<h3>2.6.2 Apr 12 2017</h3>\\n<ul>\\n<li>Bugfix: Fix v8::JSON::Parse() deprecation warning. 87f6a3c65815fa062296a994cc863e2fa124867d</li>\\n</ul>\\n<h3>2.6.1 Apr 6 2017</h3>\\n<ul>\\n<li>Bugfix: nan_json.h: fix build breakage in Node 6 ac8d47dc3c10bfbf3f15a6b951633120c0ee6d51</li>\\n</ul>\\n<h3>2.6.0 Apr 6 2017</h3>\\n<ul>\\n<li>Feature: nan: add support for JSON::Parse &#x26; Stringify b533226c629cce70e1932a873bb6f849044a56c5</li>\\n</ul>\\n<h3>2.5.1 Jan 23 2017</h3>\\n<ul>\\n<li>Bugfix: Fix disappearing handle for private value 6a80995694f162ef63dbc9948fbefd45d4485aa0</li>\\n<li>Bugfix: Add missing scopes a93b8bae6bc7d32a170db6e89228b7f60ee57112</li>\\n<li>Bugfix: Use string::data instead of string::front in NewOneByteString d5f920371e67e1f3b268295daee6e83af86b6e50</li>\\n</ul>\\n<h3>2.5.0 Dec 21 2016</h3>\\n<ul>\\n<li>Feature: Support Private accessors a86255cb357e8ad8ccbf1f6a4a901c921e39a178</li>\\n<li>Bugfix: Abort in delete operators that shouldn't be called 0fe38215ff8581703967dfd26c12793feb960018</li>\\n</ul>\\n<h3>2.4.0 Jul 10 2016</h3>\\n<ul>\\n<li>Feature: Rewrite Callback to add Callback::Reset c4cf44d61f8275cd5f7b0c911d7a806d4004f649</li>\\n<li>Feature: AsyncProgressWorker: add template types for .send 1242c9a11a7ed481c8f08ec06316385cacc513d0</li>\\n<li>Bugfix: Add constness to old Persistent comparison operators bd43cb9982c7639605d60fd073efe8cae165d9b2</li>\\n</ul>\\n<h3>2.3.5 May 31 2016</h3>\\n<ul>\\n<li>Bugfix: Replace NAN_INLINE with 'inline' keyword. 71819d8725f822990f439479c9aba3b240804909</li>\\n</ul>\\n<h3>2.3.4 May 31 2016</h3>\\n<ul>\\n<li>Bugfix: Remove V8 deprecation warnings 0592fb0a47f3a1c7763087ebea8e1138829f24f9</li>\\n<li>Bugfix: Fix new versions not to use WeakCallbackInfo::IsFirstPass 615c19d9e03d4be2049c10db0151edbc3b229246</li>\\n<li>Bugfix: Make ObjectWrap::handle() const d19af99595587fe7a26bd850af6595c2a7145afc</li>\\n<li>Bugfix: Fix compilation errors related to 0592fb0a47f3a1c7763087ebea8e1138829f24f9 e9191c525b94f652718325e28610a1adcf90fed8</li>\\n</ul>\\n<h3>2.3.3 May 4 2016</h3>\\n<ul>\\n<li>Bugfix: Refactor SetMethod() to deal with v8::Templates (#566) b9083cf6d5de6ebe6bcb49c7502fbb7c0d9ddda8</li>\\n</ul>\\n<h3>2.3.2 Apr 27 2016</h3>\\n<ul>\\n<li>Bugfix: Fix compilation on outdated versions due to Handle removal f8b7c875d04d425a41dfd4f3f8345bc3a11e6c52</li>\\n</ul>\\n<h3>2.3.1 Apr 27 2016</h3>\\n<ul>\\n<li>Bugfix: Don't use deprecated v8::Template::Set() in SetMethod a90951e9ea70fa1b3836af4b925322919159100e</li>\\n</ul>\\n<h3>2.3.0 Apr 27 2016</h3>\\n<ul>\\n<li>Feature: added Signal() for invoking async callbacks without sending data from AsyncProgressWorker d8adba45f20e077d00561b20199133620c990b38</li>\\n<li>Bugfix: Don't use deprecated v8::Template::Set() 00dacf0a4b86027415867fa7f1059acc499dcece</li>\\n</ul>\\n<h3>2.2.1 Mar 29 2016</h3>\\n<ul>\\n<li>Bugfix: Use NewFromUnsigned in ReturnValue<T>::Set(uint32<em>t i) for pre</em>12 3a18f9bdce29826e0e4c217854bc476918241a58</li>\\n<li>Performance: Remove unneeeded nullptr checks b715ef44887931c94f0d1605b3b1a4156eebece9</li>\\n</ul>\\n<h3>2.2.0 Jan 9 2016</h3>\\n<ul>\\n<li>Feature: Add Function::Call wrapper 4c157474dacf284d125c324177b45aa5dabc08c6</li>\\n<li>Feature: Rename GC*logueCallback to GCCallback for > 4.0 3603435109f981606d300eb88004ca101283acec</li>\\n<li>Bugfix: Fix Global::Pass for old versions 367e82a60fbaa52716232cc89db1cc3f685d77d9</li>\\n<li>Bugfix: Remove weird MaybeLocal wrapping of what already is a MaybeLocal 23b4590db10c2ba66aee2338aebe9751c4cb190b</li>\\n</ul>\\n<h3>2.1.0 Oct 8 2015</h3>\\n<ul>\\n<li>Deprecation: Deprecate NanErrnoException in favor of ErrnoException 0af1ca4cf8b3f0f65ed31bc63a663ab3319da55c</li>\\n<li>Feature: added helper class for accessing contents of typedarrays 17b51294c801e534479d5463697a73462d0ca555</li>\\n<li>Feature: [Maybe types] Add MakeMaybe(...) 48d7b53d9702b0c7a060e69ea10fea8fb48d814d</li>\\n<li>Feature: new: allow utf16 string with length 66ac6e65c8ab9394ef588adfc59131b3b9d8347b</li>\\n<li>Feature: Introduce SetCallHandler and SetCallAsFunctionHandler 7764a9a115d60ba10dc24d86feb0fbc9b4f75537</li>\\n<li>Bugfix: Enable creating Locals from Globals under Node 0.10. 9bf9b8b190821af889790fdc18ace57257e4f9ff</li>\\n<li>Bugfix: Fix issue #462 where PropertyCallbackInfo data is not stored safely. 55f50adedd543098526c7b9f4fffd607d3f9861f</li>\\n</ul>\\n<h3>2.0.9 Sep 8 2015</h3>\\n<ul>\\n<li>Bugfix: EscapableHandleScope in Nan::NewBuffer for Node 0.8 and 0.10 b1654d7</li>\\n</ul>\\n<h3>2.0.8 Aug 28 2015</h3>\\n<ul>\\n<li>Work around duplicate linking bug in clang 11902da</li>\\n</ul>\\n<h3>2.0.7 Aug 26 2015</h3>\\n<ul>\\n<li>Build: Repackage</li>\\n</ul>\\n<h3>2.0.6 Aug 26 2015</h3>\\n<ul>\\n<li>Bugfix: Properly handle null callback in FunctionTemplate factory 6e99cb1</li>\\n<li>Bugfix: Remove unused static std::map instances 525bddc</li>\\n<li>Bugfix: Make better use of maybe versions of APIs bfba85b</li>\\n<li>Bugfix: Fix shadowing issues with handle in ObjectWrap 0a9072d</li>\\n</ul>\\n<h3>2.0.5 Aug 10 2015</h3>\\n<ul>\\n<li>Bugfix: Reimplement weak callback in ObjectWrap 98d38c1</li>\\n<li>Bugfix: Make sure callback classes are not assignable, copyable or movable 81f9b1d</li>\\n</ul>\\n<h3>2.0.4 Aug 6 2015</h3>\\n<ul>\\n<li>Build: Repackage</li>\\n</ul>\\n<h3>2.0.3 Aug 6 2015</h3>\\n<ul>\\n<li>Bugfix: Don't use clang++ / g++ syntax extension. 231450e</li>\\n</ul>\\n<h3>2.0.2 Aug 6 2015</h3>\\n<ul>\\n<li>Build: Repackage</li>\\n</ul>\\n<h3>2.0.1 Aug 6 2015</h3>\\n<ul>\\n<li>Bugfix: Add workaround for missing REPLACE<em>INVALID</em>UTF8 60d6687</li>\\n<li>Bugfix: Reimplement ObjectWrap from scratch to prevent memory leaks 6484601</li>\\n<li>Bugfix: Fix Persistent leak in FunctionCallbackInfo and PropertyCallbackInfo 641ef5f</li>\\n<li>Bugfix: Add missing overload for Nan::NewInstance that takes argc/argv 29450ed</li>\\n</ul>\\n<h3>2.0.0 Jul 31 2015</h3>\\n<ul>\\n<li>Change: Renamed identifiers with leading underscores\\tb5932b4</li>\\n<li>Change: Replaced NanObjectWrapHandle with class NanObjectWrap\\t464f1e1</li>\\n<li>Change: Replace NanScope and NanEscpableScope macros with classes\\t47751c4</li>\\n<li>Change: Rename NanNewBufferHandle to NanNewBuffer\\t6745f99</li>\\n<li>Change: Rename NanBufferUse to NanNewBuffer\\t3e8b0a5</li>\\n<li>Change: Rename NanNewBuffer to NanCopyBuffer\\td6af78d</li>\\n<li>Change: Remove Nan prefix from all names\\t72d1f67</li>\\n<li>Change: Update Buffer API for new upstream changes\\td5d3291</li>\\n<li>Change: Rename Scope and EscapableScope to HandleScope and EscapableHandleScope\\t21a7a6a</li>\\n<li>Change: Get rid of Handles\\t e6c0daf</li>\\n<li>Feature: Support io.js 3 with V8 4.4</li>\\n<li>Feature: Introduce NanPersistent\\t7fed696</li>\\n<li>Feature: Introduce NanGlobal\\t4408da1</li>\\n<li>Feature: Added NanTryCatch\\t10f1ca4</li>\\n<li>Feature: Update for V8 v4.3\\t4b6404a</li>\\n<li>Feature: Introduce NanNewOneByteString\\tc543d32</li>\\n<li>Feature: Introduce namespace Nan\\t67ed1b1</li>\\n<li>Removal: Remove NanLocker and NanUnlocker\\tdd6e401</li>\\n<li>Removal: Remove string converters, except NanUtf8String, which now follows the node implementation b5d00a9</li>\\n<li>Removal: Remove NanReturn* macros\\td90a25c</li>\\n<li>Removal: Remove HasInstance\\te8f84fe</li>\\n</ul>\\n<h3>1.9.0 Jul 31 2015</h3>\\n<ul>\\n<li>Feature: Added <code>NanFatalException</code> 81d4a2c</li>\\n<li>Feature: Added more error types 4265f06</li>\\n<li>Feature: Added dereference and function call operators to NanCallback c4b2ed0</li>\\n<li>Feature: Added indexed GetFromPersistent and SaveToPersistent edd510c</li>\\n<li>Feature: Added more overloads of SaveToPersistent and GetFromPersistent 8b1cef6</li>\\n<li>Feature: Added NanErrnoException dd87d9e</li>\\n<li>Correctness: Prevent assign, copy, and move for classes that do not support it 1f55c59, 4b808cb, c96d9b2, fba4a29, 3357130</li>\\n<li>Deprecation: Deprecate <code>NanGetPointerSafe</code> and <code>NanSetPointerSafe</code> 81d4a2c</li>\\n<li>Deprecation: Deprecate <code>NanBooleanOptionValue</code> and <code>NanUInt32OptionValue</code> 0ad254b</li>\\n</ul>\\n<h3>1.8.4 Apr 26 2015</h3>\\n<ul>\\n<li>Build: Repackage</li>\\n</ul>\\n<h3>1.8.3 Apr 26 2015</h3>\\n<ul>\\n<li>Bugfix: Include missing header 1af8648</li>\\n</ul>\\n<h3>1.8.2 Apr 23 2015</h3>\\n<ul>\\n<li>Build: Repackage</li>\\n</ul>\\n<h3>1.8.1 Apr 23 2015</h3>\\n<ul>\\n<li>Bugfix: NanObjectWrapHandle should take a pointer 155f1d3</li>\\n</ul>\\n<h3>1.8.0 Apr 23 2015</h3>\\n<ul>\\n<li>Feature: Allow primitives with NanReturnValue 2e4475e</li>\\n<li>Feature: Added comparison operators to NanCallback 55b075e</li>\\n<li>Feature: Backport thread local storage 15bb7fa</li>\\n<li>Removal: Remove support for signatures with arguments 8a2069d</li>\\n<li>Correcteness: Replaced NanObjectWrapHandle macro with function 0bc6d59</li>\\n</ul>\\n<h3>1.7.0 Feb 28 2015</h3>\\n<ul>\\n<li>Feature: Made NanCallback::Call accept optional target 8d54da7</li>\\n<li>Feature: Support atom-shell 0.21 0b7f1bb</li>\\n</ul>\\n<h3>1.6.2 Feb 6 2015</h3>\\n<ul>\\n<li>Bugfix: NanEncode: fix argument type for node::Encode on io.js 2be8639</li>\\n</ul>\\n<h3>1.6.1 Jan 23 2015</h3>\\n<ul>\\n<li>Build: version bump</li>\\n</ul>\\n<h3>1.5.3 Jan 23 2015</h3>\\n<ul>\\n<li>Build: repackage</li>\\n</ul>\\n<h3>1.6.0 Jan 23 2015</h3>\\n<ul>\\n<li>Deprecated <code>NanNewContextHandle</code> in favor of <code>NanNew&#x3C;Context></code> 49259af</li>\\n<li>Support utility functions moved in newer v8 versions (Node 0.11.15, io.js 1.0) a0aa179</li>\\n<li>Added <code>NanEncode</code>, <code>NanDecodeBytes</code> and <code>NanDecodeWrite</code> 75e6fb9</li>\\n</ul>\\n<h3>1.5.2 Jan 23 2015</h3>\\n<ul>\\n<li>Bugfix: Fix non-inline definition build error with clang++ 21d96a1, 60fadd4</li>\\n<li>Bugfix: Readded missing String constructors 18d828f</li>\\n<li>Bugfix: Add overload handling NanNew<FunctionTemplate>(..) 5ef813b</li>\\n<li>Bugfix: Fix uv<em>work</em>cb versioning 997e4ae</li>\\n<li>Bugfix: Add function factory and test 4eca89c</li>\\n<li>Bugfix: Add object template factory and test cdcb951</li>\\n<li>Correctness: Lifted an io.js related typedef c9490be</li>\\n<li>Correctness: Make explicit downcasts of String lengths 00074e6</li>\\n<li>Windows: Limit the scope of disabled warning C4530 83d7deb</li>\\n</ul>\\n<h3>1.5.1 Jan 15 2015</h3>\\n<ul>\\n<li>Build: version bump</li>\\n</ul>\\n<h3>1.4.3 Jan 15 2015</h3>\\n<ul>\\n<li>Build: version bump</li>\\n</ul>\\n<h3>1.4.2 Jan 15 2015</h3>\\n<ul>\\n<li>Feature: Support io.js 0dbc5e8</li>\\n</ul>\\n<h3>1.5.0 Jan 14 2015</h3>\\n<ul>\\n<li>Feature: Support io.js b003843</li>\\n<li>Correctness: Improved NanNew internals 9cd4f6a</li>\\n<li>Feature: Implement progress to NanAsyncWorker 8d6a160</li>\\n</ul>\\n<h3>1.4.1 Nov 8 2014</h3>\\n<ul>\\n<li>Bugfix: Handle DEBUG definition correctly</li>\\n<li>Bugfix: Accept int as Boolean</li>\\n</ul>\\n<h3>1.4.0 Nov 1 2014</h3>\\n<ul>\\n<li>Feature: Added NAN<em>GC</em>CALLBACK 6a5c245</li>\\n<li>Performance: Removed unnecessary local handle creation 18a7243, 41fe2f8</li>\\n<li>Correctness: Added constness to references in NanHasInstance 02c61cd</li>\\n<li>Warnings: Fixed spurious warnings from -Wundef and -Wshadow, 541b122, 99d8cb6</li>\\n<li>Windoze: Shut Visual Studio up when compiling 8d558c1</li>\\n<li>License: Switch to plain MIT from custom hacked MIT license 11de983</li>\\n<li>Build: Added test target to Makefile e232e46</li>\\n<li>Performance: Removed superfluous scope in NanAsyncWorker f4b7821</li>\\n<li>Sugar/Feature: Added NanReturnThis() and NanReturnHolder() shorthands 237a5ff, d697208</li>\\n<li>Feature: Added suitable overload of NanNew for v8::Integer::NewFromUnsigned b27b450</li>\\n</ul>\\n<h3>1.3.0 Aug 2 2014</h3>\\n<ul>\\n<li>Added NanNew&#x3C;v8::String, std::string>(std::string)</li>\\n<li>Added NanNew&#x3C;v8::String, std::string&#x26;>(std::string&#x26;)</li>\\n<li>Added NanAsciiString helper class</li>\\n<li>Added NanUtf8String helper class</li>\\n<li>Added NanUcs2String helper class</li>\\n<li>Deprecated NanRawString()</li>\\n<li>Deprecated NanCString()</li>\\n<li>Added NanGetIsolateData(v8::Isolate *isolate)</li>\\n<li>Added NanMakeCallback(v8::Handle&#x3C;v8::Object> target, v8::Handle&#x3C;v8::Function> func, int argc, v8::Handle&#x3C;v8::Value>* argv)</li>\\n<li>Added NanMakeCallback(v8::Handle&#x3C;v8::Object> target, v8::Handle&#x3C;v8::String> symbol, int argc, v8::Handle&#x3C;v8::Value>* argv)</li>\\n<li>Added NanMakeCallback(v8::Handle&#x3C;v8::Object> target, const char* method, int argc, v8::Handle&#x3C;v8::Value>* argv)</li>\\n<li>Added NanSetTemplate(v8::Handle&#x3C;v8::Template> templ, v8::Handle&#x3C;v8::String> name , v8::Handle&#x3C;v8::Data> value, v8::PropertyAttribute attributes)</li>\\n<li>Added NanSetPrototypeTemplate(v8::Local&#x3C;v8::FunctionTemplate> templ, v8::Handle&#x3C;v8::String> name, v8::Handle&#x3C;v8::Data> value, v8::PropertyAttribute attributes)</li>\\n<li>Added NanSetInstanceTemplate(v8::Local&#x3C;v8::FunctionTemplate> templ, const char *name, v8::Handle&#x3C;v8::Data> value)</li>\\n<li>Added NanSetInstanceTemplate(v8::Local&#x3C;v8::FunctionTemplate> templ, v8::Handle&#x3C;v8::String> name, v8::Handle&#x3C;v8::Data> value, v8::PropertyAttribute attributes)</li>\\n</ul>\\n<h3>1.2.0 Jun 5 2014</h3>\\n<ul>\\n<li>Add NanSetPrototypeTemplate</li>\\n<li>Changed NAN<em>WEAK</em>CALLBACK internals, switched _NanWeakCallbackData to class,\\nintroduced _NanWeakCallbackDispatcher</li>\\n<li>Removed -Wno-unused-local-typedefs from test builds</li>\\n<li>Made test builds Windows compatible ('Sleep()')</li>\\n</ul>\\n<h3>1.1.2 May 28 2014</h3>\\n<ul>\\n<li>Release to fix more stuff-ups in 1.1.1</li>\\n</ul>\\n<h3>1.1.1 May 28 2014</h3>\\n<ul>\\n<li>Release to fix version mismatch in nan.h and lack of changelog entry for 1.1.0</li>\\n</ul>\\n<h3>1.1.0 May 25 2014</h3>\\n<ul>\\n<li>Remove nan_isolate, use v8::Isolate::GetCurrent() internally instead</li>\\n<li>Additional explicit overloads for NanNew(): (char<em>,int), (uint8_t</em>[,int]),\\n(uint16_t<em>[,int), double, int, unsigned int, bool, v8::String::ExternalStringResource</em>,\\nv8::String::ExternalAsciiStringResource*</li>\\n<li>Deprecate NanSymbol()</li>\\n<li>Added SetErrorMessage() and ErrorMessage() to NanAsyncWorker</li>\\n</ul>\\n<h3>1.0.0 May 4 2014</h3>\\n<ul>\\n<li>Heavy API changes for V8 3.25 / Node 0.11.13</li>\\n<li>Use cpplint.py</li>\\n<li>Removed NanInitPersistent</li>\\n<li>Removed NanPersistentToLocal</li>\\n<li>Removed NanFromV8String</li>\\n<li>Removed NanMakeWeak</li>\\n<li>Removed NanNewLocal</li>\\n<li>Removed NAN<em>WEAK</em>CALLBACK_OBJECT</li>\\n<li>Removed NAN<em>WEAK</em>CALLBACK_DATA</li>\\n<li>Introduce NanNew, replaces NanNewLocal, NanPersistentToLocal, adds many overloaded typed versions</li>\\n<li>Introduce NanUndefined, NanNull, NanTrue and NanFalse</li>\\n<li>Introduce NanEscapableScope and NanEscapeScope</li>\\n<li>Introduce NanMakeWeakPersistent (requires a special callback to work on both old and new node)</li>\\n<li>Introduce NanMakeCallback for node::MakeCallback</li>\\n<li>Introduce NanSetTemplate</li>\\n<li>Introduce NanGetCurrentContext</li>\\n<li>Introduce NanCompileScript and NanRunScript</li>\\n<li>Introduce NanAdjustExternalMemory</li>\\n<li>Introduce NanAddGCEpilogueCallback, NanAddGCPrologueCallback, NanRemoveGCEpilogueCallback, NanRemoveGCPrologueCallback</li>\\n<li>Introduce NanGetHeapStatistics</li>\\n<li>Rename NanAsyncWorker#SavePersistent() to SaveToPersistent()</li>\\n</ul>\\n<h3>0.8.0 Jan 9 2014</h3>\\n<ul>\\n<li>NanDispose -> NanDisposePersistent, deprecate NanDispose</li>\\n<li>Extract <em>NAN</em><em><em>RETURN</em>TYPE, pull up NAN_</em>()</li>\\n</ul>\\n<h3>0.7.1 Jan 9 2014</h3>\\n<ul>\\n<li>Fixes to work against debug builds of Node</li>\\n<li>Safer NanPersistentToLocal (avoid reinterpret_cast)</li>\\n<li>Speed up common NanRawString case by only extracting flattened string when necessary</li>\\n</ul>\\n<h3>0.7.0 Dec 17 2013</h3>\\n<ul>\\n<li>New no-arg form of NanCallback() constructor.</li>\\n<li>NanCallback#Call takes Handle rather than Local</li>\\n<li>Removed deprecated NanCallback#Run method, use NanCallback#Call instead</li>\\n<li>Split off <em>NAN</em><em><em>ARGS</em>TYPE from <em>NAN</em></em>_ARGS</li>\\n<li>Restore (unofficial) Node 0.6 compatibility at NanCallback#Call()</li>\\n<li>Introduce NanRawString() for char* (or appropriate void*) from v8::String\\n(replacement for NanFromV8String)</li>\\n<li>Introduce NanCString() for null-terminated char* from v8::String</li>\\n</ul>\\n<h3>0.6.0 Nov 21 2013</h3>\\n<ul>\\n<li>Introduce NanNewLocal<T>(v8::Handle<T> value) for use in place of\\nv8::Local<T>::New(...) since v8 started requiring isolate in Node 0.11.9</li>\\n</ul>\\n<h3>0.5.2 Nov 16 2013</h3>\\n<ul>\\n<li>Convert SavePersistent and GetFromPersistent in NanAsyncWorker from protected and public</li>\\n</ul>\\n<h3>0.5.1 Nov 12 2013</h3>\\n<ul>\\n<li>Use node::MakeCallback() instead of direct v8::Function::Call()</li>\\n</ul>\\n<h3>0.5.0 Nov 11 2013</h3>\\n<ul>\\n<li>Added @TooTallNate as collaborator</li>\\n<li>New, much simpler, \\\"include_dirs\\\" for binding.gyp</li>\\n<li>Added full range of NAN<em>INDEX</em>* macros to match NAN<em>PROPERTY</em>* macros</li>\\n</ul>\\n<h3>0.4.4 Nov 2 2013</h3>\\n<ul>\\n<li>Isolate argument from v8::Persistent::MakeWeak removed for 0.11.8+</li>\\n</ul>\\n<h3>0.4.3 Nov 2 2013</h3>\\n<ul>\\n<li>Include node<em>object</em>wrap.h, removed from node.h for Node 0.11.8.</li>\\n</ul>\\n<h3>0.4.2 Nov 2 2013</h3>\\n<ul>\\n<li>Handle deprecation of v8::Persistent::Dispose(v8::Isolate* isolate)) for\\nNode 0.11.8 release.</li>\\n</ul>\\n<h3>0.4.1 Sep 16 2013</h3>\\n<ul>\\n<li>Added explicit <code>#include &#x3C;uv.h></code> as it was removed from node.h for v0.11.8</li>\\n</ul>\\n<h3>0.4.0 Sep 2 2013</h3>\\n<ul>\\n<li>Added NAN<em>INLINE and NAN</em>DEPRECATED and made use of them</li>\\n<li>Added NanError, NanTypeError and NanRangeError</li>\\n<li>Cleaned up code</li>\\n</ul>\\n<h3>0.3.2 Aug 30 2013</h3>\\n<ul>\\n<li>Fix missing scope declaration in GetFromPersistent() and SaveToPersistent\\nin NanAsyncWorker</li>\\n</ul>\\n<h3>0.3.1 Aug 20 2013</h3>\\n<ul>\\n<li>fix \\\"not all control paths return a value\\\" compile warning on some platforms</li>\\n</ul>\\n<h3>0.3.0 Aug 19 2013</h3>\\n<ul>\\n<li>Made NAN work with NPM</li>\\n<li>Lots of fixes to NanFromV8String, pulling in features from new Node core</li>\\n<li>Changed node::encoding to Nan::Encoding in NanFromV8String to unify the API</li>\\n<li>Added optional error number argument for NanThrowError()</li>\\n<li>Added NanInitPersistent()</li>\\n<li>Added NanReturnNull() and NanReturnEmptyString()</li>\\n<li>Added NanLocker and NanUnlocker</li>\\n<li>Added missing scopes</li>\\n<li>Made sure to clear disposed Persistent handles</li>\\n<li>Changed NanAsyncWorker to allocate error messages on the heap</li>\\n<li>Changed NanThrowError(Local<Value>) to NanThrowError(Handle<Value>)</li>\\n<li>Fixed leak in NanAsyncWorker when errmsg is used</li>\\n</ul>\\n<h3>0.2.2 Aug 5 2013</h3>\\n<ul>\\n<li>Fixed usage of undefined variable with node::BASE64 in NanFromV8String()</li>\\n</ul>\\n<h3>0.2.1 Aug 5 2013</h3>\\n<ul>\\n<li>Fixed 0.8 breakage, node::BUFFER encoding type not available in 0.8 for\\nNanFromV8String()</li>\\n</ul>\\n<h3>0.2.0 Aug 5 2013</h3>\\n<ul>\\n<li>Added NAN<em>PROPERTY</em>GETTER, NAN<em>PROPERTY</em>SETTER, NAN<em>PROPERTY</em>ENUMERATOR,\\nNAN<em>PROPERTY</em>DELETER, NAN<em>PROPERTY</em>QUERY</li>\\n<li>Extracted <em>NAN</em>METHOD<em>ARGS, _NAN</em>GETTER<em>ARGS, _NAN</em>SETTER<em>ARGS,\\n_NAN</em>PROPERTY<em>GETTER</em>ARGS, <em>NAN</em>PROPERTY<em>SETTER</em>ARGS,\\n<em>NAN</em>PROPERTY<em>ENUMERATOR</em>ARGS, <em>NAN</em>PROPERTY<em>DELETER</em>ARGS,\\n<em>NAN</em>PROPERTY<em>QUERY</em>ARGS</li>\\n<li>Added NanGetInternalFieldPointer, NanSetInternalFieldPointer</li>\\n<li>Added NAN<em>WEAK</em>CALLBACK, NAN<em>WEAK</em>CALLBACK<em>OBJECT,\\nNAN</em>WEAK<em>CALLBACK</em>DATA, NanMakeWeak</li>\\n<li>Renamed THROW<em>ERROR to _NAN</em>THROW_ERROR</li>\\n<li>Added NanNewBufferHandle(char<em>, size_t, node::smalloc::FreeCallback, void</em>)</li>\\n<li>Added NanBufferUse(char*, uint32_t)</li>\\n<li>Added NanNewContextHandle(v8::ExtensionConfiguration*,\\nv8::Handle&#x3C;v8::ObjectTemplate>, v8::Handle&#x3C;v8::Value>)</li>\\n<li>Fixed broken NanCallback#GetFunction()</li>\\n<li>Added optional encoding and size arguments to NanFromV8String()</li>\\n<li>Added NanGetPointerSafe() and NanSetPointerSafe()</li>\\n<li>Added initial test suite (to be expanded)</li>\\n<li>Allow NanUInt32OptionValue to convert any Number object</li>\\n</ul>\\n<h3>0.1.0 Jul 21 2013</h3>\\n<ul>\\n<li>Added <code>NAN_GETTER</code>, <code>NAN_SETTER</code></li>\\n<li>Added <code>NanThrowError</code> with single Local<Value> argument</li>\\n<li>Added <code>NanNewBufferHandle</code> with single uint32_t argument</li>\\n<li>Added <code>NanHasInstance(Persistent&#x3C;FunctionTemplate>&#x26;, Handle&#x3C;Value>)</code></li>\\n<li>Added <code>Local&#x3C;Function> NanCallback#GetFunction()</code></li>\\n<li>Added <code>NanCallback#Call(int, Local&#x3C;Value>[])</code></li>\\n<li>Deprecated <code>NanCallback#Run(int, Local&#x3C;Value>[])</code> in favour of Call</li>\\n</ul>\",\"docPath\":\"argo-ci/node_modules/nan/changelog\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-nan-changelog-html.json\n// module id = 2902\n// module chunks = 247183432119909"],"sourceRoot":""}