webpackJsonp([0x70d110485da4],{2061:function(e,n){e.exports={pathContext:{docHtml:"<h1>async-each</h1>\n<p>No-bullshit, ultra-simple, 35-lines-of-code async parallel forEach function for JavaScript.</p>\n<p>We don't need junky 30K async libs. Really.</p>\n<p>For browsers and node.js.</p>\n<h2>Installation</h2>\n<ul>\n<li>Just include async-each before your scripts.</li>\n<li><code>npm install async-each</code> if you’re using node.js.</li>\n<li><code>bower install async-each</code> if you’re using <a href=\"http://bower.io\">Bower</a>.</li>\n</ul>\n<h2>Usage</h2>\n<ul>\n<li><code>each(array, iterator, callback);</code> — <code>Array</code>, <code>Function</code>, <code>(optional) Function</code></li>\n<li><code>iterator(item, next)</code> receives current item and a callback that will mark the item as done. <code>next</code> callback receives optional <code>error, transformedItem</code> arguments.</li>\n<li><code>callback(error, transformedArray)</code> optionally receives first error and transformed result <code>Array</code>.</li>\n</ul>\n<p>Node.js:</p>\n<pre><code class=\"language-javascript\">var each = require('async-each');\neach(['a.js', 'b.js', 'c.js'], fs.readFile, function(error, contents) {\n  if (error) console.error(error);\n  console.log('Contents for a, b and c:', contents);\n});\n</code></pre>\n<p>Browser:</p>\n<pre><code class=\"language-javascript\">window.asyncEach(list, fn, callback);\n</code></pre>\n<h2>License</h2>\n<p><a href=\"https://raw.githubusercontent.com/paulmillr/mit/master/README.md\">The MIT License</a></p>",docPath:"argo-ci/node_modules/async-each/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-async-each-readme-html-5153ac71fa5b85bdf60f.js.map