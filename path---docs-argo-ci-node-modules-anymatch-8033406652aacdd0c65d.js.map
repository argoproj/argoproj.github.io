{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-anymatch-8033406652aacdd0c65d.js","webpack:///./.cache/json/docs-argo-ci-node-modules-anymatch.json"],"names":["webpackJsonp","2022","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,q1JAA2jIC,QAAA,uCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-anymatch-8033406652aacdd0c65d.js","sourcesContent":["webpackJsonp([18895885520941],{\n\n/***/ 2022:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>anymatch <a href=\\\"https://travis-ci.org/es128/anymatch\\\"><img src=\\\"https://travis-ci.org/es128/anymatch.svg?branch=master\\\" alt=\\\"Build Status\\\"></a> <a href=\\\"https://coveralls.io/r/es128/anymatch?branch=master\\\"><img src=\\\"https://img.shields.io/coveralls/es128/anymatch.svg?branch=master\\\" alt=\\\"Coverage Status\\\"></a></h1>\\n<p>Javascript module to match a string against a regular expression, glob, string,\\nor function that takes the string as an argument and returns a truthy or falsy\\nvalue. The matcher can also be an array of any or all of these. Useful for\\nallowing a very flexible user-defined config to define things like file paths.</p>\\n<p><a href=\\\"https://nodei.co/npm/anymatch/\\\"><img src=\\\"https://nodei.co/npm/anymatch.png?downloads=true&#x26;downloadRank=true&#x26;stars=true\\\" alt=\\\"NPM\\\"></a>\\n<a href=\\\"https://nodei.co/npm-dl/anymatch/\\\"><img src=\\\"https://nodei.co/npm-dl/anymatch.png?height=3&#x26;months=9\\\" alt=\\\"NPM\\\"></a></p>\\n<h2>Usage</h2>\\n<pre><code class=\\\"language-sh\\\">npm install anymatch --save\\n</code></pre>\\n<h4>anymatch (matchers, testString, [returnIndex], [startIndex], [endIndex])</h4>\\n<ul>\\n<li><strong>matchers</strong>: (<em>Array|String|RegExp|Function</em>)\\nString to be directly matched, string with glob patterns, regular expression\\ntest, function that takes the testString as an argument and returns a truthy\\nvalue if it should be matched, or an array of any number and mix of these types.</li>\\n<li><strong>testString</strong>: (<em>String|Array</em>) The string to test against the matchers. If\\npassed as an array, the first element of the array will be used as the\\n<code>testString</code> for non-function matchers, while the entire array will be applied\\nas the arguments for function matchers.</li>\\n<li><strong>returnIndex</strong>: (<em>Boolean [optional]</em>) If true, return the array index of\\nthe first matcher that that testString matched, or -1 if no match, instead of a\\nboolean result.</li>\\n<li><strong>startIndex, endIndex</strong>: (<em>Integer [optional]</em>) Can be used to define a\\nsubset out of the array of provided matchers to test against. Can be useful\\nwith bound matcher functions (see below). When used with <code>returnIndex = true</code>\\npreserves original indexing. Behaves the same as <code>Array.prototype.slice</code> (i.e.\\nincludes array members up to, but not including endIndex).</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">var anymatch = require('anymatch');\\n\\nvar matchers = [\\n    'path/to/file.js',\\n    'path/anyjs/**/*.js',\\n    /foo\\\\.js$/,\\n    function (string) {\\n        return string.indexOf('bar') !== -1 &#x26;&#x26; string.length > 10\\n    }\\n];\\n\\nanymatch(matchers, 'path/to/file.js'); // true\\nanymatch(matchers, 'path/anyjs/baz.js'); // true\\nanymatch(matchers, 'path/to/foo.js'); // true\\nanymatch(matchers, 'path/to/bar.js'); // true\\nanymatch(matchers, 'bar.js'); // false\\n\\n// returnIndex = true\\nanymatch(matchers, 'foo.js', true); // 2\\nanymatch(matchers, 'path/anyjs/foo.js', true); // 1\\n\\n// skip matchers\\nanymatch(matchers, 'path/to/file.js', false, 1); // false\\nanymatch(matchers, 'path/anyjs/foo.js', true, 2, 3); // 2\\nanymatch(matchers, 'path/to/bar.js', true, 0, 3); // -1\\n\\n// using globs to match directories and their children\\nanymatch('node_modules', 'node_modules'); // true\\nanymatch('node_modules', 'node_modules/somelib/index.js'); // false\\nanymatch('node_modules/**', 'node_modules/somelib/index.js'); // true\\nanymatch('node_modules/**', '/absolute/path/to/node_modules/somelib/index.js'); // false\\nanymatch('**/node_modules/**', '/absolute/path/to/node_modules/somelib/index.js'); // true\\n</code></pre>\\n<h4>anymatch (matchers)</h4>\\n<p>You can also pass in only your matcher(s) to get a curried function that has\\nalready been bound to the provided matching criteria. This can be used as an\\n<code>Array.prototype.filter</code> callback.</p>\\n<pre><code class=\\\"language-js\\\">var matcher = anymatch(matchers);\\n\\nmatcher('path/to/file.js'); // true\\nmatcher('path/anyjs/baz.js', true); // 1\\nmatcher('path/anyjs/baz.js', true, 2); // -1\\n\\n['foo.js', 'bar.js'].filter(matcher); // ['foo.js']\\n</code></pre>\\n<h2>Change Log</h2>\\n<p><a href=\\\"https://github.com/es128/anymatch/releases\\\">See release notes page on GitHub</a></p>\\n<p>NOTE: As of v1.2.0, anymatch uses <a href=\\\"https://github.com/jonschlinkert/micromatch\\\">micromatch</a>\\nfor glob pattern matching. The glob matching behavior should be functionally\\nequivalent to the commonly used <a href=\\\"https://github.com/isaacs/minimatch\\\">minimatch</a>\\nlibrary (aside from some fixed bugs and greater performance), so a major\\nversion bump wasn't merited. Issues with glob pattern matching should be\\nreported directly to the <a href=\\\"https://github.com/jonschlinkert/micromatch/issues\\\">micromatch issue tracker</a>.</p>\\n<h2>License</h2>\\n<p><a href=\\\"https://raw.github.com/es128/anymatch/master/LICENSE\\\">ISC</a></p>\",\"docPath\":\"argo-ci/node_modules/anymatch/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-anymatch-8033406652aacdd0c65d.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>anymatch <a href=\\\"https://travis-ci.org/es128/anymatch\\\"><img src=\\\"https://travis-ci.org/es128/anymatch.svg?branch=master\\\" alt=\\\"Build Status\\\"></a> <a href=\\\"https://coveralls.io/r/es128/anymatch?branch=master\\\"><img src=\\\"https://img.shields.io/coveralls/es128/anymatch.svg?branch=master\\\" alt=\\\"Coverage Status\\\"></a></h1>\\n<p>Javascript module to match a string against a regular expression, glob, string,\\nor function that takes the string as an argument and returns a truthy or falsy\\nvalue. The matcher can also be an array of any or all of these. Useful for\\nallowing a very flexible user-defined config to define things like file paths.</p>\\n<p><a href=\\\"https://nodei.co/npm/anymatch/\\\"><img src=\\\"https://nodei.co/npm/anymatch.png?downloads=true&#x26;downloadRank=true&#x26;stars=true\\\" alt=\\\"NPM\\\"></a>\\n<a href=\\\"https://nodei.co/npm-dl/anymatch/\\\"><img src=\\\"https://nodei.co/npm-dl/anymatch.png?height=3&#x26;months=9\\\" alt=\\\"NPM\\\"></a></p>\\n<h2>Usage</h2>\\n<pre><code class=\\\"language-sh\\\">npm install anymatch --save\\n</code></pre>\\n<h4>anymatch (matchers, testString, [returnIndex], [startIndex], [endIndex])</h4>\\n<ul>\\n<li><strong>matchers</strong>: (<em>Array|String|RegExp|Function</em>)\\nString to be directly matched, string with glob patterns, regular expression\\ntest, function that takes the testString as an argument and returns a truthy\\nvalue if it should be matched, or an array of any number and mix of these types.</li>\\n<li><strong>testString</strong>: (<em>String|Array</em>) The string to test against the matchers. If\\npassed as an array, the first element of the array will be used as the\\n<code>testString</code> for non-function matchers, while the entire array will be applied\\nas the arguments for function matchers.</li>\\n<li><strong>returnIndex</strong>: (<em>Boolean [optional]</em>) If true, return the array index of\\nthe first matcher that that testString matched, or -1 if no match, instead of a\\nboolean result.</li>\\n<li><strong>startIndex, endIndex</strong>: (<em>Integer [optional]</em>) Can be used to define a\\nsubset out of the array of provided matchers to test against. Can be useful\\nwith bound matcher functions (see below). When used with <code>returnIndex = true</code>\\npreserves original indexing. Behaves the same as <code>Array.prototype.slice</code> (i.e.\\nincludes array members up to, but not including endIndex).</li>\\n</ul>\\n<pre><code class=\\\"language-js\\\">var anymatch = require('anymatch');\\n\\nvar matchers = [\\n    'path/to/file.js',\\n    'path/anyjs/**/*.js',\\n    /foo\\\\.js$/,\\n    function (string) {\\n        return string.indexOf('bar') !== -1 &#x26;&#x26; string.length > 10\\n    }\\n];\\n\\nanymatch(matchers, 'path/to/file.js'); // true\\nanymatch(matchers, 'path/anyjs/baz.js'); // true\\nanymatch(matchers, 'path/to/foo.js'); // true\\nanymatch(matchers, 'path/to/bar.js'); // true\\nanymatch(matchers, 'bar.js'); // false\\n\\n// returnIndex = true\\nanymatch(matchers, 'foo.js', true); // 2\\nanymatch(matchers, 'path/anyjs/foo.js', true); // 1\\n\\n// skip matchers\\nanymatch(matchers, 'path/to/file.js', false, 1); // false\\nanymatch(matchers, 'path/anyjs/foo.js', true, 2, 3); // 2\\nanymatch(matchers, 'path/to/bar.js', true, 0, 3); // -1\\n\\n// using globs to match directories and their children\\nanymatch('node_modules', 'node_modules'); // true\\nanymatch('node_modules', 'node_modules/somelib/index.js'); // false\\nanymatch('node_modules/**', 'node_modules/somelib/index.js'); // true\\nanymatch('node_modules/**', '/absolute/path/to/node_modules/somelib/index.js'); // false\\nanymatch('**/node_modules/**', '/absolute/path/to/node_modules/somelib/index.js'); // true\\n</code></pre>\\n<h4>anymatch (matchers)</h4>\\n<p>You can also pass in only your matcher(s) to get a curried function that has\\nalready been bound to the provided matching criteria. This can be used as an\\n<code>Array.prototype.filter</code> callback.</p>\\n<pre><code class=\\\"language-js\\\">var matcher = anymatch(matchers);\\n\\nmatcher('path/to/file.js'); // true\\nmatcher('path/anyjs/baz.js', true); // 1\\nmatcher('path/anyjs/baz.js', true, 2); // -1\\n\\n['foo.js', 'bar.js'].filter(matcher); // ['foo.js']\\n</code></pre>\\n<h2>Change Log</h2>\\n<p><a href=\\\"https://github.com/es128/anymatch/releases\\\">See release notes page on GitHub</a></p>\\n<p>NOTE: As of v1.2.0, anymatch uses <a href=\\\"https://github.com/jonschlinkert/micromatch\\\">micromatch</a>\\nfor glob pattern matching. The glob matching behavior should be functionally\\nequivalent to the commonly used <a href=\\\"https://github.com/isaacs/minimatch\\\">minimatch</a>\\nlibrary (aside from some fixed bugs and greater performance), so a major\\nversion bump wasn't merited. Issues with glob pattern matching should be\\nreported directly to the <a href=\\\"https://github.com/jonschlinkert/micromatch/issues\\\">micromatch issue tracker</a>.</p>\\n<h2>License</h2>\\n<p><a href=\\\"https://raw.github.com/es128/anymatch/master/LICENSE\\\">ISC</a></p>\",\"docPath\":\"argo-ci/node_modules/anymatch/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-anymatch.json\n// module id = 2022\n// module chunks = 18895885520941"],"sourceRoot":""}