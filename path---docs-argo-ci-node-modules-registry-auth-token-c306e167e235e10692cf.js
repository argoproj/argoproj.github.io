webpackJsonp([0xe1f504672b4b],{3097:function(e,t){e.exports={pathContext:{docHtml:"<h1>registry-auth-token</h1>\n<p><a href=\"http://browsenpm.org/package/registry-auth-token\"><img src=\"http://img.shields.io/npm/v/registry-auth-token.svg?style=flat-square\" alt=\"npm version\"></a><a href=\"https://travis-ci.org/rexxars/registry-auth-token\"><img src=\"http://img.shields.io/travis/rexxars/registry-auth-token/master.svg?style=flat-square\" alt=\"Build Status\"></a></p>\n<p>Get the auth token set for an npm registry from <code>.npmrc</code>. Also allows fetching the configured registry URL for a given npm scope.</p>\n<h2>Installing</h2>\n<pre><code>npm install --save registry-auth-token\n</code></pre>\n<h2>Usage</h2>\n<p>Returns an object containing <code>token</code> and <code>type</code>, or <code>undefined</code> if no token can be found. <code>type</code> can be either <code>Bearer</code> or <code>Basic</code>.</p>\n<pre><code class=\"language-js\">var getAuthToken = require('registry-auth-token')\nvar getRegistryUrl = require('registry-auth-token/registry-url')\n\n// Get auth token and type for default `registry` set in `.npmrc`\nconsole.log(getAuthToken()) // {token: 'someToken', type: 'Bearer'}\n\n// Get auth token for a specific registry URL\nconsole.log(getAuthToken('//registry.foo.bar'))\n\n// Find the registry auth token for a given URL (with deep path):\n// If registry is at `//some.host/registry`\n// URL passed is `//some.host/registry/deep/path`\n// Will find token the closest matching path; `//some.host/registry`\nconsole.log(getAuthToken('//some.host/registry/deep/path', {recursive: true}))\n\n// Find the configured registry url for scope `@foobar`.\n// Falls back to the global registry if not defined.\nconsole.log(getRegistryUrl('@foobar'))\n\n// Use the npm config that is passed in\nconsole.log(getRegistryUrl('http://registry.foobar.eu/', {\n  npmrc: {\n    'registry': 'http://registry.foobar.eu/',\n    '//registry.foobar.eu/:_authToken': 'qar'\n  }\n}))\n</code></pre>\n<h2>Return value</h2>\n<pre><code class=\"language-js\">// If auth info can be found:\n{token: 'someToken', type: 'Bearer'}\n\n// Or:\n{token: 'someOtherToken', type: 'Basic'}\n\n// Or, if nothing is found:\nundefined\n</code></pre>\n<h2>Security</h2>\n<p>Please be careful when using this. Leaking your auth token is dangerous.</p>\n<h2>License</h2>\n<p>MIT-licensed. See LICENSE.</p>",docPath:"argo-ci/node_modules/registry-auth-token/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-registry-auth-token-c306e167e235e10692cf.js.map