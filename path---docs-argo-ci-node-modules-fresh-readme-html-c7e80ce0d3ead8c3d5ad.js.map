{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-fresh-readme-html-c7e80ce0d3ead8c3d5ad.js","webpack:///./.cache/json/docs-argo-ci-node-modules-fresh-readme-html.json"],"names":["webpackJsonp","2355","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,+iHAAk/GC,QAAA,oCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-fresh-readme-html-c7e80ce0d3ead8c3d5ad.js","sourcesContent":["webpackJsonp([87325021575061],{\n\n/***/ 2355:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>fresh</h1>\\n<p><a href=\\\"https://npmjs.org/package/fresh\\\"><img src=\\\"https://img.shields.io/npm/v/fresh.svg\\\" alt=\\\"NPM Version\\\"></a>\\n<a href=\\\"https://npmjs.org/package/fresh\\\"><img src=\\\"https://img.shields.io/npm/dm/fresh.svg\\\" alt=\\\"NPM Downloads\\\"></a>\\n<a href=\\\"https://nodejs.org/en/\\\"><img src=\\\"https://img.shields.io/node/v/fresh.svg\\\" alt=\\\"Node.js Version\\\"></a>\\n<a href=\\\"https://travis-ci.org/jshttp/fresh\\\"><img src=\\\"https://img.shields.io/travis/jshttp/fresh/master.svg\\\" alt=\\\"Build Status\\\"></a>\\n<a href=\\\"https://coveralls.io/r/jshttp/fresh?branch=master\\\"><img src=\\\"https://img.shields.io/coveralls/jshttp/fresh/master.svg\\\" alt=\\\"Test Coverage\\\"></a></p>\\n<p>HTTP response freshness testing</p>\\n<h2>Installation</h2>\\n<p>This is a <a href=\\\"https://nodejs.org/en/\\\">Node.js</a> module available through the\\n<a href=\\\"https://www.npmjs.com/\\\">npm registry</a>. Installation is done using the\\n<a href=\\\"https://docs.npmjs.com/getting-started/installing-npm-packages-locally\\\"><code>npm install</code> command</a>:</p>\\n<pre><code>$ npm install fresh\\n</code></pre>\\n<h2>API</h2>\\n<!-- eslint-disable no-unused-vars -->\\n<pre><code class=\\\"language-js\\\">var fresh = require('fresh')\\n</code></pre>\\n<h3>fresh(reqHeaders, resHeaders)</h3>\\n<p>Check freshness of the response using request and response headers.</p>\\n<p>When the response is still \\\"fresh\\\" in the client's cache <code>true</code> is\\nreturned, otherwise <code>false</code> is returned to indicate that the client\\ncache is now stale and the full response should be sent.</p>\\n<p>When a client sends the <code>Cache-Control: no-cache</code> request header to\\nindicate an end-to-end reload request, this module will return <code>false</code>\\nto make handling these requests transparent.</p>\\n<h2>Known Issues</h2>\\n<p>This module is designed to only follow the HTTP specifications, not\\nto work-around all kinda of client bugs (especially since this module\\ntypically does not recieve enough information to understand what the\\nclient actually is).</p>\\n<p>There is a known issue that in certain versions of Safari, Safari\\nwill incorrectly make a request that allows this module to validate\\nfreshness of the resource even when Safari does not have a\\nrepresentation of the resource in the cache. The module\\n<a href=\\\"https://www.npmjs.com/package/jumanji\\\">jumanji</a> can be used in\\nan Express application to work-around this issue and also provides\\nlinks to further reading on this Safari bug.</p>\\n<h2>Example</h2>\\n<h3>API usage</h3>\\n<!-- eslint-disable no-redeclare, no-undef -->\\n<pre><code class=\\\"language-js\\\">var reqHeaders = { 'if-none-match': '\\\"foo\\\"' }\\nvar resHeaders = { 'etag': '\\\"bar\\\"' }\\nfresh(reqHeaders, resHeaders)\\n// => false\\n\\nvar reqHeaders = { 'if-none-match': '\\\"foo\\\"' }\\nvar resHeaders = { 'etag': '\\\"foo\\\"' }\\nfresh(reqHeaders, resHeaders)\\n// => true\\n</code></pre>\\n<h3>Using with Node.js http server</h3>\\n<pre><code class=\\\"language-js\\\">var fresh = require('fresh')\\nvar http = require('http')\\n\\nvar server = http.createServer(function (req, res) {\\n  // perform server logic\\n  // ... including adding ETag / Last-Modified response headers\\n\\n  if (isFresh(req, res)) {\\n    // client has a fresh copy of resource\\n    res.statusCode = 304\\n    res.end()\\n    return\\n  }\\n\\n  // send the resource\\n  res.statusCode = 200\\n  res.end('hello, world!')\\n})\\n\\nfunction isFresh (req, res) {\\n  return fresh(req.headers, {\\n    'etag': res.getHeader('ETag'),\\n    'last-modified': res.getHeader('Last-Modified')\\n  })\\n}\\n\\nserver.listen(3000)\\n</code></pre>\\n<h2>License</h2>\\n<p><a href=\\\"LICENSE\\\">MIT</a></p>\",\"docPath\":\"argo-ci/node_modules/fresh/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-fresh-readme-html-c7e80ce0d3ead8c3d5ad.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>fresh</h1>\\n<p><a href=\\\"https://npmjs.org/package/fresh\\\"><img src=\\\"https://img.shields.io/npm/v/fresh.svg\\\" alt=\\\"NPM Version\\\"></a>\\n<a href=\\\"https://npmjs.org/package/fresh\\\"><img src=\\\"https://img.shields.io/npm/dm/fresh.svg\\\" alt=\\\"NPM Downloads\\\"></a>\\n<a href=\\\"https://nodejs.org/en/\\\"><img src=\\\"https://img.shields.io/node/v/fresh.svg\\\" alt=\\\"Node.js Version\\\"></a>\\n<a href=\\\"https://travis-ci.org/jshttp/fresh\\\"><img src=\\\"https://img.shields.io/travis/jshttp/fresh/master.svg\\\" alt=\\\"Build Status\\\"></a>\\n<a href=\\\"https://coveralls.io/r/jshttp/fresh?branch=master\\\"><img src=\\\"https://img.shields.io/coveralls/jshttp/fresh/master.svg\\\" alt=\\\"Test Coverage\\\"></a></p>\\n<p>HTTP response freshness testing</p>\\n<h2>Installation</h2>\\n<p>This is a <a href=\\\"https://nodejs.org/en/\\\">Node.js</a> module available through the\\n<a href=\\\"https://www.npmjs.com/\\\">npm registry</a>. Installation is done using the\\n<a href=\\\"https://docs.npmjs.com/getting-started/installing-npm-packages-locally\\\"><code>npm install</code> command</a>:</p>\\n<pre><code>$ npm install fresh\\n</code></pre>\\n<h2>API</h2>\\n<!-- eslint-disable no-unused-vars -->\\n<pre><code class=\\\"language-js\\\">var fresh = require('fresh')\\n</code></pre>\\n<h3>fresh(reqHeaders, resHeaders)</h3>\\n<p>Check freshness of the response using request and response headers.</p>\\n<p>When the response is still \\\"fresh\\\" in the client's cache <code>true</code> is\\nreturned, otherwise <code>false</code> is returned to indicate that the client\\ncache is now stale and the full response should be sent.</p>\\n<p>When a client sends the <code>Cache-Control: no-cache</code> request header to\\nindicate an end-to-end reload request, this module will return <code>false</code>\\nto make handling these requests transparent.</p>\\n<h2>Known Issues</h2>\\n<p>This module is designed to only follow the HTTP specifications, not\\nto work-around all kinda of client bugs (especially since this module\\ntypically does not recieve enough information to understand what the\\nclient actually is).</p>\\n<p>There is a known issue that in certain versions of Safari, Safari\\nwill incorrectly make a request that allows this module to validate\\nfreshness of the resource even when Safari does not have a\\nrepresentation of the resource in the cache. The module\\n<a href=\\\"https://www.npmjs.com/package/jumanji\\\">jumanji</a> can be used in\\nan Express application to work-around this issue and also provides\\nlinks to further reading on this Safari bug.</p>\\n<h2>Example</h2>\\n<h3>API usage</h3>\\n<!-- eslint-disable no-redeclare, no-undef -->\\n<pre><code class=\\\"language-js\\\">var reqHeaders = { 'if-none-match': '\\\"foo\\\"' }\\nvar resHeaders = { 'etag': '\\\"bar\\\"' }\\nfresh(reqHeaders, resHeaders)\\n// => false\\n\\nvar reqHeaders = { 'if-none-match': '\\\"foo\\\"' }\\nvar resHeaders = { 'etag': '\\\"foo\\\"' }\\nfresh(reqHeaders, resHeaders)\\n// => true\\n</code></pre>\\n<h3>Using with Node.js http server</h3>\\n<pre><code class=\\\"language-js\\\">var fresh = require('fresh')\\nvar http = require('http')\\n\\nvar server = http.createServer(function (req, res) {\\n  // perform server logic\\n  // ... including adding ETag / Last-Modified response headers\\n\\n  if (isFresh(req, res)) {\\n    // client has a fresh copy of resource\\n    res.statusCode = 304\\n    res.end()\\n    return\\n  }\\n\\n  // send the resource\\n  res.statusCode = 200\\n  res.end('hello, world!')\\n})\\n\\nfunction isFresh (req, res) {\\n  return fresh(req.headers, {\\n    'etag': res.getHeader('ETag'),\\n    'last-modified': res.getHeader('Last-Modified')\\n  })\\n}\\n\\nserver.listen(3000)\\n</code></pre>\\n<h2>License</h2>\\n<p><a href=\\\"LICENSE\\\">MIT</a></p>\",\"docPath\":\"argo-ci/node_modules/fresh/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-fresh-readme-html.json\n// module id = 2355\n// module chunks = 87325021575061"],"sourceRoot":""}