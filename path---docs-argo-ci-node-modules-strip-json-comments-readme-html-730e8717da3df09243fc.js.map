{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-strip-json-comments-readme-html-730e8717da3df09243fc.js","webpack:///./.cache/json/docs-argo-ci-node-modules-strip-json-comments-readme-html.json"],"names":["webpackJsonp","3207","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,y3DAA8qCC,QAAA,kDAAAC,KAAA","file":"path---docs-argo-ci-node-modules-strip-json-comments-readme-html-730e8717da3df09243fc.js","sourcesContent":["webpackJsonp([173411409499391],{\n\n/***/ 3207:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>strip-json-comments <a href=\\\"https://travis-ci.org/sindresorhus/strip-json-comments\\\"><img src=\\\"https://travis-ci.org/sindresorhus/strip-json-comments.svg?branch=master\\\" alt=\\\"Build Status\\\"></a></h1>\\n<blockquote>\\n<p>Strip comments from JSON. Lets you use comments in your JSON files!</p>\\n</blockquote>\\n<p>This is now possible:</p>\\n<pre><code class=\\\"language-js\\\">{\\n    // rainbows\\n    \\\"unicorn\\\": /* ❤ */ \\\"cake\\\"\\n}\\n</code></pre>\\n<p>It will replace single-line comments <code>//</code> and multi-line comments <code>/**/</code> with whitespace. This allows JSON error positions to remain as close as possible to the original source.</p>\\n<p>Also available as a <a href=\\\"https://github.com/sindresorhus/gulp-strip-json-comments\\\">gulp</a>/<a href=\\\"https://github.com/sindresorhus/grunt-strip-json-comments\\\">grunt</a>/<a href=\\\"https://github.com/sindresorhus/broccoli-strip-json-comments\\\">broccoli</a> plugin.</p>\\n<h2>Install</h2>\\n<pre><code>$ npm install --save strip-json-comments\\n</code></pre>\\n<h2>Usage</h2>\\n<pre><code class=\\\"language-js\\\">const json = '{/*rainbows*/\\\"unicorn\\\":\\\"cake\\\"}';\\n\\nJSON.parse(stripJsonComments(json));\\n//=> {unicorn: 'cake'}\\n</code></pre>\\n<h2>API</h2>\\n<h3>stripJsonComments(input, [options])</h3>\\n<h4>input</h4>\\n<p>Type: <code>string</code></p>\\n<p>Accepts a string with JSON and returns a string without comments.</p>\\n<h4>options</h4>\\n<h5>whitespace</h5>\\n<p>Type: <code>boolean</code><br>\\nDefault: <code>true</code></p>\\n<p>Replace comments with whitespace instead of stripping them entirely.</p>\\n<h2>Related</h2>\\n<ul>\\n<li><a href=\\\"https://github.com/sindresorhus/strip-json-comments-cli\\\">strip-json-comments-cli</a> - CLI for this module</li>\\n<li><a href=\\\"https://github.com/sindresorhus/strip-css-comments\\\">strip-css-comments</a> - Strip comments from CSS</li>\\n</ul>\\n<h2>License</h2>\\n<p>MIT © <a href=\\\"http://sindresorhus.com\\\">Sindre Sorhus</a></p>\",\"docPath\":\"argo-ci/node_modules/strip-json-comments/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-strip-json-comments-readme-html-730e8717da3df09243fc.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>strip-json-comments <a href=\\\"https://travis-ci.org/sindresorhus/strip-json-comments\\\"><img src=\\\"https://travis-ci.org/sindresorhus/strip-json-comments.svg?branch=master\\\" alt=\\\"Build Status\\\"></a></h1>\\n<blockquote>\\n<p>Strip comments from JSON. Lets you use comments in your JSON files!</p>\\n</blockquote>\\n<p>This is now possible:</p>\\n<pre><code class=\\\"language-js\\\">{\\n    // rainbows\\n    \\\"unicorn\\\": /* ❤ */ \\\"cake\\\"\\n}\\n</code></pre>\\n<p>It will replace single-line comments <code>//</code> and multi-line comments <code>/**/</code> with whitespace. This allows JSON error positions to remain as close as possible to the original source.</p>\\n<p>Also available as a <a href=\\\"https://github.com/sindresorhus/gulp-strip-json-comments\\\">gulp</a>/<a href=\\\"https://github.com/sindresorhus/grunt-strip-json-comments\\\">grunt</a>/<a href=\\\"https://github.com/sindresorhus/broccoli-strip-json-comments\\\">broccoli</a> plugin.</p>\\n<h2>Install</h2>\\n<pre><code>$ npm install --save strip-json-comments\\n</code></pre>\\n<h2>Usage</h2>\\n<pre><code class=\\\"language-js\\\">const json = '{/*rainbows*/\\\"unicorn\\\":\\\"cake\\\"}';\\n\\nJSON.parse(stripJsonComments(json));\\n//=> {unicorn: 'cake'}\\n</code></pre>\\n<h2>API</h2>\\n<h3>stripJsonComments(input, [options])</h3>\\n<h4>input</h4>\\n<p>Type: <code>string</code></p>\\n<p>Accepts a string with JSON and returns a string without comments.</p>\\n<h4>options</h4>\\n<h5>whitespace</h5>\\n<p>Type: <code>boolean</code><br>\\nDefault: <code>true</code></p>\\n<p>Replace comments with whitespace instead of stripping them entirely.</p>\\n<h2>Related</h2>\\n<ul>\\n<li><a href=\\\"https://github.com/sindresorhus/strip-json-comments-cli\\\">strip-json-comments-cli</a> - CLI for this module</li>\\n<li><a href=\\\"https://github.com/sindresorhus/strip-css-comments\\\">strip-css-comments</a> - Strip comments from CSS</li>\\n</ul>\\n<h2>License</h2>\\n<p>MIT © <a href=\\\"http://sindresorhus.com\\\">Sindre Sorhus</a></p>\",\"docPath\":\"argo-ci/node_modules/strip-json-comments/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-strip-json-comments-readme-html.json\n// module id = 3207\n// module chunks = 173411409499391"],"sourceRoot":""}