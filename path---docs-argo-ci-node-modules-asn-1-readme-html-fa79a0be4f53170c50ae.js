webpackJsonp([0xf9e8f43ab109],{2045:function(e,n){e.exports={pathContext:{docHtml:"<p>node-asn1 is a library for encoding and decoding ASN.1 datatypes in pure JS.\nCurrently BER encoding is supported; at some point I'll likely have to do DER.</p>\n<h2>Usage</h2>\n<p>Mostly, if you're <em>actually</em> needing to read and write ASN.1, you probably don't\nneed this readme to explain what and why.  If you have no idea what ASN.1 is,\nsee this: ftp://ftp.rsa.com/pub/pkcs/ascii/layman.asc</p>\n<p>The source is pretty much self-explanatory, and has read/write methods for the\ncommon types out there.</p>\n<h3>Decoding</h3>\n<p>The following reads an ASN.1 sequence with a boolean.</p>\n<pre><code>var Ber = require('asn1').Ber;\n\nvar reader = new Ber.Reader(new Buffer([0x30, 0x03, 0x01, 0x01, 0xff]));\n\nreader.readSequence();\nconsole.log('Sequence len: ' + reader.length);\nif (reader.peek() === Ber.Boolean)\n  console.log(reader.readBoolean());\n</code></pre>\n<h3>Encoding</h3>\n<p>The following generates the same payload as above.</p>\n<pre><code>var Ber = require('asn1').Ber;\n\nvar writer = new Ber.Writer();\n\nwriter.startSequence();\nwriter.writeBoolean(true);\nwriter.endSequence();\n\nconsole.log(writer.buffer);\n</code></pre>\n<h2>Installation</h2>\n<pre><code>npm install asn1\n</code></pre>\n<h2>License</h2>\n<p>MIT.</p>\n<h2>Bugs</h2>\n<p>See <a href=\"https://github.com/mcavage/node-asn1/issues\">https://github.com/mcavage/node-asn1/issues</a>.</p>",docPath:"argo-ci/node_modules/asn1/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-asn-1-readme-html-fa79a0be4f53170c50ae.js.map