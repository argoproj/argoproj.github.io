{"version":3,"sources":["webpack:///path---docs-argo-cd-docs-developer-guide-test-e-2-e-html-5cc76acb8fd8b3e46b5c.js","webpack:///./.cache/json/docs-argo-cd-docs-developer-guide-test-e-2-e-html.json"],"names":["webpackJsonp","559","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,gBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,o2CAAq1BC,QAAA,wCAAAC,KAAA","file":"path---docs-argo-cd-docs-developer-guide-test-e-2-e-html-5cc76acb8fd8b3e46b5c.js","sourcesContent":["webpackJsonp([13695367283156],{\n\n/***/ 559:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>E2E Tests</h1>\\n<p>The directory contains E2E tests and test applications. Tests assume that Argo CD services are installed into <code>argocd-e2e</code> namespace or cluster in current context. One throw-away\\nnamespace <code>argocd-e2e***</code> is created prior to tests execute. The throw-away namespace is used as a target namespace for test applications.</p>\\n<p>The <code>test/e2e/testdata</code> directory contains various Argo CD applications. Before test execution directory is copies into <code>/tmp/argocd-e2e***</code> temp directory and used in tests as a\\nGit repository via file url: <code>file:///tmp/argocd-e2e***</code>.</p>\\n<p>Use the following steps to run tests locally:</p>\\n<ol>\\n<li>(Do it once) Create namespace <code>argocd-e2e</code> and apply base manifests: <code>kubectl create ns -n argocd-e2e &#x26;&#x26; kustomize build test/manifests/base | kubectl apply -n argocd-e2e -f -</code></li>\\n<li>Change kubectl context namespace to <code>argocd-e2e</code> and start services using <code>goreman start</code></li>\\n<li>Keep Argo CD services running and run tests using <code>make test-e2e</code></li>\\n</ol>\\n<p>The tests are executed by Argo Workflow defined at <code>.argo-ci/ci.yaml</code>. CI job The build argo cd image, deploy argo cd components into throw-away kubernetes cluster provisioned\\nusing k3s and run e2e tests against it.</p>\",\"docPath\":\"argo-cd/docs/developer-guide/test-e2e\",\"proj\":\"argo-cd\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-cd-docs-developer-guide-test-e-2-e-html-5cc76acb8fd8b3e46b5c.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>E2E Tests</h1>\\n<p>The directory contains E2E tests and test applications. Tests assume that Argo CD services are installed into <code>argocd-e2e</code> namespace or cluster in current context. One throw-away\\nnamespace <code>argocd-e2e***</code> is created prior to tests execute. The throw-away namespace is used as a target namespace for test applications.</p>\\n<p>The <code>test/e2e/testdata</code> directory contains various Argo CD applications. Before test execution directory is copies into <code>/tmp/argocd-e2e***</code> temp directory and used in tests as a\\nGit repository via file url: <code>file:///tmp/argocd-e2e***</code>.</p>\\n<p>Use the following steps to run tests locally:</p>\\n<ol>\\n<li>(Do it once) Create namespace <code>argocd-e2e</code> and apply base manifests: <code>kubectl create ns -n argocd-e2e &#x26;&#x26; kustomize build test/manifests/base | kubectl apply -n argocd-e2e -f -</code></li>\\n<li>Change kubectl context namespace to <code>argocd-e2e</code> and start services using <code>goreman start</code></li>\\n<li>Keep Argo CD services running and run tests using <code>make test-e2e</code></li>\\n</ol>\\n<p>The tests are executed by Argo Workflow defined at <code>.argo-ci/ci.yaml</code>. CI job The build argo cd image, deploy argo cd components into throw-away kubernetes cluster provisioned\\nusing k3s and run e2e tests against it.</p>\",\"docPath\":\"argo-cd/docs/developer-guide/test-e2e\",\"proj\":\"argo-cd\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-cd-docs-developer-guide-test-e-2-e-html.json\n// module id = 559\n// module chunks = 13695367283156"],"sourceRoot":""}