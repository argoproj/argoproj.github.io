{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-tsconfig-readme-html-1436dc758546514d2f19.js","webpack:///./.cache/json/docs-argo-ci-node-modules-tsconfig-readme-html.json"],"names":["webpackJsonp","3248","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,4iFAAy3DC,QAAA,uCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-tsconfig-readme-html-1436dc758546514d2f19.js","sourcesContent":["webpackJsonp([132163995177463],{\n\n/***/ 3248:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>TSConfig</h1>\\n<p><a href=\\\"https://npmjs.org/package/tsconfig\\\"><img src=\\\"https://img.shields.io/npm/v/tsconfig.svg?style=flat\\\" alt=\\\"NPM version\\\"></a>\\n<a href=\\\"https://npmjs.org/package/tsconfig\\\"><img src=\\\"https://img.shields.io/npm/dm/tsconfig.svg?style=flat\\\" alt=\\\"NPM downloads\\\"></a>\\n<a href=\\\"https://travis-ci.org/TypeStrong/tsconfig\\\"><img src=\\\"https://img.shields.io/travis/TypeStrong/tsconfig.svg?style=flat\\\" alt=\\\"Build status\\\"></a>\\n<a href=\\\"https://coveralls.io/r/TypeStrong/tsconfig?branch=master\\\"><img src=\\\"https://img.shields.io/coveralls/TypeStrong/tsconfig.svg?style=flat\\\" alt=\\\"Test coverage\\\"></a></p>\\n<p>Resolve and parse <a href=\\\"http://www.typescriptlang.org/docs/handbook/tsconfig-json.html\\\"><code>tsconfig.json</code></a>, replicating TypeScript's behaviour.</p>\\n<h2>Usage</h2>\\n<p>See the <a href=\\\"http://www.typescriptlang.org/docs/handbook/tsconfig-json.html\\\">TypeScript docs</a> for information on setting up <code>tsconfig.json</code>.</p>\\n<h3>API</h3>\\n<ul>\\n<li><strong>resolve(cwd: string, path?: string): Promise&#x3C;string | void></strong> Resolve <code>tsconfig.json</code>, like TypeScript, allowing a path to be specified and falling back to recursively resolving <code>tsconfig.json</code> upward when no path is specified.</li>\\n<li><strong>resolveSync(cwd: string, path?: string): string | void</strong> Synchronous <code>resolve</code>.</li>\\n<li><strong>find(cwd: string): Promise&#x3C;string | void></strong> Standalone behaviour of recursively resolving <code>tsconfig.json</code> upward.</li>\\n<li><strong>findSync(cwd: string): string | void</strong> Synchronous <code>find</code>.</li>\\n<li><strong>load(cwd: string, path?: string): Promise&#x3C;{ path?: string, config: any }></strong> Resolve, load and parse <code>tsconfig.json</code>.</li>\\n<li><strong>loadSync(cwd: string, path?: string): { path?: string, config: any }</strong> Synchronous <code>load</code>.</li>\\n<li><strong>readFile(filename: string): Promise<any></strong> Read a JSON file as <code>tsconfig.json</code> (strip BOM, parse JSON and support empty contents).</li>\\n<li><strong>readFileSync(filename: string): any</strong> Synchronous <code>readFile</code>.</li>\\n<li><strong>parse(contents: string, filename: string): any</strong> Parse file contents as <code>tsconfig.json</code> (strip BOM, parse JSON and support empty contents).</li>\\n</ul>\\n<h2>Contributing</h2>\\n<p>Feel free to open issues for discussion.</p>\\n<pre><code class=\\\"language-sh\\\"># Install dependencies/typings.\\nnpm install\\n\\n# Run test suite.\\nnpm test\\n</code></pre>\\n<h2>License</h2>\\n<p>MIT License</p>\",\"docPath\":\"argo-ci/node_modules/tsconfig/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-tsconfig-readme-html-1436dc758546514d2f19.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>TSConfig</h1>\\n<p><a href=\\\"https://npmjs.org/package/tsconfig\\\"><img src=\\\"https://img.shields.io/npm/v/tsconfig.svg?style=flat\\\" alt=\\\"NPM version\\\"></a>\\n<a href=\\\"https://npmjs.org/package/tsconfig\\\"><img src=\\\"https://img.shields.io/npm/dm/tsconfig.svg?style=flat\\\" alt=\\\"NPM downloads\\\"></a>\\n<a href=\\\"https://travis-ci.org/TypeStrong/tsconfig\\\"><img src=\\\"https://img.shields.io/travis/TypeStrong/tsconfig.svg?style=flat\\\" alt=\\\"Build status\\\"></a>\\n<a href=\\\"https://coveralls.io/r/TypeStrong/tsconfig?branch=master\\\"><img src=\\\"https://img.shields.io/coveralls/TypeStrong/tsconfig.svg?style=flat\\\" alt=\\\"Test coverage\\\"></a></p>\\n<p>Resolve and parse <a href=\\\"http://www.typescriptlang.org/docs/handbook/tsconfig-json.html\\\"><code>tsconfig.json</code></a>, replicating TypeScript's behaviour.</p>\\n<h2>Usage</h2>\\n<p>See the <a href=\\\"http://www.typescriptlang.org/docs/handbook/tsconfig-json.html\\\">TypeScript docs</a> for information on setting up <code>tsconfig.json</code>.</p>\\n<h3>API</h3>\\n<ul>\\n<li><strong>resolve(cwd: string, path?: string): Promise&#x3C;string | void></strong> Resolve <code>tsconfig.json</code>, like TypeScript, allowing a path to be specified and falling back to recursively resolving <code>tsconfig.json</code> upward when no path is specified.</li>\\n<li><strong>resolveSync(cwd: string, path?: string): string | void</strong> Synchronous <code>resolve</code>.</li>\\n<li><strong>find(cwd: string): Promise&#x3C;string | void></strong> Standalone behaviour of recursively resolving <code>tsconfig.json</code> upward.</li>\\n<li><strong>findSync(cwd: string): string | void</strong> Synchronous <code>find</code>.</li>\\n<li><strong>load(cwd: string, path?: string): Promise&#x3C;{ path?: string, config: any }></strong> Resolve, load and parse <code>tsconfig.json</code>.</li>\\n<li><strong>loadSync(cwd: string, path?: string): { path?: string, config: any }</strong> Synchronous <code>load</code>.</li>\\n<li><strong>readFile(filename: string): Promise<any></strong> Read a JSON file as <code>tsconfig.json</code> (strip BOM, parse JSON and support empty contents).</li>\\n<li><strong>readFileSync(filename: string): any</strong> Synchronous <code>readFile</code>.</li>\\n<li><strong>parse(contents: string, filename: string): any</strong> Parse file contents as <code>tsconfig.json</code> (strip BOM, parse JSON and support empty contents).</li>\\n</ul>\\n<h2>Contributing</h2>\\n<p>Feel free to open issues for discussion.</p>\\n<pre><code class=\\\"language-sh\\\"># Install dependencies/typings.\\nnpm install\\n\\n# Run test suite.\\nnpm test\\n</code></pre>\\n<h2>License</h2>\\n<p>MIT License</p>\",\"docPath\":\"argo-ci/node_modules/tsconfig/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-tsconfig-readme-html.json\n// module id = 3248\n// module chunks = 132163995177463"],"sourceRoot":""}