{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-destroy-readme-html-a1a3d1f15e0ed0d63424.js","webpack:///./.cache/json/docs-argo-ci-node-modules-destroy-readme-html.json"],"names":["webpackJsonp","2243","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,6mEAAAC,QAAA,sCAAAC,KAAA","file":"path---docs-argo-ci-node-modules-destroy-readme-html-a1a3d1f15e0ed0d63424.js","sourcesContent":["webpackJsonp([169765230640476],{\n\n/***/ 2243:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>Destroy</h1>\\n<p><a href=\\\"https://npmjs.org/package/destroy\\\"><img src=\\\"https://img.shields.io/npm/v/destroy.svg?style=flat-square\\\" alt=\\\"NPM version\\\"></a>\\n<a href=\\\"https://travis-ci.org/stream-utils/destroy\\\"><img src=\\\"https://img.shields.io/travis/stream-utils/destroy.svg?style=flat-square\\\" alt=\\\"Build status\\\"></a>\\n<a href=\\\"https://coveralls.io/r/stream-utils/destroy?branch=master\\\"><img src=\\\"https://img.shields.io/coveralls/stream-utils/destroy.svg?style=flat-square\\\" alt=\\\"Test coverage\\\"></a>\\n<a href=\\\"LICENSE.md\\\"><img src=\\\"http://img.shields.io/npm/l/destroy.svg?style=flat-square\\\" alt=\\\"License\\\"></a>\\n<a href=\\\"https://npmjs.org/package/destroy\\\"><img src=\\\"http://img.shields.io/npm/dm/destroy.svg?style=flat-square\\\" alt=\\\"Downloads\\\"></a>\\n<a href=\\\"https://www.gittip.com/jonathanong/\\\"><img src=\\\"https://img.shields.io/gittip/jonathanong.svg?style=flat-square\\\" alt=\\\"Gittip\\\"></a></p>\\n<p>Destroy a stream.</p>\\n<p>This module is meant to ensure a stream gets destroyed, handling different APIs\\nand Node.js bugs.</p>\\n<h2>API</h2>\\n<pre><code class=\\\"language-js\\\">var destroy = require('destroy')\\n</code></pre>\\n<h3>destroy(stream)</h3>\\n<p>Destroy the given stream. In most cases, this is identical to a simple\\n<code>stream.destroy()</code> call. The rules are as follows for a given stream:</p>\\n<ol>\\n<li>If the <code>stream</code> is an instance of <code>ReadStream</code>, then call <code>stream.destroy()</code>\\nand add a listener to the <code>open</code> event to call <code>stream.close()</code> if it is\\nfired. This is for a Node.js bug that will leak a file descriptor if\\n<code>.destroy()</code> is called before <code>open</code>.</li>\\n<li>If the <code>stream</code> is not an instance of <code>Stream</code>, then nothing happens.</li>\\n<li>If the <code>stream</code> has a <code>.destroy()</code> method, then call it.</li>\\n</ol>\\n<p>The function returns the <code>stream</code> passed in as the argument.</p>\\n<h2>Example</h2>\\n<pre><code class=\\\"language-js\\\">var destroy = require('destroy')\\n\\nvar fs = require('fs')\\nvar stream = fs.createReadStream('package.json')\\n\\n// ... and later\\ndestroy(stream)\\n</code></pre>\",\"docPath\":\"argo-ci/node_modules/destroy/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-destroy-readme-html-a1a3d1f15e0ed0d63424.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>Destroy</h1>\\n<p><a href=\\\"https://npmjs.org/package/destroy\\\"><img src=\\\"https://img.shields.io/npm/v/destroy.svg?style=flat-square\\\" alt=\\\"NPM version\\\"></a>\\n<a href=\\\"https://travis-ci.org/stream-utils/destroy\\\"><img src=\\\"https://img.shields.io/travis/stream-utils/destroy.svg?style=flat-square\\\" alt=\\\"Build status\\\"></a>\\n<a href=\\\"https://coveralls.io/r/stream-utils/destroy?branch=master\\\"><img src=\\\"https://img.shields.io/coveralls/stream-utils/destroy.svg?style=flat-square\\\" alt=\\\"Test coverage\\\"></a>\\n<a href=\\\"LICENSE.md\\\"><img src=\\\"http://img.shields.io/npm/l/destroy.svg?style=flat-square\\\" alt=\\\"License\\\"></a>\\n<a href=\\\"https://npmjs.org/package/destroy\\\"><img src=\\\"http://img.shields.io/npm/dm/destroy.svg?style=flat-square\\\" alt=\\\"Downloads\\\"></a>\\n<a href=\\\"https://www.gittip.com/jonathanong/\\\"><img src=\\\"https://img.shields.io/gittip/jonathanong.svg?style=flat-square\\\" alt=\\\"Gittip\\\"></a></p>\\n<p>Destroy a stream.</p>\\n<p>This module is meant to ensure a stream gets destroyed, handling different APIs\\nand Node.js bugs.</p>\\n<h2>API</h2>\\n<pre><code class=\\\"language-js\\\">var destroy = require('destroy')\\n</code></pre>\\n<h3>destroy(stream)</h3>\\n<p>Destroy the given stream. In most cases, this is identical to a simple\\n<code>stream.destroy()</code> call. The rules are as follows for a given stream:</p>\\n<ol>\\n<li>If the <code>stream</code> is an instance of <code>ReadStream</code>, then call <code>stream.destroy()</code>\\nand add a listener to the <code>open</code> event to call <code>stream.close()</code> if it is\\nfired. This is for a Node.js bug that will leak a file descriptor if\\n<code>.destroy()</code> is called before <code>open</code>.</li>\\n<li>If the <code>stream</code> is not an instance of <code>Stream</code>, then nothing happens.</li>\\n<li>If the <code>stream</code> has a <code>.destroy()</code> method, then call it.</li>\\n</ol>\\n<p>The function returns the <code>stream</code> passed in as the argument.</p>\\n<h2>Example</h2>\\n<pre><code class=\\\"language-js\\\">var destroy = require('destroy')\\n\\nvar fs = require('fs')\\nvar stream = fs.createReadStream('package.json')\\n\\n// ... and later\\ndestroy(stream)\\n</code></pre>\",\"docPath\":\"argo-ci/node_modules/destroy/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-destroy-readme-html.json\n// module id = 2243\n// module chunks = 169765230640476"],"sourceRoot":""}