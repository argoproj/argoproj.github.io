webpackJsonp([59000259407755],{496:function(e,o){e.exports={pathContext:{docHtml:'<h1 id="how-to-setup-your-dev-environment"><a href="#how-to-setup-your-dev-environment" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How to setup your dev environment</h1>\n<h2 id="pre-requisites"><a href="#pre-requisites" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Pre-requisites:</h2>\n<ul>\n<li>Dep. <code>brew install dep</code></li>\n<li>Golang</li>\n<li>Yarn. <code>brew install yarn</code></li>\n<li>Docker</li>\n<li><a href="https://github.com/kubernetes-sigs/kustomize/blob/master/docs/INSTALL.md">Kustomize</a></li>\n<li><a href="http://google.github.io/proto-lens/installing-protoc.html">protoc</a> <code>brew install protobuf</code></li>\n<li><code>jq</code></li>\n<li>Kubernetes Cluster (we recommend Docker for Desktop + K3D, as this will allow you to test RBAC set-up, and is also fast)</li>\n</ul>\n<p>Useful:</p>\n<ul>\n<li>For a PS1 prompt showing your current kube context: kube-ps1 to help.  <code>brew install kube-ps1</code></li>\n<li>For tailing logs: Stern. <code>brew install stern</code></li>\n</ul>\n<p>K3D tip: You can set-up K3D to be part of your default kube config as follows</p>\n<pre><code>cp ~/.kube/config ~/.kube/config.bak\ncat $(k3d get-kubeconfig --name=\'k3s-default\') >> ~/.kube/config\n</code></pre>\n<p>To install into the “argo” namespace of your cluster: Argo, MinIO (for saving artifacts and logs) and Postgres (for offloading or archiving):</p>\n<pre><code>make start \n</code></pre>\n<p>If you prefer MySQL:</p>\n<pre><code>make start DB=mysql\n</code></pre>\n<p>To expose the services port forwards:</p>\n<pre><code>make pf\n</code></pre>\n<p>You’ll now have</p>\n<ul>\n<li>Argo on <a href="http://localhost:2746">http://localhost:2746</a> (see below)</li>\n<li>MinIO  <a href="http://localhost:9000">http://localhost:9000</a> (use admin/password)</li>\n</ul>\n<p>Either:</p>\n<ul>\n<li>Postgres on  <a href="http://localhost:5432">http://localhost:5432</a>, run <code>make postgres-cli</code> to access.</li>\n<li>MySQL on  <a href="http://localhost:3306">http://localhost:3306</a>, run <code>make mysql-cli</code> to access.</li>\n</ul>\n<p>You need the token to access the CLI or UI:</p>\n<pre><code>eval $(make env)\n\n./dist/argo auth token\n</code></pre>\n<p>At this point you’ll have everything you need to use the CLI and UI.</p>\n<p>Tip: If you want to make UI changes without a time-consuming build:</p>\n<pre><code>cd ui\nyarn install\nyarn start\n</code></pre>\n<p>The UI will start up on <a href="http://localhost:8080">http://localhost:8080</a>.</p>\n<p>If you want to run controller or argo-server in your IDE (e.g. so you can debug it):</p>\n<p>Add to /etc/hosts:</p>\n<pre><code>127.0.0.1 postgres\n127.0.0.1 mysql\n</code></pre>\n<p>Scale down the services you want to debug:</p>\n<pre><code>kubectl -n argo scale deploy/workflow-controller --replicas 0\nkubectl -n argo scale deploy/argo-server --replicas 0\n</code></pre>\n<p>Restart the port forwarding:</p>\n<pre><code>make pf\n</code></pre>\n<p>To find the command arguments you need to use, you’ll have to look at dist/postgres.yaml (or dist/mysql.yaml for MySQL aficionados).</p>\n<h2 id="clean"><a href="#clean" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Clean</h2>\n<p>To clean-up everything:</p>\n<pre><code>kubectl delete ns argo\nmake clean\n</code></pre>',docPath:"argo/running-locally",proj:"argo"}}}});
//# sourceMappingURL=path---docs-argo-running-locally-html-00e0696bd7608451f8f9.js.map