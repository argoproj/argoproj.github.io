webpackJsonp([56987654205422],{2154:function(n,e){n.exports={pathContext:{docHtml:'<h1>cliui</h1>\n<p><a href="https://travis-ci.org/yargs/cliui"><img src="https://travis-ci.org/yargs/cliui.svg" alt="Build Status"></a>\n<a href="https://coveralls.io/r/yargs/cliui?branch="><img src="https://coveralls.io/repos/yargs/cliui/badge.svg?branch=" alt="Coverage Status"></a>\n<a href="https://www.npmjs.com/package/cliui"><img src="https://img.shields.io/npm/v/cliui.svg" alt="NPM version"></a>\n<a href="https://github.com/conventional-changelog/standard-version"><img src="https://img.shields.io/badge/release-standard%20version-brightgreen.svg" alt="Standard Version"></a></p>\n<p>easily create complex multi-column command-line-interfaces.</p>\n<h2>Example</h2>\n<pre><code class="language-js">var ui = require(\'cliui\')({\n  width: 80\n})\n\nui.div(\'Usage: $0 [command] [options]\')\n\nui.div({\n  text: \'Options:\',\n  padding: [2, 0, 2, 0]\n})\n\nui.div(\n  {\n    text: "-f, --file",\n    width: 20,\n    padding: [0, 4, 0, 4]\n  },\n  {\n    text: "the file to load." +\n      chalk.green("(if this description is long it wraps).")\n    ,\n    width: 20\n  },\n  {\n    text: chalk.red("[required]"),\n    align: \'right\'\n  }\n)\n\nconsole.log(ui.toString())\n</code></pre>\n<img width="500" src="screenshot.png">\n<h2>Layout DSL</h2>\n<p>cliui exposes a simple layout DSL:</p>\n<p>If you create a single <code>ui.row</code>, passing a string rather than an\nobject:</p>\n<ul>\n<li><code>\\n</code>: characters will be interpreted as new rows.</li>\n<li><code>\\t</code>: characters will be interpreted as new columns.</li>\n<li><code>\\s</code>: characters will be interpreted as padding.</li>\n</ul>\n<p><strong>as an example...</strong></p>\n<pre><code class="language-js">var ui = require(\'./\')({\n  width: 60\n})\n\nui.div(\n  \'Usage: node ./bin/foo.js\\n\' +\n  \'  &#x3C;regex>\\t  provide a regex\\n\' +\n  \'  &#x3C;glob>\\t  provide a glob\\t [required]\'\n)\n\nconsole.log(ui.toString())\n</code></pre>\n<p><strong>will output:</strong></p>\n<pre><code class="language-shell">Usage: node ./bin/foo.js\n  &#x3C;regex>  provide a regex\n  &#x3C;glob>   provide a glob          [required]\n</code></pre>\n<h2>Methods</h2>\n<pre><code class="language-js">cliui = require(\'cliui\')\n</code></pre>\n<h3>cliui({width: integer})</h3>\n<p>Specify the maximum width of the UI being generated.</p>\n<h3>cliui({wrap: boolean})</h3>\n<p>Enable or disable the wrapping of text in a column.</p>\n<h3>cliui.div(column, column, column)</h3>\n<p>Create a row with any number of columns, a column\ncan either be a string, or an object with the following\noptions:</p>\n<ul>\n<li><strong>width:</strong> the width of a column.</li>\n<li><strong>align:</strong> alignment, <code>right</code> or <code>center</code>.</li>\n<li><strong>padding:</strong> <code>[top, right, bottom, left]</code>.</li>\n<li><strong>border:</strong> should a border be placed around the div?</li>\n</ul>\n<h3>cliui.span(column, column, column)</h3>\n<p>Similar to <code>div</code>, except the next row will be appended without\na new line being created.</p>',docPath:"argo-ci/node_modules/cliui/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-cliui-0de29a92e2737b97ef5c.js.map