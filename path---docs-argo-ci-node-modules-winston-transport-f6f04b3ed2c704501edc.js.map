{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-winston-transport-f6f04b3ed2c704501edc.js","webpack:///./.cache/json/docs-argo-ci-node-modules-winston-transport.json"],"names":["webpackJsonp","3417","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,+xCAAu7BC,QAAA,gDAAAC,KAAA","file":"path---docs-argo-ci-node-modules-winston-transport-f6f04b3ed2c704501edc.js","sourcesContent":["webpackJsonp([230136971159972],{\n\n/***/ 3417:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>winston-transport</h1>\\n<p>The base <code>TransportStream</code> implementation for <code>winston >= 3</code>. Use these to\\nwrite ecosystem Transports for <code>winston</code>.</p>\\n<h2>Usage</h2>\\n<pre><code class=\\\"language-js\\\">const Transport = require('winston-transport');\\nconst util = require('util');\\n\\n//\\n// Inherit from `winston-transport` so you can take advantage\\n// of the base functionality and `.exceptions.handle()`.\\n//\\nmodule.exports = class CustomTransport extends Transport {\\n  constructor(opts) {\\n    super(opts);\\n\\n    //\\n    // Consume any custom options here. e.g.:\\n    // - Connection information for databases\\n    // - Authentication information for APIs (e.g. loggly, papertrail,\\n    //   logentries, etc.).\\n    //\\n  }\\n\\n  log(info, callback) {\\n    setImmediate(() => {\\n      this.emit('logged', info);\\n    });\\n\\n    // Perform the writing to the remote service\\n\\n    callback();\\n  }\\n};\\n</code></pre>\\n<h2>Tests</h2>\\n<p>Tests are written with <code>mocha</code>, <code>nyc</code>, <code>assume</code>, and\\n<code>abstract-winston-transport</code>. They can be run with <code>npm</code>:</p>\\n<pre><code class=\\\"language-bash\\\">npm test\\n</code></pre>\\n<h5>Author: <a href=\\\"https://github.com/indexzero\\\">Charlie Robbins</a></h5>\\n<h5>LICENSE: MIT</h5>\",\"docPath\":\"argo-ci/node_modules/winston-transport/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-winston-transport-f6f04b3ed2c704501edc.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>winston-transport</h1>\\n<p>The base <code>TransportStream</code> implementation for <code>winston >= 3</code>. Use these to\\nwrite ecosystem Transports for <code>winston</code>.</p>\\n<h2>Usage</h2>\\n<pre><code class=\\\"language-js\\\">const Transport = require('winston-transport');\\nconst util = require('util');\\n\\n//\\n// Inherit from `winston-transport` so you can take advantage\\n// of the base functionality and `.exceptions.handle()`.\\n//\\nmodule.exports = class CustomTransport extends Transport {\\n  constructor(opts) {\\n    super(opts);\\n\\n    //\\n    // Consume any custom options here. e.g.:\\n    // - Connection information for databases\\n    // - Authentication information for APIs (e.g. loggly, papertrail,\\n    //   logentries, etc.).\\n    //\\n  }\\n\\n  log(info, callback) {\\n    setImmediate(() => {\\n      this.emit('logged', info);\\n    });\\n\\n    // Perform the writing to the remote service\\n\\n    callback();\\n  }\\n};\\n</code></pre>\\n<h2>Tests</h2>\\n<p>Tests are written with <code>mocha</code>, <code>nyc</code>, <code>assume</code>, and\\n<code>abstract-winston-transport</code>. They can be run with <code>npm</code>:</p>\\n<pre><code class=\\\"language-bash\\\">npm test\\n</code></pre>\\n<h5>Author: <a href=\\\"https://github.com/indexzero\\\">Charlie Robbins</a></h5>\\n<h5>LICENSE: MIT</h5>\",\"docPath\":\"argo-ci/node_modules/winston-transport/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-winston-transport.json\n// module id = 3417\n// module chunks = 230136971159972"],"sourceRoot":""}