webpackJsonp([0x91ced6a5f3e4],{2145:function(r,e){r.exports={pathContext:{docHtml:'<h1 align="center">\n  <a href="http://chaijs.com" title="Chai Documentation">\n    <img alt="ChaiJS" src="http://chaijs.com/img/chai-logo.png"> check-error\n  </a>\n</h1>\n<p align=center>\n  Error comparison and information related utility for <a href="http://nodejs.org">node</a> and the browser.\n</p>\n<p align="center">\n  <a href="./LICENSE">\n    <img alt="license:mit" src="https://img.shields.io/badge/license-mit-green.svg?style=flat-square">\n  </a>\n  <a href="https://github.com/chaijs/check-error/releases">\n    <img alt="tag:?" src="https://img.shields.io/github/tag/chaijs/check-error.svg?style=flat-square">\n  </a>\n  <a href="https://travis-ci.org/chaijs/check-error">\n    <img alt="build:?" src="https://img.shields.io/travis/chaijs/check-error/master.svg?style=flat-square">\n  </a>\n  <a href="https://coveralls.io/r/chaijs/check-error">\n    <img alt="coverage:?" src="https://img.shields.io/coveralls/chaijs/check-error/master.svg?style=flat-square">\n  </a>\n  <a href="https://www.npmjs.com/packages/check-error">\n    <img alt="npm:?" src="https://img.shields.io/npm/v/check-error.svg?style=flat-square">\n  </a>\n  <a href="https://www.npmjs.com/packages/check-error">\n    <img alt="dependencies:?" src="https://img.shields.io/npm/dm/check-error.svg?style=flat-square">\n  </a>\n  <a href="">\n    <img alt="devDependencies:?" src="https://img.shields.io/david/chaijs/check-error.svg?style=flat-square">\n  </a>\n  <br>\n  <a href="https://saucelabs.com/u/chaijs-check-error">\n    <img alt="Selenium Test Status" src="https://saucelabs.com/browser-matrix/chaijs-check-error.svg">\n  </a>\n  <br>\n  <a href="https://chai-slack.herokuapp.com/">\n    <img alt="Join the Slack chat" src="https://img.shields.io/badge/slack-join%20chat-E2206F.svg?style=flat-square">\n  </a>\n  <a href="https://gitter.im/chaijs/chai">\n    <img alt="Join the Gitter chat" src="https://img.shields.io/badge/gitter-join%20chat-D0104D.svg?style=flat-square">\n  </a>\n</p>\n<h2>What is Check-Error?</h2>\n<p>Check-Error is a module which you can use to retrieve an Error\'s information such as its <code>message</code> or <code>constructor</code> name and also to check whether two Errors are compatible based on their messages, constructors or even instances.</p>\n<h2>Installation</h2>\n<h3>Node.js</h3>\n<p><code>check-error</code> is available on <a href="http://npmjs.org">npm</a>. To install it, type:</p>\n<pre><code>$ npm install check-error\n</code></pre>\n<h3>Browsers</h3>\n<p>You can also use it within the browser; install via npm and use the <code>check-error.js</code> file found within the download. For example:</p>\n<pre><code class="language-html">&#x3C;script src="./node_modules/check-error/check-error.js">&#x3C;/script>\n</code></pre>\n<h2>Usage</h2>\n<p>The primary export of <code>check-error</code> is an object which has the following methods:</p>\n<ul>\n<li><code>compatibleInstance(err, errorLike)</code> - Checks if an error is compatible with another <code>errorLike</code> object. If <code>errorLike</code> is an error instance we do a strict comparison, otherwise we return <code>false</code> by default, because instances of objects can only be compatible if they\'re both error instances.</li>\n<li><code>compatibleConstructor(err, errorLike)</code> - Checks if an error\'s constructor is compatible with another <code>errorLike</code> object. If <code>err</code> has the same constructor as <code>errorLike</code> or if <code>err</code> is an instance of <code>errorLike</code>.</li>\n<li><code>compatibleMessage(err, errMatcher)</code> - Checks if an error message is compatible with an <code>errMatcher</code> RegExp or String (we check if the message contains the String).</li>\n<li><code>getConstructorName(errorLike)</code> - Retrieves the name of a constructor, an error\'s constructor or <code>errorLike</code> itself if it\'s not an error instance or constructor.</li>\n<li><code>getMessage(err)</code> - Retrieves the message of an error or <code>err</code> itself if it\'s a String. If <code>err</code> or <code>err.message</code> is undefined we return an empty String.</li>\n</ul>\n<pre><code class="language-js">var checkError = require(\'check-error\');\n</code></pre>\n<h4>.compatibleInstance(err, errorLike)</h4>\n<pre><code class="language-js">var checkError = require(\'check-error\');\n\nvar funcThatThrows = function() { throw new TypeError(\'I am a TypeError\') };\nvar caughtErr;\n\ntry {\n  funcThatThrows();\n} catch(e) {\n  caughtErr = e;\n}\n\nvar sameInstance = caughtErr;\n\ncheckError.compatibleInstance(caughtErr, sameInstance); // true\ncheckError.compatibleInstance(caughtErr, new TypeError(\'Another error\')); // false\n</code></pre>\n<h4>.compatibleConstructor(err, errorLike)</h4>\n<pre><code class="language-js">var checkError = require(\'check-error\');\n\nvar funcThatThrows = function() { throw new TypeError(\'I am a TypeError\') };\nvar caughtErr;\n\ntry {\n  funcThatThrows();\n} catch(e) {\n  caughtErr = e;\n}\n\ncheckError.compatibleConstructor(caughtErr, Error); // true\ncheckError.compatibleConstructor(caughtErr, TypeError); // true\ncheckError.compatibleConstructor(caughtErr, RangeError); // false\n</code></pre>\n<h4>.compatibleMessage(err, errMatcher)</h4>\n<pre><code class="language-js">var checkError = require(\'check-error\');\n\nvar funcThatThrows = function() { throw new TypeError(\'I am a TypeError\') };\nvar caughtErr;\n\ntry {\n  funcThatThrows();\n} catch(e) {\n  caughtErr = e;\n}\n\nvar sameInstance = caughtErr;\n\ncheckError.compatibleMessage(caughtErr, /TypeError$/); // true\ncheckError.compatibleMessage(caughtErr, \'I am a\'); // true\ncheckError.compatibleMessage(caughtErr, /unicorn/); // false\ncheckError.compatibleMessage(caughtErr, \'I do not exist\'); // false\n</code></pre>\n<h4>.getConstructorName(errorLike)</h4>\n<pre><code class="language-js">var checkError = require(\'check-error\');\n\nvar funcThatThrows = function() { throw new TypeError(\'I am a TypeError\') };\nvar caughtErr;\n\ntry {\n  funcThatThrows();\n} catch(e) {\n  caughtErr = e;\n}\n\nvar sameInstance = caughtErr;\n\ncheckError.getConstructorName(caughtErr) // \'TypeError\'\n</code></pre>\n<h4>.getMessage(err)</h4>\n<pre><code class="language-js">var checkError = require(\'check-error\');\n\nvar funcThatThrows = function() { throw new TypeError(\'I am a TypeError\') };\nvar caughtErr;\n\ntry {\n  funcThatThrows();\n} catch(e) {\n  caughtErr = e;\n}\n\nvar sameInstance = caughtErr;\n\ncheckError.getMessage(caughtErr) // \'I am a TypeError\'\n</code></pre>',docPath:"argo-ci/node_modules/check-error/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-check-error-readme-html-e4646a08d03e453ab5b4.js.map