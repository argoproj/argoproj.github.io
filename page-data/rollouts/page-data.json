{
    "componentChunkName": "component---src-templates-page-default-js",
    "path": "/rollouts/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Argo"}},"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"order\": 3,\n  \"title\": \"Argo Rollouts\",\n  \"description\": \"Advanced Kubernetes deployment strategies such as Canary and Blue-Green made easy.\",\n  \"image\": \"rollouts.png\",\n  \"thumbnail\": \"rollouts-thumbnail.png\",\n  \"repo\": \"argo-rollouts\",\n  \"docs\": \"https://argoproj.github.io/argo-rollouts\",\n  \"quickstart\": \"https://argoproj.github.io/argo-rollouts/getting-started\"\n};\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\nvar YoutubeEmbed = makeShortcode(\"YoutubeEmbed\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"What is Argo Rollouts?\"), mdx(\"p\", null, \"Argo Rollouts is a Kubernetes controller and set of CRDs which provide advanced deployment capabilities such as blue-green, canary, canary analysis, experimentation, and progressive delivery features to Kubernetes.\"), mdx(\"p\", null, \"Argo Rollouts (optionally) integrates with ingress controllers and service meshes, leveraging their traffic shaping abilities to gradually shift traffic to the new version during an update. Additionally, Rollouts can query and interpret metrics from various providers to verify key KPIs and drive automated promotion or rollback during an update.\"), mdx(YoutubeEmbed, {\n    id: \"hIL0E2gLkf8\",\n    title: \"Argo Rollouts demonstration video\",\n    mdxType: \"YoutubeEmbed\"\n  }), mdx(\"h2\", null, \"Why Argo Rollouts?\"), mdx(\"p\", null, \"The native Kubernetes Deployment Object supports the RollingUpdate strategy which provides a basic set of safety guarantees (readiness probes) during an update. However the rolling update strategy faces many limitations:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Few controls over the speed of the rollout\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Inability to control traffic flow to the new version\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Readiness probes are unsuitable for deeper, stress, or one-time checks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No ability to query external metrics to verify an update\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Can halt the progression, but unable to automatically abort and rollback the update\")), mdx(\"p\", null, \"For these reasons, in large scale high-volume production environments, a rolling update is often considered too risky of an update procedure since it provides no control over the blast radius, may rollout too aggressively, and provides no automated rollback upon failures.\"), mdx(\"h2\", null, \"Controller Features\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Blue-Green update strategy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Canary update strategy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fine-grained, weighted traffic shifting\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated rollbacks and promotions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Manual judgement\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Customizable metric queries and analysis of business KPIs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ingress controller integration: NGINX, ALB\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Service Mesh integration: Istio, Linkerd, SMI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Metric provider integration: Prometheus, Wavefront, Kayenta, Web, Kubernetes Jobs\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"order":3,"title":"Argo Rollouts","description":"Advanced Kubernetes deployment strategies such as Canary and Blue-Green made easy.","repo":"argo-rollouts","docs":"https://argoproj.github.io/argo-rollouts","quickstart":"https://argoproj.github.io/argo-rollouts/getting-started","thumbnail":{"publicURL":"/static/768d962efdd84a6021db7c7792f01b41/rollouts-thumbnail.png"}}}},"pageContext":{"id":"af379e97-6fa7-5030-8a7a-bd35a2cd8454"}},
    "staticQueryHashes": ["2841359383","290055352","3159585216","4144922801"]}