webpackJsonp([0x75602f910642],{3092:function(e,t){e.exports={pathContext:{docHtml:'<h1>rechoir <a href="http://travis-ci.org/tkellen/js-rechoir"><img src="https://secure.travis-ci.org/tkellen/js-rechoir.png" alt="Build Status"></a></h1>\n<blockquote>\n<p>Require any supported file as a node module.</p>\n</blockquote>\n<p><a href="https://nodei.co/npm/rechoir/"><img src="https://nodei.co/npm/rechoir.png" alt="NPM"></a></p>\n<h2>What is it?</h2>\n<p>This module, in conjunction with <a href="http://github.com/tkellen/js-interpret">interpret</a>-like objects can register any file type the npm ecosystem has a module loader for. This library is a dependency of <a href="http://github.com/tkellen/js-liftoff">Liftoff</a>.</p>\n<h2>API</h2>\n<h3>prepare(config, filepath, requireFrom)</h3>\n<p>Look for a module loader associated with the provided file and attempt require it.  If necessary, run any setup required to inject it into <a href="http://nodejs.org/api/globals.html#globals_require_extensions">require.extensions</a>.</p>\n<p><code>config</code> An <a href="http://github.com/tkellen/js-interpret">interpret</a>-like configuration object.  </p>\n<p><code>filepath</code> A file whose type you\'d like to register a module loader for.</p>\n<p><code>requireFrom</code> An optional path to start searching for the module required to load the requested file.  Defaults to the directory of <code>filepath</code>.</p>\n<p>If calling this method is successful (aka: it doesn\'t throw), you can now require files of the type you requested natively.</p>\n<p>An error with a <code>failures</code> property will be thrown if the module loader(s) configured for a given extension cannot be registered.</p>\n<p>If a loader is already registered, this will simply return <code>true</code>.</p>\n<p><strong>Note:</strong> While rechoir will automatically load and register transpilers like <code>coffee-script</code>, you must provide a local installation. The transpilers are <strong>not</strong> bundled with this module.</p>\n<h4>Usage</h4>\n<pre><code class="language-js">const config = require(\'interpret\').extensions;\nconst rechoir = require(\'rechoir\');\nrechoir.prepare(config, \'./test/fixtures/test.coffee\');\nrechoir.prepare(config, \'./test/fixtures/test.csv\');\nrechoir.prepare(config, \'./test/fixtures/test.toml\');\n\nconsole.log(require(\'./test/fixtures/test.coffee\'));\nconsole.log(require(\'./test/fixtures/test.csv\'));\nconsole.log(require(\'./test/fixtures/test.toml\'));\n</code></pre>',docPath:"argo-ci/node_modules/rechoir/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-rechoir-7edccc40f0138369f1b4.js.map