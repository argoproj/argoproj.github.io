webpackJsonp([0x962ed2f29b3],{3427:function(e,n){e.exports={pathContext:{docHtml:'<h1>y18n</h1>\n<p><a href="https://travis-ci.org/yargs/y18n"><img src="https://img.shields.io/travis/yargs/y18n.svg" alt="Build Status"></a>\n<a href="https://coveralls.io/github/yargs/y18n"><img src="https://img.shields.io/coveralls/yargs/y18n.svg" alt="Coverage Status"></a>\n<a href="https://npmjs.org/package/y18n"><img src="https://img.shields.io/npm/v/y18n.svg" alt="NPM version"></a>\n<a href="https://github.com/feross/standard"><img src="https://img.shields.io/badge/code%20style-standard-brightgreen.svg" alt="js-standard-style"></a></p>\n<p>The bare-bones internationalization library used by yargs.</p>\n<p>Inspired by <a href="https://www.npmjs.com/package/i18n">i18n</a>.</p>\n<h2>Examples</h2>\n<p><em>simple string translation:</em></p>\n<pre><code class="language-js">var __ = require(\'y18n\').__\n\nconsole.log(__(\'my awesome string %s\', \'foo\'))\n</code></pre>\n<p>output:</p>\n<p><code>my awesome string foo</code></p>\n<p><em>pluralization support:</em></p>\n<pre><code class="language-js">var __n = require(\'y18n\').__n\n\nconsole.log(__n(\'one fish %s\', \'%d fishes %s\', 2, \'foo\'))\n</code></pre>\n<p>output:</p>\n<p><code>2 fishes foo</code></p>\n<h2>JSON Language Files</h2>\n<p>The JSON language files should be stored in a <code>./locales</code> folder.\nFile names correspond to locales, e.g., <code>en.json</code>, <code>pirate.json</code>.</p>\n<p>When strings are observed for the first time they will be\nadded to the JSON file corresponding to the current locale.</p>\n<h2>Methods</h2>\n<h3>require(\'y18n\')(config)</h3>\n<p>Create an instance of y18n with the config provided, options include:</p>\n<ul>\n<li><code>directory</code>: the locale directory, default <code>./locales</code>.</li>\n<li><code>updateFiles</code>: should newly observed strings be updated in file, default <code>true</code>.</li>\n<li><code>locale</code>: what locale should be used.</li>\n<li><code>fallbackToLanguage</code>: should fallback to a language-only file (e.g. <code>en.json</code>)\nbe allowed if a file matching the locale does not exist (e.g. <code>en_US.json</code>),\ndefault <code>true</code>.</li>\n</ul>\n<h3>y18n.__(str, arg, arg, arg)</h3>\n<p>Print a localized string, <code>%s</code> will be replaced with <code>arg</code>s.</p>\n<h3>y18n.__n(singularString, pluralString, count, arg, arg, arg)</h3>\n<p>Print a localized string with appropriate pluralization. If <code>%d</code> is provided\nin the string, the <code>count</code> will replace this placeholder.</p>\n<h3>y18n.setLocale(str)</h3>\n<p>Set the current locale being used.</p>\n<h3>y18n.getLocale()</h3>\n<p>What locale is currently being used?</p>\n<h3>y18n.updateLocale(obj)</h3>\n<p>Update the current locale with the key value pairs in <code>obj</code>.</p>\n<h2>License</h2>\n<p>ISC</p>',docPath:"argo-ci/node_modules/y18n/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-y-18-n-readme-html-a432c6c5ba5e83fafa95.js.map