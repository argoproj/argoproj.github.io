webpackJsonp([0xa9dc231f496],{2228:function(e,a){e.exports={pathContext:{docHtml:'<h1 align="center">\n  <a href="http://chaijs.com" title="Chai Documentation">\n    <img alt="ChaiJS" src="http://chaijs.com/img/chai-logo.png"> deep-eql\n  </a>\n</h1>\n<p align=center>\n  Improved deep equality testing for [node](http://nodejs.org) and the browser.\n</p>\n<p align="center">\n  <a href="./LICENSE">\n    <img alt="license:mit" src="https://img.shields.io/badge/license-mit-green.svg?style=flat-square">\n  </a><a href="https://github.com/chaijs/deep-eql/releases">\n    <img alt="tag:?" src="https://img.shields.io/github/tag/chaijs/deep-eql.svg?style=flat-square">\n  </a><a href="https://travis-ci.org/chaijs/deep-eql">\n    <img alt="build:?" src="https://img.shields.io/travis/chaijs/deep-eql/master.svg?style=flat-square">\n  </a><a href="https://coveralls.io/r/chaijs/deep-eql">\n    <img alt="coverage:?" src="https://img.shields.io/coveralls/chaijs/deep-eql/master.svg?style=flat-square">\n  </a><a href="https://www.npmjs.com/packages/deep-eql">\n    <img alt="code quality:?" src="https://img.shields.io/codacy/6de187aa62274dbea6e69a3c27e798da.svg?style=flat-square">\n  </a><a href="https://www.npmjs.com/packages/deep-eql">\n    <img alt="dependencies:?" src="https://img.shields.io/npm/dm/deep-eql.svg?style=flat-square">\n  </a><a href="">\n    <img alt="devDependencies:?" src="https://img.shields.io/david/chaijs/deep-eql.svg?style=flat-square">\n  </a><a href="https://github.com/nodejs/LTS#lts-schedule1">\n    <img alt="Supported Node Version: 4+" src="https://img.shields.io/badge/node-4+-43853d.svg?style=flat-square">\n  </a>\n  <br>\n  <a href="https://saucelabs.com/u/chaijs-deep-eql">\n    <img alt="Selenium Test Status" src="https://saucelabs.com/browser-matrix/chaijs-deep-eql.svg">\n  </a>\n  <br>\n  <a href="https://chai-slack.herokuapp.com/">\n    <img alt="Join the Slack chat" src="https://img.shields.io/badge/slack-join%20chat-E2206F.svg?style=flat-square">\n  </a>\n  <a href="https://gitter.im/chaijs/deep-eql">\n    <img alt="Join the Gitter chat" src="https://img.shields.io/badge/gitter-join%20chat-D0104D.svg?style=flat-square">\n  </a>\n</p>\n<h2>What is Deep-Eql?</h2>\n<p>Deep Eql is a module which you can use to determine if two objects are "deeply" equal - that is, rather than having referential equality (<code>a === b</code>), this module checks an object\'s keys recursively, until it finds primitives to check for referential equality. For more on equality in JavaScript, read <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators">the comparison operators article on mdn</a>.</p>\n<p>As an example, take the following:</p>\n<pre><code class="language-js">1 === 1 // These are primitives, they hold the same reference - they are strictly equal\n1 == \'1\' // These are two different primitives, through type coercion they hold the same value - they are loosely equal\n{ a: 1 } !== { a: 1 } // These are two different objects, they hold different references and so are not strictly equal - even though they hold the same values inside\n{ a: 1 } != { a: 1 } // They have the same type, meaning loose equality performs the same check as strict equality - they are still not equal.\n\nvar deepEql = require("deep-eql");\ndeepEql({ a: 1 }, { a: 1 }) === true // deepEql can determine that they share the same keys and those keys share the same values, therefore they are deeply equal!\n</code></pre>\n<h2>Installation</h2>\n<h3>Node.js</h3>\n<p><code>deep-eql</code> is available on <a href="http://npmjs.org">npm</a>.</p>\n<pre><code>$ npm install deep-eql\n</code></pre>\n<h2>Usage</h2>\n<p>The primary export of <code>deep-eql</code> is function that can be given two objects to compare. It will always return a boolean which can be used to determine if two objects are deeply equal.</p>\n<h3>Rules</h3>\n<ul>\n<li>\n<p>Strict equality for non-traversable nodes according to <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is"><code>Object.is</code></a>:</p>\n<ul>\n<li><code>eql(NaN, NaN).should.be.true;</code></li>\n<li><code>eql(-0, +0).should.be.false;</code></li>\n</ul>\n</li>\n<li>\n<p>All own and inherited enumerable properties are considered:</p>\n<ul>\n<li><code>eql(Object.create({ foo: { a: 1 } }), Object.create({ foo: { a: 1 } })).should.be.true;</code></li>\n<li><code>eql(Object.create({ foo: { a: 1 } }), Object.create({ foo: { a: 2 } })).should.be.false;</code></li>\n</ul>\n</li>\n<li>\n<p>Arguments are not Arrays:</p>\n<ul>\n<li><code>eql([], arguments).should.be.false;</code></li>\n<li><code>eql([], Array.prototype.slice.call(arguments)).should.be.true;</code></li>\n</ul>\n</li>\n<li>\n<p>Error objects are compared by reference (see <a href="https://github.com/chaijs/chai/issues/608">https://github.com/chaijs/chai/issues/608</a>):</p>\n<ul>\n<li><code>eql(new Error(\'msg\'), new Error(\'msg\')).should.be.false;</code></li>\n<li><code>var err = new Error(\'msg\'); eql(err, err).should.be.true;</code></li>\n</ul>\n</li>\n</ul>',docPath:"argo-ci/node_modules/deep-eql/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-deep-eql-2ed1231eae5db12a4799.js.map