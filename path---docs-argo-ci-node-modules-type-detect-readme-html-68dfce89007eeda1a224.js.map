{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-type-detect-readme-html-68dfce89007eeda1a224.js","webpack:///./.cache/json/docs-argo-ci-node-modules-type-detect-readme-html.json"],"names":["webpackJsonp","3269","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,gxQAAg0QC,QAAA,0CAAAC,KAAA","file":"path---docs-argo-ci-node-modules-type-detect-readme-html-68dfce89007eeda1a224.js","sourcesContent":["webpackJsonp([63779899755805],{\n\n/***/ 3269:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1 align=\\\"center\\\">\\n  <a href=\\\"http://chaijs.com\\\" title=\\\"Chai Documentation\\\">\\n    <img alt=\\\"ChaiJS\\\" src=\\\"http://chaijs.com/img/chai-logo.png\\\"> type-detect\\n  </a>\\n</h1>\\n<br>\\n<p align=\\\"center\\\">\\n  Improved typeof detection for <a href=\\\"http://nodejs.org\\\">node</a> and the browser.\\n</p>\\n<p align=\\\"center\\\">\\n  <a href=\\\"./LICENSE\\\">\\n    <img alt=\\\"license:mit\\\" src=\\\"https://img.shields.io/badge/license-mit-green.svg?style=flat-square\\\">\\n  </a>\\n  <a href=\\\"https://github.com/chaijs/type-detect/releases\\\">\\n    <img alt=\\\"tag:?\\\" src=\\\"https://img.shields.io/github/tag/chaijs/type-detect.svg?style=flat-square\\\">\\n  </a>\\n  <a href=\\\"https://travis-ci.org/chaijs/type-detect\\\">\\n    <img alt=\\\"build:?\\\" src=\\\"https://img.shields.io/travis/chaijs/type-detect/master.svg?style=flat-square\\\">\\n  </a>\\n  <a href=\\\"https://coveralls.io/r/chaijs/type-detect\\\">\\n    <img alt=\\\"coverage:?\\\" src=\\\"https://img.shields.io/coveralls/chaijs/type-detect/master.svg?style=flat-square\\\">\\n  </a>\\n  <a href=\\\"https://www.npmjs.com/packages/type-detect\\\">\\n    <img alt=\\\"npm:?\\\" src=\\\"https://img.shields.io/npm/v/type-detect.svg?style=flat-square\\\">\\n  </a>\\n  <a href=\\\"https://www.npmjs.com/packages/type-detect\\\">\\n    <img alt=\\\"dependencies:?\\\" src=\\\"https://img.shields.io/npm/dm/type-detect.svg?style=flat-square\\\">\\n  </a>\\n  <a href=\\\"\\\">\\n    <img alt=\\\"devDependencies:?\\\" src=\\\"https://img.shields.io/david/chaijs/type-detect.svg?style=flat-square\\\">\\n  </a>\\n  <br>\\n  <table>\\n  <tbody><tr><th colspan=\\\"6\\\">Supported Browsers</th></tr> <tr>\\n  <th align=\\\"center\\\"><img src=\\\"https://camo.githubusercontent.com/ab586f11dfcb49bf5f2c2fa9adadc5e857de122a/687474703a2f2f73766773686172652e636f6d2f692f3278532e737667\\\" alt=\\\"\\\"> Chrome</th>\\n  <th align=\\\"center\\\"><img src=\\\"https://camo.githubusercontent.com/98cca3108c18dcfaa62667b42046540c6822cdac/687474703a2f2f73766773686172652e636f6d2f692f3279352e737667\\\" alt=\\\"\\\"> Edge</th>\\n  <th align=\\\"center\\\"><img src=\\\"https://camo.githubusercontent.com/acdcb09840a9e1442cbaf1b684f95ab3c3f41cf4/687474703a2f2f73766773686172652e636f6d2f692f3279462e737667\\\" alt=\\\"\\\"> Firefox</th>\\n  <th align=\\\"center\\\"><img src=\\\"https://camo.githubusercontent.com/728f8cb0bee9ed58ab85e39266f1152c53e0dffd/687474703a2f2f73766773686172652e636f6d2f692f3278342e737667\\\" alt=\\\"\\\"> Safari</th>\\n  <th align=\\\"center\\\"><img src=\\\"https://camo.githubusercontent.com/96a2317034dee0040d0a762e7a30c3c650c45aac/687474703a2f2f73766773686172652e636f6d2f692f3279532e737667\\\" alt=\\\"\\\"> IE</th>\\n  </tr><tr>\\n  <td align=\\\"center\\\">&#x2705;</td>\\n  <td align=\\\"center\\\">&#x2705;</td>\\n  <td align=\\\"center\\\">&#x2705;</td>\\n  <td align=\\\"center\\\">&#x2705;</td>\\n  <td align=\\\"center\\\">9, 10, 11</td>\\n  </tr>\\n  </tbody></table>\\n  <br>\\n  <a href=\\\"https://chai-slack.herokuapp.com/\\\">\\n    <img alt=\\\"Join the Slack chat\\\" src=\\\"https://img.shields.io/badge/slack-join%20chat-E2206F.svg?style=flat-square\\\">\\n  </a>\\n  <a href=\\\"https://gitter.im/chaijs/chai\\\">\\n    <img alt=\\\"Join the Gitter chat\\\" src=\\\"https://img.shields.io/badge/gitter-join%20chat-D0104D.svg?style=flat-square\\\">\\n  </a>\\n</p>\\n<h2>What is Type-Detect?</h2>\\n<p>Type Detect is a module which you can use to detect the type of a given object. It returns a string representation of the object's type, either using <a href=\\\"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-typeof-operator\\\"><code>typeof</code></a> or <a href=\\\"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-symbol.tostringtag\\\"><code>@@toStringTag</code></a>. It also normalizes some object names for consistency among browsers.</p>\\n<h2>Why?</h2>\\n<p>The <code>typeof</code> operator will only specify primitive values; everything else is <code>\\\"object\\\"</code> (including <code>null</code>, arrays, regexps, etc). Many developers use <code>Object.prototype.toString()</code> - which is a fine alternative and returns many more types (null returns <code>[object Null]</code>, Arrays as <code>[object Array]</code>, regexps as <code>[object RegExp]</code> etc). </p>\\n<p>Sadly, <code>Object.prototype.toString</code> is slow, and buggy. By slow - we mean it is slower than <code>typeof</code>. By buggy - we mean that some values (like Promises, the global object, iterators, dataviews, a bunch of HTML elements) all report different things in different browsers.</p>\\n<p><code>type-detect</code> fixes all of the shortcomings with <code>Object.prototype.toString</code>. We have extra code to speed up checks of JS and DOM objects, as much as 20-30x faster for some values. <code>type-detect</code> also fixes any consistencies with these objects.</p>\\n<h2>Installation</h2>\\n<h3>Node.js</h3>\\n<p><code>type-detect</code> is available on <a href=\\\"http://npmjs.org\\\">npm</a>. To install it, type:</p>\\n<pre><code>$ npm install type-detect\\n</code></pre>\\n<h3>Browsers</h3>\\n<p>You can also use it within the browser; install via npm and use the <code>type-detect.js</code> file found within the download. For example:</p>\\n<pre><code class=\\\"language-html\\\">&#x3C;script src=\\\"./node_modules/type-detect/type-detect.js\\\">&#x3C;/script>\\n</code></pre>\\n<h2>Usage</h2>\\n<p>The primary export of <code>type-detect</code> is function that can serve as a replacement for <code>typeof</code>. The results of this function will be more specific than that of native <code>typeof</code>.</p>\\n<pre><code class=\\\"language-js\\\">var type = require('type-detect');\\n</code></pre>\\n<h4>array</h4>\\n<pre><code class=\\\"language-js\\\">assert(type([]) === 'Array');\\nassert(type(new Array()) === 'Array');\\n</code></pre>\\n<h4>regexp</h4>\\n<pre><code class=\\\"language-js\\\">assert(type(/a-z/gi) === 'RegExp');\\nassert(type(new RegExp('a-z')) === 'RegExp');\\n</code></pre>\\n<h4>function</h4>\\n<pre><code class=\\\"language-js\\\">assert(type(function () {}) === 'function');\\n</code></pre>\\n<h4>arguments</h4>\\n<pre><code class=\\\"language-js\\\">(function () {\\n  assert(type(arguments) === 'Arguments');\\n})();\\n</code></pre>\\n<h4>date</h4>\\n<pre><code class=\\\"language-js\\\">assert(type(new Date) === 'Date');\\n</code></pre>\\n<h4>number</h4>\\n<pre><code class=\\\"language-js\\\">assert(type(1) === 'number');\\nassert(type(1.234) === 'number');\\nassert(type(-1) === 'number');\\nassert(type(-1.234) === 'number');\\nassert(type(Infinity) === 'number');\\nassert(type(NaN) === 'number');\\nassert(type(new Number(1)) === 'Number'); // note - the object version has a capital N\\n</code></pre>\\n<h4>string</h4>\\n<pre><code class=\\\"language-js\\\">assert(type('hello world') === 'string');\\nassert(type(new String('hello')) === 'String'); // note - the object version has a capital S\\n</code></pre>\\n<h4>null</h4>\\n<pre><code class=\\\"language-js\\\">assert(type(null) === 'null');\\nassert(type(undefined) !== 'null');\\n</code></pre>\\n<h4>undefined</h4>\\n<pre><code class=\\\"language-js\\\">assert(type(undefined) === 'undefined');\\nassert(type(null) !== 'undefined');\\n</code></pre>\\n<h4>object</h4>\\n<pre><code class=\\\"language-js\\\">var Noop = function () {};\\nassert(type({}) === 'Object');\\nassert(type(Noop) !== 'Object');\\nassert(type(new Noop) === 'Object');\\nassert(type(new Object) === 'Object');\\n</code></pre>\\n<h4>ECMA6 Types</h4>\\n<p>All new ECMAScript 2015 objects are also supported, such as Promises and Symbols:</p>\\n<pre><code class=\\\"language-js\\\">assert(type(new Map() === 'Map');\\nassert(type(new WeakMap()) === 'WeakMap');\\nassert(type(new Set()) === 'Set');\\nassert(type(new WeakSet()) === 'WeakSet');\\nassert(type(Symbol()) === 'symbol');\\nassert(type(new Promise(callback) === 'Promise');\\nassert(type(new Int8Array()) === 'Int8Array');\\nassert(type(new Uint8Array()) === 'Uint8Array');\\nassert(type(new UInt8ClampedArray()) === 'Uint8ClampedArray');\\nassert(type(new Int16Array()) === 'Int16Array');\\nassert(type(new Uint16Array()) === 'Uint16Array');\\nassert(type(new Int32Array()) === 'Int32Array');\\nassert(type(new UInt32Array()) === 'Uint32Array');\\nassert(type(new Float32Array()) === 'Float32Array');\\nassert(type(new Float64Array()) === 'Float64Array');\\nassert(type(new ArrayBuffer()) === 'ArrayBuffer');\\nassert(type(new DataView(arrayBuffer)) === 'DataView');\\n</code></pre>\\n<p>Also, if you use <code>Symbol.toStringTag</code> to change an Objects return value of the <code>toString()</code> Method, <code>type()</code> will return this value, e.g:</p>\\n<pre><code class=\\\"language-js\\\">var myObject = {};\\nmyObject[Symbol.toStringTag] = 'myCustomType';\\nassert(type(myObject) === 'myCustomType');\\n</code></pre>\",\"docPath\":\"argo-ci/node_modules/type-detect/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-type-detect-readme-html-68dfce89007eeda1a224.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1 align=\\\"center\\\">\\n  <a href=\\\"http://chaijs.com\\\" title=\\\"Chai Documentation\\\">\\n    <img alt=\\\"ChaiJS\\\" src=\\\"http://chaijs.com/img/chai-logo.png\\\"> type-detect\\n  </a>\\n</h1>\\n<br>\\n<p align=\\\"center\\\">\\n  Improved typeof detection for <a href=\\\"http://nodejs.org\\\">node</a> and the browser.\\n</p>\\n<p align=\\\"center\\\">\\n  <a href=\\\"./LICENSE\\\">\\n    <img alt=\\\"license:mit\\\" src=\\\"https://img.shields.io/badge/license-mit-green.svg?style=flat-square\\\">\\n  </a>\\n  <a href=\\\"https://github.com/chaijs/type-detect/releases\\\">\\n    <img alt=\\\"tag:?\\\" src=\\\"https://img.shields.io/github/tag/chaijs/type-detect.svg?style=flat-square\\\">\\n  </a>\\n  <a href=\\\"https://travis-ci.org/chaijs/type-detect\\\">\\n    <img alt=\\\"build:?\\\" src=\\\"https://img.shields.io/travis/chaijs/type-detect/master.svg?style=flat-square\\\">\\n  </a>\\n  <a href=\\\"https://coveralls.io/r/chaijs/type-detect\\\">\\n    <img alt=\\\"coverage:?\\\" src=\\\"https://img.shields.io/coveralls/chaijs/type-detect/master.svg?style=flat-square\\\">\\n  </a>\\n  <a href=\\\"https://www.npmjs.com/packages/type-detect\\\">\\n    <img alt=\\\"npm:?\\\" src=\\\"https://img.shields.io/npm/v/type-detect.svg?style=flat-square\\\">\\n  </a>\\n  <a href=\\\"https://www.npmjs.com/packages/type-detect\\\">\\n    <img alt=\\\"dependencies:?\\\" src=\\\"https://img.shields.io/npm/dm/type-detect.svg?style=flat-square\\\">\\n  </a>\\n  <a href=\\\"\\\">\\n    <img alt=\\\"devDependencies:?\\\" src=\\\"https://img.shields.io/david/chaijs/type-detect.svg?style=flat-square\\\">\\n  </a>\\n  <br>\\n  <table>\\n  <tbody><tr><th colspan=\\\"6\\\">Supported Browsers</th></tr> <tr>\\n  <th align=\\\"center\\\"><img src=\\\"https://camo.githubusercontent.com/ab586f11dfcb49bf5f2c2fa9adadc5e857de122a/687474703a2f2f73766773686172652e636f6d2f692f3278532e737667\\\" alt=\\\"\\\"> Chrome</th>\\n  <th align=\\\"center\\\"><img src=\\\"https://camo.githubusercontent.com/98cca3108c18dcfaa62667b42046540c6822cdac/687474703a2f2f73766773686172652e636f6d2f692f3279352e737667\\\" alt=\\\"\\\"> Edge</th>\\n  <th align=\\\"center\\\"><img src=\\\"https://camo.githubusercontent.com/acdcb09840a9e1442cbaf1b684f95ab3c3f41cf4/687474703a2f2f73766773686172652e636f6d2f692f3279462e737667\\\" alt=\\\"\\\"> Firefox</th>\\n  <th align=\\\"center\\\"><img src=\\\"https://camo.githubusercontent.com/728f8cb0bee9ed58ab85e39266f1152c53e0dffd/687474703a2f2f73766773686172652e636f6d2f692f3278342e737667\\\" alt=\\\"\\\"> Safari</th>\\n  <th align=\\\"center\\\"><img src=\\\"https://camo.githubusercontent.com/96a2317034dee0040d0a762e7a30c3c650c45aac/687474703a2f2f73766773686172652e636f6d2f692f3279532e737667\\\" alt=\\\"\\\"> IE</th>\\n  </tr><tr>\\n  <td align=\\\"center\\\">&#x2705;</td>\\n  <td align=\\\"center\\\">&#x2705;</td>\\n  <td align=\\\"center\\\">&#x2705;</td>\\n  <td align=\\\"center\\\">&#x2705;</td>\\n  <td align=\\\"center\\\">9, 10, 11</td>\\n  </tr>\\n  </tbody></table>\\n  <br>\\n  <a href=\\\"https://chai-slack.herokuapp.com/\\\">\\n    <img alt=\\\"Join the Slack chat\\\" src=\\\"https://img.shields.io/badge/slack-join%20chat-E2206F.svg?style=flat-square\\\">\\n  </a>\\n  <a href=\\\"https://gitter.im/chaijs/chai\\\">\\n    <img alt=\\\"Join the Gitter chat\\\" src=\\\"https://img.shields.io/badge/gitter-join%20chat-D0104D.svg?style=flat-square\\\">\\n  </a>\\n</p>\\n<h2>What is Type-Detect?</h2>\\n<p>Type Detect is a module which you can use to detect the type of a given object. It returns a string representation of the object's type, either using <a href=\\\"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-typeof-operator\\\"><code>typeof</code></a> or <a href=\\\"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-symbol.tostringtag\\\"><code>@@toStringTag</code></a>. It also normalizes some object names for consistency among browsers.</p>\\n<h2>Why?</h2>\\n<p>The <code>typeof</code> operator will only specify primitive values; everything else is <code>\\\"object\\\"</code> (including <code>null</code>, arrays, regexps, etc). Many developers use <code>Object.prototype.toString()</code> - which is a fine alternative and returns many more types (null returns <code>[object Null]</code>, Arrays as <code>[object Array]</code>, regexps as <code>[object RegExp]</code> etc). </p>\\n<p>Sadly, <code>Object.prototype.toString</code> is slow, and buggy. By slow - we mean it is slower than <code>typeof</code>. By buggy - we mean that some values (like Promises, the global object, iterators, dataviews, a bunch of HTML elements) all report different things in different browsers.</p>\\n<p><code>type-detect</code> fixes all of the shortcomings with <code>Object.prototype.toString</code>. We have extra code to speed up checks of JS and DOM objects, as much as 20-30x faster for some values. <code>type-detect</code> also fixes any consistencies with these objects.</p>\\n<h2>Installation</h2>\\n<h3>Node.js</h3>\\n<p><code>type-detect</code> is available on <a href=\\\"http://npmjs.org\\\">npm</a>. To install it, type:</p>\\n<pre><code>$ npm install type-detect\\n</code></pre>\\n<h3>Browsers</h3>\\n<p>You can also use it within the browser; install via npm and use the <code>type-detect.js</code> file found within the download. For example:</p>\\n<pre><code class=\\\"language-html\\\">&#x3C;script src=\\\"./node_modules/type-detect/type-detect.js\\\">&#x3C;/script>\\n</code></pre>\\n<h2>Usage</h2>\\n<p>The primary export of <code>type-detect</code> is function that can serve as a replacement for <code>typeof</code>. The results of this function will be more specific than that of native <code>typeof</code>.</p>\\n<pre><code class=\\\"language-js\\\">var type = require('type-detect');\\n</code></pre>\\n<h4>array</h4>\\n<pre><code class=\\\"language-js\\\">assert(type([]) === 'Array');\\nassert(type(new Array()) === 'Array');\\n</code></pre>\\n<h4>regexp</h4>\\n<pre><code class=\\\"language-js\\\">assert(type(/a-z/gi) === 'RegExp');\\nassert(type(new RegExp('a-z')) === 'RegExp');\\n</code></pre>\\n<h4>function</h4>\\n<pre><code class=\\\"language-js\\\">assert(type(function () {}) === 'function');\\n</code></pre>\\n<h4>arguments</h4>\\n<pre><code class=\\\"language-js\\\">(function () {\\n  assert(type(arguments) === 'Arguments');\\n})();\\n</code></pre>\\n<h4>date</h4>\\n<pre><code class=\\\"language-js\\\">assert(type(new Date) === 'Date');\\n</code></pre>\\n<h4>number</h4>\\n<pre><code class=\\\"language-js\\\">assert(type(1) === 'number');\\nassert(type(1.234) === 'number');\\nassert(type(-1) === 'number');\\nassert(type(-1.234) === 'number');\\nassert(type(Infinity) === 'number');\\nassert(type(NaN) === 'number');\\nassert(type(new Number(1)) === 'Number'); // note - the object version has a capital N\\n</code></pre>\\n<h4>string</h4>\\n<pre><code class=\\\"language-js\\\">assert(type('hello world') === 'string');\\nassert(type(new String('hello')) === 'String'); // note - the object version has a capital S\\n</code></pre>\\n<h4>null</h4>\\n<pre><code class=\\\"language-js\\\">assert(type(null) === 'null');\\nassert(type(undefined) !== 'null');\\n</code></pre>\\n<h4>undefined</h4>\\n<pre><code class=\\\"language-js\\\">assert(type(undefined) === 'undefined');\\nassert(type(null) !== 'undefined');\\n</code></pre>\\n<h4>object</h4>\\n<pre><code class=\\\"language-js\\\">var Noop = function () {};\\nassert(type({}) === 'Object');\\nassert(type(Noop) !== 'Object');\\nassert(type(new Noop) === 'Object');\\nassert(type(new Object) === 'Object');\\n</code></pre>\\n<h4>ECMA6 Types</h4>\\n<p>All new ECMAScript 2015 objects are also supported, such as Promises and Symbols:</p>\\n<pre><code class=\\\"language-js\\\">assert(type(new Map() === 'Map');\\nassert(type(new WeakMap()) === 'WeakMap');\\nassert(type(new Set()) === 'Set');\\nassert(type(new WeakSet()) === 'WeakSet');\\nassert(type(Symbol()) === 'symbol');\\nassert(type(new Promise(callback) === 'Promise');\\nassert(type(new Int8Array()) === 'Int8Array');\\nassert(type(new Uint8Array()) === 'Uint8Array');\\nassert(type(new UInt8ClampedArray()) === 'Uint8ClampedArray');\\nassert(type(new Int16Array()) === 'Int16Array');\\nassert(type(new Uint16Array()) === 'Uint16Array');\\nassert(type(new Int32Array()) === 'Int32Array');\\nassert(type(new UInt32Array()) === 'Uint32Array');\\nassert(type(new Float32Array()) === 'Float32Array');\\nassert(type(new Float64Array()) === 'Float64Array');\\nassert(type(new ArrayBuffer()) === 'ArrayBuffer');\\nassert(type(new DataView(arrayBuffer)) === 'DataView');\\n</code></pre>\\n<p>Also, if you use <code>Symbol.toStringTag</code> to change an Objects return value of the <code>toString()</code> Method, <code>type()</code> will return this value, e.g:</p>\\n<pre><code class=\\\"language-js\\\">var myObject = {};\\nmyObject[Symbol.toStringTag] = 'myCustomType';\\nassert(type(myObject) === 'myCustomType');\\n</code></pre>\",\"docPath\":\"argo-ci/node_modules/type-detect/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-type-detect-readme-html.json\n// module id = 3269\n// module chunks = 63779899755805"],"sourceRoot":""}