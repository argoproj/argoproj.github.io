webpackJsonp([0xf2605a417789],{647:function(e,t){e.exports={pathContext:{docHtml:'<p align="center">\n  <img src="https://github.com/argoproj/argo-events/blob/ebdbdd4a2a8ce47a0fc6e9a6a63531be2c26148a/docs/assets/webhook.png?raw=true" alt="Webhook">\n</p>\n<br/>\n<h1>Webhook</h1>\n<p>The webhook gateway basically runs one or more http servers in a pod.\nThe endpoints that are registered on the http server are controller using gateway configmap.</p>\n<h2>Endpoints</h2>\n<p>Endpoints are activate or deactivated at the runtime. The gateway pod\nis continuously monitros the gateway configmap. If you add a new endpoint entry in configmap, the server will register it as\nactive endpoint and if you remove an endpoint entry, server will mark that endpoint as inactive.</p>\n<h2>How to define an event source in confimap?</h2>\n<p>An entry in the gateway configmap corresponds to <a href="https://github.com/argoproj/argo-events/blob/a913dafbf000eb05401ef2c847b29152af82977f/gateways/common/webhook.go#L32-L44">this</a></p>\n<h3>Example</h3>\n<p>The <a href="../../../examples/gateways/secure-webhook-gateway-configmap.yaml">configmap</a> contains two event source configurations.</p>\n<p>The first entry <code>bar</code> defines the endpoint <code>/bar</code>, the HTTP method that will be allowed for the endpoint and\nthe server port to register the endpoint on. </p>\n<p>The second entry <code>foo</code> defines the endpoint <code>/foo</code>, the HTTP method that will be allowed for the endpoint and\nthe server port to register the endpoint on. </p>\n<p>You would\'ve noticed that the <code>port</code> is different in each configuration. This is because the gateway pod can\nrun multiple http servers.</p>\n<p><strong>But where is the <code>start</code> configuration to run the server?</strong> </p>\n<p>There is no such <code>start</code> configuration that is needed explicitly to start a server.\nIf you define an entry that contains a port which is not defined in any of the previous entries in the configmap, the\ngateway pod will automatically start a http server on that port.</p>\n<h2>Why is there a service spec in gateway spec?</h2>\n<p>Because you probably want to expose the gateway to the outside world as gateway pod running is http server/s.\nIf you don\'t to expose the gateway, just remove the <code>serviceSpec</code>. </p>\n<h2>Setup</h2>\n<p><strong>1. Install  <a href="../../../examples/gateways/webhook-gateway-configmap.yaml">Gateway Configmap</a></strong></p>\n<p><strong>2. Install <a href="../../../examples/gateways/webhook-http.yaml">Gateway</a></strong></p>\n<p>Make sure the gateway pod and service is created.</p>\n<p><strong>3. Install <a href="../../../examples/sensors/webhook-http.yaml">Sensor</a></strong></p>\n<p>Make sure the sensor pod is created.</p>\n<p><strong>4. Trigger Workflow</strong></p>\n<p>Note: the <code>WEBHOOK_SERVICE_URL</code> will differ based on the Kubernetes cluster.</p>\n<pre><code>export WEBHOOK_SERVICE_URL=$(minikube service -n argo-events --url &#x3C;gateway_service_name>)\necho $WEBHOOK_SERVICE_URL\ncurl -d \'{"message":"this is my first webhook"}\' -H "Content-Type: application/json" -X POST $WEBHOOK_SERVICE_URL/foo\n</code></pre>\n<p><b>Note</b>: </p>\n<ul>\n<li>If you are facing an issue getting service url by running <code>minikube service -n argo-events --url &#x3C;gateway_service_name></code>, you can use <code>kubectl port-forward</code></li>\n<li>Open another terminal window and enter <code>kubectl port-forward -n argo-events &#x3C;name_of_the_webhook_gateway_pod> 9003:&#x3C;port_on_which_gateway_server_is_running></code></li>\n<li>You can now use <code>localhost:9003</code> to query webhook gateway</li>\n</ul>\n<h2>Add new endpoints</h2>\n<p>Simply edit the gateway configmap, add the new endpoint entries and save. The gateway\nwill automatically register the new endpoints.</p>\n<h2>Secure connection</h2>\n<p>If you want to have a secure server then you will need to mount the certifactes in the gateway pod and in\nthe configmap entry, set the values for <code>serverCertPath</code> and <code>serverKeyPath</code> accordingly.</p>\n<p>Example: </p>\n<ol>\n<li><a href="../../../examples/gateways/secure-webhook.yaml">Gateway</a></li>\n<li><a href="../../../examples/gateways/secure-webhook-gateway-configmap.yaml">Configmap</a></li>\n</ol>',docPath:"argo-events/gateways/core/webhook/readme",proj:"argo-events"}}}});
//# sourceMappingURL=path---docs-argo-events-gateways-core-webhook-readme-html-da08d8c953048d7deaf2.js.map