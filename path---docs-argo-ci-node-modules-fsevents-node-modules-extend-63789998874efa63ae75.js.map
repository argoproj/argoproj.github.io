{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-fsevents-node-modules-extend-63789998874efa63ae75.js","webpack:///./.cache/json/docs-argo-ci-node-modules-fsevents-node-modules-extend.json"],"names":["webpackJsonp","2437","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,02GAAgjEC,QAAA,2DAAAC,KAAA","file":"path---docs-argo-ci-node-modules-fsevents-node-modules-extend-63789998874efa63ae75.js","sourcesContent":["webpackJsonp([32391523078087],{\n\n/***/ 2437:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<p><a href=\\\"https://travis-ci.org/justmoon/node-extend\\\"><img src=\\\"https://travis-ci.org/justmoon/node-extend.svg\\\" alt=\\\"Build Status\\\"></a>\\n<a href=\\\"https://david-dm.org/justmoon/node-extend\\\"><img src=\\\"https://david-dm.org/justmoon/node-extend.svg\\\" alt=\\\"dependency status\\\"></a>\\n<a href=\\\"https://david-dm.org/justmoon/node-extend#info=devDependencies\\\"><img src=\\\"https://david-dm.org/justmoon/node-extend/dev-status.svg\\\" alt=\\\"dev dependency status\\\"></a></p>\\n<h1>extend() for Node.js <sup><a href=\\\"https://npmjs.org/package/extend\\\"><img src=\\\"http://versionbadg.es/justmoon/node-extend.svg\\\" alt=\\\"Version Badge\\\"></a></sup></h1>\\n<p><code>node-extend</code> is a port of the classic extend() method from jQuery. It behaves as you expect. It is simple, tried and true.</p>\\n<p>Notes:</p>\\n<ul>\\n<li>Since Node.js >= 4,\\n<a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\\\"><code>Object.assign</code></a>\\nnow offers the same functionality natively (but without the \\\"deep copy\\\" option).\\nSee <a href=\\\"https://nodejs.org/en/docs/es6\\\">ECMAScript 2015 (ES6) in Node.js</a>.</li>\\n<li>Some native implementations of <code>Object.assign</code> in both Node.js and many\\nbrowsers (since NPM modules are for the browser too) may not be fully\\nspec-compliant.\\nCheck <a href=\\\"https://www.npmjs.com/package/object.assign\\\"><code>object.assign</code></a> module for\\na compliant candidate.</li>\\n</ul>\\n<h2>Installation</h2>\\n<p>This package is available on <a href=\\\"https://npmjs.org/package/extend\\\">npm</a> as: <code>extend</code></p>\\n<pre><code class=\\\"language-sh\\\">npm install extend\\n</code></pre>\\n<h2>Usage</h2>\\n<p><strong>Syntax:</strong> extend <strong>(</strong> [<code>deep</code>], <code>target</code>, <code>object1</code>, [<code>objectN</code>] <strong>)</strong></p>\\n<p><em>Extend one object with one or more others, returning the modified object.</em></p>\\n<p><strong>Example:</strong></p>\\n<pre><code class=\\\"language-js\\\">var extend = require('extend');\\nextend(targetObject, object1, object2);\\n</code></pre>\\n<p>Keep in mind that the target object will be modified, and will be returned from extend().</p>\\n<p>If a boolean true is specified as the first argument, extend performs a deep copy, recursively copying any objects it finds. Otherwise, the copy will share structure with the original object(s).\\nUndefined properties are not copied. However, properties inherited from the object's prototype will be copied over.\\nWarning: passing <code>false</code> as the first argument is not supported.</p>\\n<h3>Arguments</h3>\\n<ul>\\n<li><code>deep</code> <em>Boolean</em> (optional)\\nIf set, the merge becomes recursive (i.e. deep copy).</li>\\n<li><code>target</code>\\t<em>Object</em>\\nThe object to extend.</li>\\n<li><code>object1</code>\\t<em>Object</em>\\nThe object that will be merged into the first.</li>\\n<li><code>objectN</code> <em>Object</em> (Optional)\\nMore objects to merge into the first.</li>\\n</ul>\\n<h2>License</h2>\\n<p><code>node-extend</code> is licensed under the <a href=\\\"http://opensource.org/licenses/MIT\\\">MIT License</a>.</p>\\n<h2>Acknowledgements</h2>\\n<p>All credit to the jQuery authors for perfecting this amazing utility.</p>\\n<p>Ported to Node.js by <a href=\\\"https://github.com/justmoon\\\">Stefan Thomas</a> with contributions by <a href=\\\"https://github.com/insin\\\">Jonathan Buchanan</a> and <a href=\\\"https://github.com/ljharb\\\">Jordan Harband</a>.</p>\",\"docPath\":\"argo-ci/node_modules/fsevents/node_modules/extend/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-fsevents-node-modules-extend-63789998874efa63ae75.js","module.exports = {\"pathContext\":{\"docHtml\":\"<p><a href=\\\"https://travis-ci.org/justmoon/node-extend\\\"><img src=\\\"https://travis-ci.org/justmoon/node-extend.svg\\\" alt=\\\"Build Status\\\"></a>\\n<a href=\\\"https://david-dm.org/justmoon/node-extend\\\"><img src=\\\"https://david-dm.org/justmoon/node-extend.svg\\\" alt=\\\"dependency status\\\"></a>\\n<a href=\\\"https://david-dm.org/justmoon/node-extend#info=devDependencies\\\"><img src=\\\"https://david-dm.org/justmoon/node-extend/dev-status.svg\\\" alt=\\\"dev dependency status\\\"></a></p>\\n<h1>extend() for Node.js <sup><a href=\\\"https://npmjs.org/package/extend\\\"><img src=\\\"http://versionbadg.es/justmoon/node-extend.svg\\\" alt=\\\"Version Badge\\\"></a></sup></h1>\\n<p><code>node-extend</code> is a port of the classic extend() method from jQuery. It behaves as you expect. It is simple, tried and true.</p>\\n<p>Notes:</p>\\n<ul>\\n<li>Since Node.js >= 4,\\n<a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\\\"><code>Object.assign</code></a>\\nnow offers the same functionality natively (but without the \\\"deep copy\\\" option).\\nSee <a href=\\\"https://nodejs.org/en/docs/es6\\\">ECMAScript 2015 (ES6) in Node.js</a>.</li>\\n<li>Some native implementations of <code>Object.assign</code> in both Node.js and many\\nbrowsers (since NPM modules are for the browser too) may not be fully\\nspec-compliant.\\nCheck <a href=\\\"https://www.npmjs.com/package/object.assign\\\"><code>object.assign</code></a> module for\\na compliant candidate.</li>\\n</ul>\\n<h2>Installation</h2>\\n<p>This package is available on <a href=\\\"https://npmjs.org/package/extend\\\">npm</a> as: <code>extend</code></p>\\n<pre><code class=\\\"language-sh\\\">npm install extend\\n</code></pre>\\n<h2>Usage</h2>\\n<p><strong>Syntax:</strong> extend <strong>(</strong> [<code>deep</code>], <code>target</code>, <code>object1</code>, [<code>objectN</code>] <strong>)</strong></p>\\n<p><em>Extend one object with one or more others, returning the modified object.</em></p>\\n<p><strong>Example:</strong></p>\\n<pre><code class=\\\"language-js\\\">var extend = require('extend');\\nextend(targetObject, object1, object2);\\n</code></pre>\\n<p>Keep in mind that the target object will be modified, and will be returned from extend().</p>\\n<p>If a boolean true is specified as the first argument, extend performs a deep copy, recursively copying any objects it finds. Otherwise, the copy will share structure with the original object(s).\\nUndefined properties are not copied. However, properties inherited from the object's prototype will be copied over.\\nWarning: passing <code>false</code> as the first argument is not supported.</p>\\n<h3>Arguments</h3>\\n<ul>\\n<li><code>deep</code> <em>Boolean</em> (optional)\\nIf set, the merge becomes recursive (i.e. deep copy).</li>\\n<li><code>target</code>\\t<em>Object</em>\\nThe object to extend.</li>\\n<li><code>object1</code>\\t<em>Object</em>\\nThe object that will be merged into the first.</li>\\n<li><code>objectN</code> <em>Object</em> (Optional)\\nMore objects to merge into the first.</li>\\n</ul>\\n<h2>License</h2>\\n<p><code>node-extend</code> is licensed under the <a href=\\\"http://opensource.org/licenses/MIT\\\">MIT License</a>.</p>\\n<h2>Acknowledgements</h2>\\n<p>All credit to the jQuery authors for perfecting this amazing utility.</p>\\n<p>Ported to Node.js by <a href=\\\"https://github.com/justmoon\\\">Stefan Thomas</a> with contributions by <a href=\\\"https://github.com/insin\\\">Jonathan Buchanan</a> and <a href=\\\"https://github.com/ljharb\\\">Jordan Harband</a>.</p>\",\"docPath\":\"argo-ci/node_modules/fsevents/node_modules/extend/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-fsevents-node-modules-extend.json\n// module id = 2437\n// module chunks = 32391523078087"],"sourceRoot":""}