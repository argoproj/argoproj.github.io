webpackJsonp([0xb95bd98eb39d],{2286:function(a,e){a.exports={pathContext:{docHtml:'<p><a href="https://www.npmjs.com/package/esprima"><img src="https://img.shields.io/npm/v/esprima.svg" alt="NPM version"></a>\n<a href="https://www.npmjs.com/package/esprima"><img src="https://img.shields.io/npm/dm/esprima.svg" alt="npm download"></a>\n<a href="https://travis-ci.org/jquery/esprima"><img src="https://img.shields.io/travis/jquery/esprima/master.svg" alt="Build Status"></a>\n<a href="https://codecov.io/github/jquery/esprima"><img src="https://img.shields.io/codecov/c/github/jquery/esprima/master.svg" alt="Coverage Status"></a></p>\n<p><strong>Esprima</strong> (<a href="http://esprima.org">esprima.org</a>, BSD license) is a high performance,\nstandard-compliant <a href="http://www.ecma-international.org/publications/standards/Ecma-262.htm">ECMAScript</a>\nparser written in ECMAScript (also popularly known as\n<a href="https://en.wikipedia.org/wiki/JavaScript">JavaScript</a>).\nEsprima is created and maintained by <a href="https://twitter.com/ariyahidayat">Ariya Hidayat</a>,\nwith the help of <a href="https://github.com/jquery/esprima/contributors">many contributors</a>.</p>\n<h3>Features</h3>\n<ul>\n<li>Full support for ECMAScript 2017 (<a href="http://www.ecma-international.org/publications/standards/Ecma-262.htm">ECMA-262 8th Edition</a>)</li>\n<li>Sensible <a href="https://github.com/estree/estree/blob/master/es5.md">syntax tree format</a> as standardized by <a href="https://github.com/estree/estree">ESTree project</a></li>\n<li>Experimental support for <a href="https://facebook.github.io/jsx/">JSX</a>, a syntax extension for <a href="https://facebook.github.io/react/">React</a></li>\n<li>Optional tracking of syntax node location (index-based and line-column)</li>\n<li><a href="http://esprima.org/test/ci.html">Heavily tested</a> (~1500 <a href="https://github.com/jquery/esprima/tree/master/test/fixtures">unit tests</a> with <a href="https://codecov.io/github/jquery/esprima">full code coverage</a>)</li>\n</ul>\n<h3>API</h3>\n<p>Esprima can be used to perform <a href="https://en.wikipedia.org/wiki/Lexical_analysis">lexical analysis</a> (tokenization) or <a href="https://en.wikipedia.org/wiki/Parsing">syntactic analysis</a> (parsing) of a JavaScript program.</p>\n<p>A simple example on Node.js REPL:</p>\n<pre><code class="language-javascript">> var esprima = require(\'esprima\');\n> var program = \'const answer = 42\';\n\n> esprima.tokenize(program);\n[ { type: \'Keyword\', value: \'const\' },\n  { type: \'Identifier\', value: \'answer\' },\n  { type: \'Punctuator\', value: \'=\' },\n  { type: \'Numeric\', value: \'42\' } ]\n  \n> esprima.parseScript(program);\n{ type: \'Program\',\n  body:\n   [ { type: \'VariableDeclaration\',\n       declarations: [Object],\n       kind: \'const\' } ],\n  sourceType: \'script\' }\n</code></pre>\n<p>For more information, please read the <a href="http://esprima.org/doc">complete documentation</a>.</p>',docPath:"argo-ci/node_modules/esprima/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-esprima-readme-html-0d9fe2b90e95b29996c8.js.map