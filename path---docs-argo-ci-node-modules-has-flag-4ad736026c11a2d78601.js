webpackJsonp([0x95e50e9e7e90],{2677:function(a,e){a.exports={pathContext:{docHtml:"<h1>has-flag <a href=\"https://travis-ci.org/sindresorhus/has-flag\"><img src=\"https://travis-ci.org/sindresorhus/has-flag.svg?branch=master\" alt=\"Build Status\"></a></h1>\n<blockquote>\n<p>Check if <a href=\"https://nodejs.org/docs/latest/api/process.html#process_process_argv\"><code>argv</code></a> has a specific flag</p>\n</blockquote>\n<p>Correctly stops looking after an <code>--</code> argument terminator.</p>\n<h2>Install</h2>\n<pre><code>$ npm install --save has-flag\n</code></pre>\n<h2>Usage</h2>\n<pre><code class=\"language-js\">// foo.js\nconst hasFlag = require('has-flag');\n\nhasFlag('unicorn');\n//=> true\n\nhasFlag('--unicorn');\n//=> true\n\nhasFlag('-f');\n//=> true\n\nhasFlag('foo=bar');\n//=> true\n\nhasFlag('foo');\n//=> false\n\nhasFlag('rainbow');\n//=> false\n</code></pre>\n<pre><code>$ node foo.js -f --unicorn --foo=bar -- --rainbow\n</code></pre>\n<h2>API</h2>\n<h3>hasFlag(flag, [argv])</h3>\n<p>Returns a boolean whether the flag exists.</p>\n<h4>flag</h4>\n<p>Type: <code>string</code></p>\n<p>CLI flag to look for. The <code>--</code> prefix is optional.</p>\n<h4>argv</h4>\n<p>Type: <code>array</code><br>\nDefault: <code>process.argv</code></p>\n<p>CLI arguments.</p>\n<h2>License</h2>\n<p>MIT Â© <a href=\"https://sindresorhus.com\">Sindre Sorhus</a></p>",docPath:"argo-ci/node_modules/has-flag/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-has-flag-4ad736026c11a2d78601.js.map