{"version":3,"sources":["webpack:///path---docs-argo-ci-node-modules-path-to-regexp-readme-html-1eb80471254b5a53a847.js","webpack:///./.cache/json/docs-argo-ci-node-modules-path-to-regexp-readme-html.json"],"names":["webpackJsonp","3036","module","exports","pathContext","docHtml","docPath","proj"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,QAAA,m6CAAqpCC,QAAA,6CAAAC,KAAA","file":"path---docs-argo-ci-node-modules-path-to-regexp-readme-html-1eb80471254b5a53a847.js","sourcesContent":["webpackJsonp([250799161752920],{\n\n/***/ 3036:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"docHtml\":\"<h1>Path-to-RegExp</h1>\\n<p>Turn an Express-style path string such as <code>/user/:name</code> into a regular expression.</p>\\n<p><strong>Note:</strong> This is a legacy branch. You should upgrade to <code>1.x</code>.</p>\\n<h2>Usage</h2>\\n<pre><code class=\\\"language-javascript\\\">var pathToRegexp = require('path-to-regexp');\\n</code></pre>\\n<h3>pathToRegexp(path, keys, options)</h3>\\n<ul>\\n<li><strong>path</strong> A string in the express format, an array of such strings, or a regular expression</li>\\n<li><strong>keys</strong> An array to be populated with the keys present in the url.  Once the function completes, this will be an array of strings.</li>\\n<li>\\n<p><strong>options</strong></p>\\n<ul>\\n<li><strong>options.sensitive</strong> Defaults to false, set this to true to make routes case sensitive</li>\\n<li><strong>options.strict</strong> Defaults to false, set this to true to make the trailing slash matter.</li>\\n<li><strong>options.end</strong> Defaults to true, set this to false to only match the prefix of the URL.</li>\\n</ul>\\n</li>\\n</ul>\\n<pre><code class=\\\"language-javascript\\\">var keys = [];\\nvar exp = pathToRegexp('/foo/:bar', keys);\\n//keys = ['bar']\\n//exp = /^\\\\/foo\\\\/(?:([^\\\\/]+?))\\\\/?$/i\\n</code></pre>\\n<h2>Live Demo</h2>\\n<p>You can see a live demo of this library in use at <a href=\\\"http://forbeslindesay.github.com/express-route-tester/\\\">express-route-tester</a>.</p>\\n<h2>License</h2>\\n<p>  MIT</p>\",\"docPath\":\"argo-ci/node_modules/path-to-regexp/readme\",\"proj\":\"argo-ci\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-argo-ci-node-modules-path-to-regexp-readme-html-1eb80471254b5a53a847.js","module.exports = {\"pathContext\":{\"docHtml\":\"<h1>Path-to-RegExp</h1>\\n<p>Turn an Express-style path string such as <code>/user/:name</code> into a regular expression.</p>\\n<p><strong>Note:</strong> This is a legacy branch. You should upgrade to <code>1.x</code>.</p>\\n<h2>Usage</h2>\\n<pre><code class=\\\"language-javascript\\\">var pathToRegexp = require('path-to-regexp');\\n</code></pre>\\n<h3>pathToRegexp(path, keys, options)</h3>\\n<ul>\\n<li><strong>path</strong> A string in the express format, an array of such strings, or a regular expression</li>\\n<li><strong>keys</strong> An array to be populated with the keys present in the url.  Once the function completes, this will be an array of strings.</li>\\n<li>\\n<p><strong>options</strong></p>\\n<ul>\\n<li><strong>options.sensitive</strong> Defaults to false, set this to true to make routes case sensitive</li>\\n<li><strong>options.strict</strong> Defaults to false, set this to true to make the trailing slash matter.</li>\\n<li><strong>options.end</strong> Defaults to true, set this to false to only match the prefix of the URL.</li>\\n</ul>\\n</li>\\n</ul>\\n<pre><code class=\\\"language-javascript\\\">var keys = [];\\nvar exp = pathToRegexp('/foo/:bar', keys);\\n//keys = ['bar']\\n//exp = /^\\\\/foo\\\\/(?:([^\\\\/]+?))\\\\/?$/i\\n</code></pre>\\n<h2>Live Demo</h2>\\n<p>You can see a live demo of this library in use at <a href=\\\"http://forbeslindesay.github.com/express-route-tester/\\\">express-route-tester</a>.</p>\\n<h2>License</h2>\\n<p>  MIT</p>\",\"docPath\":\"argo-ci/node_modules/path-to-regexp/readme\",\"proj\":\"argo-ci\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-argo-ci-node-modules-path-to-regexp-readme-html.json\n// module id = 3036\n// module chunks = 250799161752920"],"sourceRoot":""}