webpackJsonp([0x7a2c9de851ae],{3069:function(e,t){e.exports={pathContext:{docHtml:"<h1>is-number <a href=\"https://www.npmjs.com/package/is-number\"><img src=\"https://img.shields.io/npm/v/is-number.svg?style=flat\" alt=\"NPM version\"></a> <a href=\"https://npmjs.org/package/is-number\"><img src=\"https://img.shields.io/npm/dm/is-number.svg?style=flat\" alt=\"NPM downloads\"></a> <a href=\"https://travis-ci.org/jonschlinkert/is-number\"><img src=\"https://img.shields.io/travis/jonschlinkert/is-number.svg?style=flat\" alt=\"Build Status\"></a></h1>\n<blockquote>\n<p>Returns true if the value is a number. comprehensive tests.</p>\n</blockquote>\n<h2>Install</h2>\n<p>Install with <a href=\"https://www.npmjs.com/\">npm</a>:</p>\n<pre><code class=\"language-sh\">$ npm install --save is-number\n</code></pre>\n<h2>Usage</h2>\n<p>To understand some of the rationale behind the decisions made in this library (and to learn about some oddities of number evaluation in JavaScript), <a href=\"https://gist.github.com/jonschlinkert/e30c70c713da325d0e81\">see this gist</a>.</p>\n<pre><code class=\"language-js\">var isNumber = require('is-number');\n</code></pre>\n<h3>true</h3>\n<p>See the <a href=\"./test.js\">tests</a> for more examples.</p>\n<pre><code class=\"language-js\">isNumber(5e3)      //=> 'true'\nisNumber(0xff)     //=> 'true'\nisNumber(-1.1)     //=> 'true'\nisNumber(0)        //=> 'true'\nisNumber(1)        //=> 'true'\nisNumber(1.1)      //=> 'true'\nisNumber(10)       //=> 'true'\nisNumber(10.10)    //=> 'true'\nisNumber(100)      //=> 'true'\nisNumber('-1.1')   //=> 'true'\nisNumber('0')      //=> 'true'\nisNumber('012')    //=> 'true'\nisNumber('0xff')   //=> 'true'\nisNumber('1')      //=> 'true'\nisNumber('1.1')    //=> 'true'\nisNumber('10')     //=> 'true'\nisNumber('10.10')  //=> 'true'\nisNumber('100')    //=> 'true'\nisNumber('5e3')    //=> 'true'\nisNumber(parseInt('012'))   //=> 'true'\nisNumber(parseFloat('012')) //=> 'true'\n</code></pre>\n<h3>False</h3>\n<p>See the <a href=\"./test.js\">tests</a> for more examples.</p>\n<pre><code class=\"language-js\">isNumber('foo')             //=> 'false'\nisNumber([1])               //=> 'false'\nisNumber([])                //=> 'false'\nisNumber(function () {})    //=> 'false'\nisNumber(Infinity)          //=> 'false'\nisNumber(NaN)               //=> 'false'\nisNumber(new Array('abc'))  //=> 'false'\nisNumber(new Array(2))      //=> 'false'\nisNumber(new Buffer('abc')) //=> 'false'\nisNumber(null)              //=> 'false'\nisNumber(undefined)         //=> 'false'\nisNumber({abc: 'abc'})      //=> 'false'\n</code></pre>\n<h2>About</h2>\n<h3>Related projects</h3>\n<ul>\n<li><a href=\"https://www.npmjs.com/package/even\">even</a>: Get the even numbered items from an array. | <a href=\"https://github.com/jonschlinkert/even\" title=\"Get the even numbered items from an array.\">homepage</a></li>\n<li><a href=\"https://www.npmjs.com/package/is-even\">is-even</a>: Return true if the given number is even. | <a href=\"https://github.com/jonschlinkert/is-even\" title=\"Return true if the given number is even.\">homepage</a></li>\n<li><a href=\"https://www.npmjs.com/package/is-odd\">is-odd</a>: Returns true if the given number is odd. | <a href=\"https://github.com/jonschlinkert/is-odd\" title=\"Returns true if the given number is odd.\">homepage</a></li>\n<li><a href=\"https://www.npmjs.com/package/is-primitive\">is-primitive</a>: Returns <code>true</code> if the value is a primitive.  | <a href=\"https://github.com/jonschlinkert/is-primitive\" title=\"Returns &#x60;true&#x60; if the value is a primitive. \">homepage</a></li>\n<li><a href=\"https://www.npmjs.com/package/kind-of\">kind-of</a>: Get the native type of a value. | <a href=\"https://github.com/jonschlinkert/kind-of\" title=\"Get the native type of a value.\">homepage</a></li>\n<li><a href=\"https://www.npmjs.com/package/odd\">odd</a>: Get the odd numbered items from an array. | <a href=\"https://github.com/jonschlinkert/odd\" title=\"Get the odd numbered items from an array.\">homepage</a></li>\n</ul>\n<h3>Contributing</h3>\n<p>Pull requests and stars are always welcome. For bugs and feature requests, <a href=\"../../issues/new\">please create an issue</a>.</p>\n<h3>Building docs</h3>\n<p><em>(This document was generated by <a href=\"https://github.com/verbose/verb-generate-readme\">verb-generate-readme</a> (a <a href=\"https://github.com/verbose/verb\">verb</a> generator), please don't edit the readme directly. Any changes to the readme must be made in <a href=\".verb.html\">.verb.md</a>.)</em></p>\n<p>To generate the readme and API documentation with <a href=\"https://github.com/verbose/verb\">verb</a>:</p>\n<pre><code class=\"language-sh\">$ npm install -g verb verb-generate-readme &#x26;&#x26; verb\n</code></pre>\n<h3>Running tests</h3>\n<p>Install dev dependencies:</p>\n<pre><code class=\"language-sh\">$ npm install -d &#x26;&#x26; npm test\n</code></pre>\n<h3>Author</h3>\n<p><strong>Jon Schlinkert</strong></p>\n<ul>\n<li><a href=\"https://github.com/jonschlinkert\">github/jonschlinkert</a></li>\n<li><a href=\"http://twitter.com/jonschlinkert\">twitter/jonschlinkert</a></li>\n</ul>\n<h3>License</h3>\n<p>Copyright Â© 2016, <a href=\"https://github.com/jonschlinkert\">Jon Schlinkert</a>.\nReleased under the <a href=\"https://github.com/jonschlinkert/is-number/blob/master/LICENSE\">MIT license</a>.</p>\n<hr>\n<p><em>This file was generated by <a href=\"https://github.com/verbose/verb-generate-readme\">verb-generate-readme</a>, v0.1.30, on September 10, 2016.</em></p>",docPath:"argo-ci/node_modules/randomatic/node_modules/is-number/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-randomatic-node-modules-is-number-a99557c332f215a53015.js.map