webpackJsonp([0xc03e1ecea5cb],{2139:function(e,n){e.exports={pathContext:{docHtml:'<h1>Release Notes</h1>\n<h2>Note</h2>\n<p>As of 3.0.0, the ReleaseNotes.md file has been deprecated. <a href="https://github.com/chaijs/chai/releases">Please refer to the release notes available on Github</a>. Or\n<a href="https://chaijs.com/releases">the release notes on the chaijs.com website</a>.</p>\n<hr>\n<h2>2.3.0 / 2015-04-26</h2>\n<p>Added <code>ownPropertyDescriptor</code> assertion:</p>\n<pre><code class="language-js">expect(\'test\').to.have.ownPropertyDescriptor(\'length\');\nexpect(\'test\').to.have.ownPropertyDescriptor(\'length\', { enumerable: false, configurable: false, writable: false, value: 4 });\nexpect(\'test\').not.to.have.ownPropertyDescriptor(\'length\', { enumerable: false, configurable: false, writable: false, value: 3 });\nexpect(\'test\').ownPropertyDescriptor(\'length\').to.have.property(\'enumerable\', false);\nexpect(\'test\').ownPropertyDescriptor(\'length\').to.have.keys(\'value\');\n</code></pre>\n<h3>Community Contributions</h3>\n<h4>Code Features &#x26; Fixes</h4>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/408">#408</a> Add <code>ownPropertyDescriptor</code>\nassertion.\nBy <a href="https://github.com/ljharb">@ljharb</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/422">#422</a> Improve ownPropertyDescriptor\ntests.\nBy <a href="https://github.com/ljharb">@ljharb</a></li>\n</ul>\n<h4>Documentation fixes</h4>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/417">#417</a> Fix documentation typo\nBy <a href="https://github.com/astorije">@astorije</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/423">#423</a> Fix inconsistency in docs.\nBy <a href="https://github.com/ehntoo">@ehntoo</a></li>\n</ul>\n<h2>2.2.0 / 2015-03-26</h2>\n<p>Deep property strings can now be escaped using <code>\\\\</code> - for example:</p>\n<pre><code class="language-js">var deepCss = { \'.link\': { \'[target]\': 42 }};\nexpect(deepCss).to.have.deep.property(\'\\\\.link.\\\\[target\\\\]\', 42)\n</code></pre>\n<h3>Community Contributions</h3>\n<h4>Code Features &#x26; Fixes</h4>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/402">#402</a> Allow escaping of deep\nproperty keys.\nBy <a href="https://github.com/umireon">@umireon</a></li>\n</ul>\n<h4>Documentation fixes</h4>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/405">#405</a> Tweak documentation around\ndeep property escaping.\nBy <a href="https://github.com/keithamus">@keithamus</a></li>\n</ul>\n<h2>2.1.2 / 2015-03-15</h2>\n<p>A minor bug fix. No new features.</p>\n<h3>Community Contributions</h3>\n<h4>Code Features &#x26; Fixes</h4>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/395">#395</a> Fix eval-related bugs with\nassert.operator (<a href="https://github.com/chaijs/chai/pull/386">#386</a>).\nBy <a href="https://github.com/cjqed">@cjqed</a></li>\n</ul>\n<h2>2.1.1 / 2015-03-04</h2>\n<p>Two minor bugfixes. No new features.</p>\n<h3>Community Contributions</h3>\n<h4>Code Features &#x26; Fixes</h4>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/385">#385</a> Fix a bug (also described in\n<a href="https://github.com/chaijs/chai/pull/385">#387</a>) where <code>deep.property</code> would not work with single\nkey names. By <a href="https://github.com/eldritch-fossicker">@eldritch-fossicker</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/379">#379</a> Fix bug where tools which overwrite\nprimitive prototypes, such as Babel or core-js would fail.\nBy <a href="https://github.com/dcneiner">@dcneiner</a></li>\n</ul>\n<h4>Documentation fixes</h4>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/382">#382</a> Add doc for showDiff argument in assert.\nBy <a href="https://github.com/astorije">@astorije</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/383">#383</a> Improve wording for truncateTreshold docs\nBy <a href="https://github.com/gurdiga">@gurdiga</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/381">#381</a> Improve wording for assert.empty docs\nBy <a href="https://github.com/astorije">@astorije</a></li>\n</ul>\n<h2>2.1.0 / 2015-02-23</h2>\n<p>Small release; fixes an issue where the Chai lib was incorrectly reporting the\nversion number.</p>\n<p>Adds new <code>should.fail()</code> and <code>expect.fail()</code> methods, which are convinience\nmethods to throw Assertion Errors.</p>\n<h3>Community Contributions</h3>\n<h4>Code Features &#x26; Fixes</h4>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/356">#356</a> Add should.fail(), expect.fail(). By <a href="https://github.com/Soviut">@Soviut</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/374">#374</a> Increment version. By <a href="https://github.com/jmm">@jmm</a></li>\n</ul>\n<h2>2.0.0 / 2015-02-09</h2>\n<p>Unfortunately with 1.10.0 - compatibility broke with older versions because of\nthe <code>addChainableNoop</code>. This change has been reverted.</p>\n<p>Any plugins using <code>addChainableNoop</code> should cease to do so.</p>\n<p>Any developers wishing for this behaviour can use <a href="https://www.npmjs.com/package/dirty-chai">dirty-chai</a>\nby <a href="https://github.com/joshperry">@joshperry</a></p>\n<h3>Community Contributions</h3>\n<h4>Code Features &#x26; Fixes</h4>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/361">#361</a> <code>.keys()</code> now accepts Objects, extracting keys from them. By <a href="https://github.com/gregglind">@gregglind</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/359">#359</a> <code>.keys()</code> no longer mutates passed arrays. By <a href="https://github.com/gregglind">@gregglind</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/349">#349</a> Add a new chainable keyword - <code>.which</code>. By <a href="https://github.com/toastynerd">@toastynerd</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/333">#333</a> Add <code>.change</code>, <code>.increase</code> and <code>.decrease</code> assertions. By <a href="https://github.com/cmpolis">@cmpolis</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/335">#335</a> <code>chai.util</code> is now exposed <a href="https://github.com/DingoEatingFuzz">@DingoEatingFuzz</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/328">#328</a> Add <code>.includes</code> and <code>.contains</code> aliases (for <code>.include</code> and <code>.contain</code>). By <a href="https://github.com/lo1tuma">@lo1tuma</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/313">#313</a> Add <code>.any.keys()</code> and <code>.all.keys()</code> qualifiers. By <a href="https://github.com/cjqed">@cjqed</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/312">#312</a> Add <code>assert.sameDeepMembers()</code>. By <a href="https://github.com/cjqed">@cjqed</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/311">#311</a> Add <code>assert.isAbove()</code> and <code>assert.isBelow()</code>. By <a href="https://github.com/cjqed">@cjqed</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/308">#308</a> <code>property</code> and <code>deep.property</code> now pass if a value is set to <code>undefined</code>. By <a href="https://github.com/prodatakey">@prodatakey</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/309">#309</a> optimize deep equal in Arrays. By <a href="https://github.com/ericdouglas">@ericdouglas</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/306">#306</a> revert #297 - allowing lint-friendly tests. By <a href="https://github.com/keithamus">@keithamus</a></li>\n</ul>\n<h4>Documentation fixes</h4>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/357">#357</a> Copyright year updated in docs. By <a href="https://github.com/danilovaz">@danilovaz</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/325">#325</a> Fix documentation for overwriteChainableMethod. By <a href="https://github.com/chasenlehara">@chasenlehara</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/334">#334</a> Typo fix. By <a href="https://github.com/hurrymaplelad">@hurrymaplelad</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/317">#317</a> Typo fix. By <a href="https://github.com/jasonkarns">@jasonkarns</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/318">#318</a> Typo fix. By <a href="https://github.com/jasonkarns">@jasonkarns</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/316">#316</a> Typo fix. By <a href="https://github.com/jasonkarns">@jasonkarns</a></li>\n</ul>\n<h2>1.10.0 / 2014-11-10</h2>\n<p>The following changes are required if you are upgrading from the previous version:</p>\n<ul>\n<li>\n<p><strong>Users:</strong></p>\n<ul>\n<li>No changes required</li>\n</ul>\n</li>\n<li>\n<p><strong>Plugin Developers:</strong></p>\n<ul>\n<li>Review <code>addChainableNoop</code> notes below.</li>\n</ul>\n</li>\n<li>\n<p><strong>Core Contributors:</strong></p>\n<ul>\n<li>Refresh <code>node_modules</code> folder for updated dependencies.</li>\n</ul>\n</li>\n</ul>\n<h3>Noop Function for Terminating Assertion Properties</h3>\n<p>The following assertions can now also be used in the function-call form:</p>\n<ul>\n<li>ok</li>\n<li>true</li>\n<li>false</li>\n<li>null</li>\n<li>undefined</li>\n<li>exist</li>\n<li>empty</li>\n<li>arguments</li>\n<li>Arguments</li>\n</ul>\n<p>The above list of assertions are property getters that assert immediately on\naccess. Because of that, they were written to be used by terminating the assertion\nchain with a property access.</p>\n<pre><code class="language-js">expect(true).to.be.true;\nfoo.should.be.ok;\n</code></pre>\n<p>This syntax is definitely aesthetically pleasing but, if you are linting your\ntest code, your linter will complain with an error something like "Expected an\nassignment or function call and instead saw an expression." Since the linter\ndoesn\'t know about the property getter it assumes this line has no side-effects,\nand throws a warning in case you made a mistake.</p>\n<p>Squelching these errors is not a good solution as test code is getting to be\njust as important as, if not more than, production code. Catching syntactical\nerrors in tests using static analysis is a great tool to help make sure that your\ntests are well-defined and free of typos.</p>\n<p>A better option was to provide a function-call form for these assertions so that\nthe code\'s intent is more clear and the linters stop complaining about something\nlooking off. This form is added in addition to the existing property access form\nand does not impact existing test code.</p>\n<pre><code class="language-js">expect(true).to.be.true();\nfoo.should.be.ok();\n</code></pre>\n<p>These forms can also be mixed in any way, these are all functionally identical:</p>\n<pre><code class="language-js">expect(true).to.be.true.and.not.false();\nexpect(true).to.be.true().and.not.false;\nexpect(true).to.be.true.and.not.false;\n</code></pre>\n<h4>Plugin Authors</h4>\n<p>If you would like to provide this function-call form for your terminating assertion\nproperties, there is a new function to register these types of asserts. Instead\nof using <code>addProperty</code> to register terminating assertions, simply use <code>addChainableNoop</code>\ninstead; the arguments to both are identical. The latter will make the assertion\navailable in both the attribute and function-call forms and should have no impact\non existing users of your plugin.</p>\n<h3>Community Contributions</h3>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/297">#297</a> Allow writing lint-friendly tests. <a href="https://github.com/joshperry">@joshperry</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/298">#298</a> Add check for logging <code>-0</code>. <a href="https://github.com/dasilvacontin">@dasilvacontin</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/300">#300</a> Fix #299: the test is defining global variables <a href="https://github.com/julienw">@julienw</a></li>\n</ul>\n<p>Thank you to all who took time to contribute!</p>\n<h2>1.9.2 / 2014-09-29</h2>\n<p>The following changes are required if you are upgrading from the previous version:</p>\n<ul>\n<li>\n<p><strong>Users:</strong></p>\n<ul>\n<li>No changes required</li>\n</ul>\n</li>\n<li>\n<p><strong>Plugin Developers:</strong></p>\n<ul>\n<li>No changes required</li>\n</ul>\n</li>\n<li>\n<p><strong>Core Contributors:</strong></p>\n<ul>\n<li>Refresh <code>node_modules</code> folder for updated dependencies.</li>\n</ul>\n</li>\n</ul>\n<h3>Community Contributions</h3>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/264">#264</a> Show diff for keys assertions <a href="https://github.com/cjthompson">@cjthompson</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/267">#267</a> Use SVG badges <a href="https://github.com/shinnn">@shinnn</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/268">#268</a> Allow messages to be functions (sinon-compat) <a href="https://github.com/charlierudolph">@charlierudolph</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/269">#269</a> Remove unused argument for #lengthOf <a href="https://github.com/charlierudolph">@charlierudolph</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/275">#275</a> Rewrite pretty-printing HTML elements to prevent throwing internal errors <a href="https://github.com/DrRataplan">@DrRataplan</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/277">#277</a> Fix assert documentation for #sameMembers <a href="https://github.com/charlierudolph">@charlierudolph</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/279">#279</a> closeTo should check value\'s type before assertion <a href="https://github.com/mohayonao">@mohayonao</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/289">#289</a> satisfy is called twice <a href="https://github.com/charlierudolph">@charlierudolph</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/292">#292</a> resolve conflicts with node-webkit and global usage <a href="https://github.com/boneskull">@boneskull</a></li>\n</ul>\n<p>Thank you to all who took time to contribute!</p>\n<h2>1.9.1 / 2014-03-19</h2>\n<p>The following changes are required if you are upgrading from the previous version:</p>\n<ul>\n<li>\n<p><strong>Users:</strong></p>\n<ul>\n<li>Migrate configuration options to new interface. (see notes)</li>\n</ul>\n</li>\n<li>\n<p><strong>Plugin Developers:</strong></p>\n<ul>\n<li>No changes required</li>\n</ul>\n</li>\n<li>\n<p><strong>Core Contributors:</strong></p>\n<ul>\n<li>Refresh <code>node_modules</code> folder for updated dependencies.</li>\n</ul>\n</li>\n</ul>\n<h3>Configuration</h3>\n<p>There have been requests for changes and additions to the configuration mechanisms\nand their impact in the Chai architecture. As such, we have decoupled the\nconfiguration from the <code>Assertion</code> constructor. This not only allows for centralized\nconfiguration, but will allow us to shift the responsibility from the <code>Assertion</code>\nconstructor to the <code>assert</code> interface in future releases.</p>\n<p>These changes have been implemented in a non-breaking way, but a depretiation\nwarning will be presented to users until they migrate. The old config method will\nbe removed in either <code>v1.11.0</code> or <code>v2.0.0</code>, whichever comes first.</p>\n<h4>Quick Migration</h4>\n<pre><code class="language-js">// change this:\nchai.Assertion.includeStack = true;\nchai.Assertion.showDiff = false;\n\n// ... to this:\nchai.config.includeStack = true;\nchai.config.showDiff = false;\n</code></pre>\n<h4>All Config Options</h4>\n<h5>config.includeStack</h5>\n<ul>\n<li><strong>@param</strong> <em>{Boolean}</em></li>\n<li><strong>@default</strong> <code>false</code></li>\n</ul>\n<p>User configurable property, influences whether stack trace is included in\nAssertion error message. Default of <code>false</code> suppresses stack trace in the error\nmessage.</p>\n<h5>config.showDiff</h5>\n<ul>\n<li><strong>@param</strong> <em>{Boolean}</em></li>\n<li><strong>@default</strong> <code>true</code></li>\n</ul>\n<p>User configurable property, influences whether or not the <code>showDiff</code> flag\nshould be included in the thrown AssertionErrors. <code>false</code> will always be <code>false</code>;\n<code>true</code> will be true when the assertion has requested a diff be shown.</p>\n<h5>config.truncateThreshold <strong>(NEW)</strong></h5>\n<ul>\n<li><strong>@param</strong> <em>{Number}</em></li>\n<li><strong>@default</strong> <code>40</code></li>\n</ul>\n<p>User configurable property, sets length threshold for actual and expected values\nin assertion errors. If this threshold is exceeded, the value is truncated.</p>\n<p>Set it to zero if you want to disable truncating altogether.</p>\n<pre><code class="language-js">chai.config.truncateThreshold = 0; // disable truncating\n</code></pre>\n<h3>Community Contributions</h3>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/228">#228</a> Deep equality check for memebers. <a href="https://github.com/duncanbeevers">@duncanbeevers</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/247">#247</a> Proofreading. <a href="https://github.com/didoarellano">@didorellano</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/244">#244</a> Fix <code>contain</code>/<code>include</code> 1.9.0 regression. <a href="https://github.com/leider">@leider</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/233">#233</a> Improvements to <code>ssfi</code> for <code>assert</code> interface. <a href="https://github.com/refack">@refack</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/251">#251</a> New config option: object display threshold. <a href="https://github.com/romario333">@romario333</a></li>\n</ul>\n<p>Thank you to all who took time to contribute!</p>\n<h3>Other Bug Fixes</h3>\n<ul>\n<li><a href="https://github.com/chaijs/chai/issues/183">#183</a> Allow <code>undefined</code> for actual. (internal api)</li>\n<li>Update Karam(+plugins)/Istanbul to most recent versions.</li>\n</ul>\n<h2>1.9.0 / 2014-01-29</h2>\n<p>The following changes are required if you are upgrading from the previous version:</p>\n<ul>\n<li>\n<p><strong>Users:</strong></p>\n<ul>\n<li>No changes required</li>\n</ul>\n</li>\n<li>\n<p><strong>Plugin Developers:</strong></p>\n<ul>\n<li>Review <a href="https://github.com/chaijs/chai/pull/219">#219</a>.</li>\n</ul>\n</li>\n<li>\n<p><strong>Core Contributors:</strong></p>\n<ul>\n<li>Refresh <code>node_modules</code> folder for updated dependencies.</li>\n</ul>\n</li>\n</ul>\n<h3>Community Contributions</h3>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/201">#202</a> Improve error message for .throw(). <a href="https://github.com/andreineculau">@andreineculau</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/217">#217</a> Chai tests can be run with <code>--watch</code>. <a href="https://github.com/demands">@demands</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/219">#219</a> Add overwriteChainableMethod utility. <a href="https://github.com/demands">@demands</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/224">#224</a> Return error on throw method to chain on error properties. <a href="https://github.com/vbardales">@vbardales</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/226">#226</a> Add <code>has</code> to language chains. <a href="https://github.com/duncanbeevers">@duncanbeevers</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/230">#230</a> Support <code>{a:1,b:2}.should.include({a:1})</code> <a href="https://github.com/jkroso">@jkroso</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/231">#231</a> Update Copyright notices to 2014 <a href="https://github.com/duncanbeevers">@duncanbeevers</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/232">#232</a> Avoid error instantiation if possible on assert.throws. <a href="https://github.com/laconbass">@laconbass</a></li>\n</ul>\n<p>Thank you to all who took time to contribute!</p>\n<h3>Other Bug Fixes</h3>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/225">#225</a> Improved AMD wrapper provided by upstream <code>component(1)</code>.</li>\n<li><a href="https://github.com/chaijs/chai/issues/185">#185</a> <code>assert.throws()</code> returns thrown error for further assertions.</li>\n<li><a href="https://github.com/chaijs/chai/pull/237">#237</a> Remove coveralls/jscoverage, include istanbul coverage report in travis test.</li>\n<li>Update Karma and Sauce runner versions for consistent CI results. No more karma@canary.</li>\n</ul>\n<h2>1.8.1 / 2013-10-10</h2>\n<p>The following changes are required if you are upgrading from the previous version:</p>\n<ul>\n<li>\n<p><strong>Users:</strong></p>\n<ul>\n<li>Refresh <code>node_modules</code> folder for updated dependencies.</li>\n</ul>\n</li>\n<li>\n<p><strong>Plugin Developers:</strong></p>\n<ul>\n<li>No changes required</li>\n</ul>\n</li>\n<li>\n<p><strong>Core Contributors:</strong></p>\n<ul>\n<li>Refresh <code>node_modules</code> folder for updated dependencies.</li>\n</ul>\n</li>\n</ul>\n<h3>Browserify</h3>\n<p>This is a small patch that updates the dependency tree so browserify users can install\nchai. (Remove conditional requires)</p>\n<h2>1.8.0 / 2013-09-18</h2>\n<p>The following changes are required if you are upgrading from the previous version:</p>\n<ul>\n<li>\n<p><strong>Users:</strong></p>\n<ul>\n<li>See <code>deep.equal</code> notes.</li>\n</ul>\n</li>\n<li>\n<p><strong>Plugin Developers:</strong></p>\n<ul>\n<li>No changes required</li>\n</ul>\n</li>\n<li>\n<p><strong>Core Contributors:</strong></p>\n<ul>\n<li>Refresh <code>node_modules</code> folder for updated dependencies.</li>\n</ul>\n</li>\n</ul>\n<h3>Deep Equals</h3>\n<p>This version of Chai focused on a overhaul to the deep equal utility. The code for this\ntool has been removed from the core lib and can now be found at:\n<a href="https://github.com/chaijs/deep-eql">chai / deep-eql</a>. As stated in previous releases,\nthis is part of a larger initiative to provide transparency, independent testing, and coverage for\nsome of the more complicated internal tools.</p>\n<p>For the most part <code>.deep.equal</code> will behave the same as it has. However, in order to provide a\nconsistent ruleset across all types being tested, the following changes have been made and <em>might</em>\nrequire changes to your tests.</p>\n<p><strong>1.</strong> Strict equality for non-traversable nodes according to <a href="http://wiki.ecmascript.org/doku.php?id=harmony:egal">egal</a>.</p>\n<p><em>Previously:</em> Non-traversable equal via <code>===</code>.</p>\n<pre><code class="language-js">expect(NaN).to.deep.equal(NaN);\nexpect(-0).to.not.deep.equal(+0);\n</code></pre>\n<p><strong>2.</strong> Arguments are not Arrays (and all types must be equal):</p>\n<p><em>Previously:</em> Some crazy nonsense that led to empty arrays deep equaling empty objects deep equaling dates.</p>\n<pre><code class="language-js">expect(arguments).to.not.deep.equal([]);\nexpect(Array.prototype.slice.call(arguments)).to.deep.equal([]);\n</code></pre>\n<ul>\n<li><a href="https://github.com/chaijs/chai/issues/156">#156</a> Empty object is eql to empty array</li>\n<li><a href="https://github.com/chaijs/chai/issues/192">#192</a> empty object is eql to a Date object</li>\n<li><a href="https://github.com/chaijs/chai/issues/194">#194</a> refactor deep-equal utility</li>\n</ul>\n<h3>CI and Browser Testing</h3>\n<p>Chai now runs the browser CI suite using <a href="http://karma-runner.github.io/">Karma</a> directed at\n<a href="https://saucelabs.com/">SauceLabs</a>. This means we get to know where our browser support stands...\nand we get a cool badge:</p>\n<p><a href="https://saucelabs.com/u/logicalparadox"><img src="https://saucelabs.com/browser-matrix/logicalparadox.svg" alt="Selenium Test Status"></a></p>\n<p>Look for the list of browsers/versions to expand over the coming releases.</p>\n<ul>\n<li><a href="https://github.com/chaijs/chai/issues/195">#195</a> karma test framework</li>\n</ul>\n<h2>1.7.2 / 2013-06-27</h2>\n<p>The following changes are required if you are upgrading from the previous version:</p>\n<ul>\n<li>\n<p><strong>Users:</strong></p>\n<ul>\n<li>No changes required.</li>\n</ul>\n</li>\n<li>\n<p><strong>Plugin Developers:</strong></p>\n<ul>\n<li>No changes required</li>\n</ul>\n</li>\n<li>\n<p><strong>Core Contributors:</strong></p>\n<ul>\n<li>Refresh <code>node_modules</code> folder for updated dependencies.</li>\n</ul>\n</li>\n</ul>\n<h3>Coverage Reporting</h3>\n<p>Coverage reporting has always been available for core-developers but the data has never been published\nfor our end users. In our ongoing effort to improve accountability this data will now be published via\nthe <a href="https://coveralls.io/">coveralls.io</a> service. A badge has been added to the README and the full report\ncan be viewed online at the <a href="https://coveralls.io/r/chaijs/chai">chai coveralls project</a>. Furthermore, PRs\nwill receive automated messages indicating how their PR impacts test coverage. This service is tied to TravisCI.</p>\n<h3>Other Fixes</h3>\n<ul>\n<li><a href="https://github.com/chaijs/chai/issues/175">#175</a> Add <code>bower.json</code>. (Fix ignore all)</li>\n</ul>\n<h2>1.7.1 / 2013-06-24</h2>\n<p>The following changes are required if you are upgrading from the previous version:</p>\n<ul>\n<li>\n<p><strong>Users:</strong></p>\n<ul>\n<li>No changes required.</li>\n</ul>\n</li>\n<li>\n<p><strong>Plugin Developers:</strong></p>\n<ul>\n<li>No changes required</li>\n</ul>\n</li>\n<li>\n<p><strong>Core Contributors:</strong></p>\n<ul>\n<li>Refresh <code>node_modules</code> folder for updated dependencies.</li>\n</ul>\n</li>\n</ul>\n<h3>Official Bower Support</h3>\n<p>Support has been added for the Bower Package Manager ([bower.io])(<a href="http://bower.io/">http://bower.io/</a>). Though\nChai could be installed via Bower in the past, this update adds official support via the <code>bower.json</code>\nspecification file.</p>\n<ul>\n<li><a href="https://github.com/chaijs/chai/issues/175">#175</a> Add <code>bower.json</code>.</li>\n</ul>\n<h2>1.7.0 / 2013-06-17</h2>\n<p>The following changes are required if you are upgrading from the previous version:</p>\n<ul>\n<li>\n<p><strong>Users:</strong></p>\n<ul>\n<li>No changes required.</li>\n</ul>\n</li>\n<li>\n<p><strong>Plugin Developers:</strong></p>\n<ul>\n<li>Review AssertionError update notice.</li>\n</ul>\n</li>\n<li>\n<p><strong>Core Contributors:</strong></p>\n<ul>\n<li>Refresh <code>node_modules</code> folder for updated dependencies.</li>\n</ul>\n</li>\n</ul>\n<h3>AssertionError Update Notice</h3>\n<p>Chai now uses <a href="https://github.com/chaijs/assertion-error">chaijs/assertion-error</a> instead an internal\nconstructor. This will allow for further iteration/experimentation of the AssertionError constructor\nindependant of Chai. Future plans include stack parsing for callsite support.</p>\n<p>This update constructor has a different constructor param signature that conforms more with the standard\n<code>Error</code> object. If your plugin throws and <code>AssertionError</code> directly you will need to update your plugin\nwith the new signature.</p>\n<pre><code class="language-js">var AssertionError = require(\'chai\').AssertionError;\n\n/**\n * previous\n *\n * @param {Object} options\n */\n\nthrow new AssertionError({\n    message: \'An assertion error occurred\'\n  , actual: actual\n  , expect: expect\n  , startStackFunction: arguments.callee\n  , showStack: true\n});\n\n/**\n * new\n *\n * @param {String} message\n * @param {Object} options\n * @param {Function} start stack function\n */\n\nthrow new AssertionError(\'An assertion error occurred\', {\n    actual: actual\n  , expect: expect\n  , showStack: true\n}, arguments.callee);\n\n// other signatures\nthrow new AssertionError(\'An assertion error occurred\');\nthrow new AssertionError(\'An assertion error occurred\', null, arguments.callee);\n</code></pre>\n<h4>External Dependencies</h4>\n<p>This is the first non-developement dependency for Chai. As Chai continues to evolve we will begin adding\nmore; the next will likely be improved type detection and deep equality. With Chai\'s userbase continually growing\nthere is an higher need for accountability and documentation. External dependencies will allow us to iterate and\ntest on features independent from our interfaces.</p>\n<p>Note: The browser packaged version <code>chai.js</code> will ALWAYS contain all dependencies needed to run Chai.</p>\n<h3>Community Contributions</h3>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/169">#169</a> Fix deep equal comparison for Date/Regexp types. <a href="https://github.com/katsgeorgeek">@katsgeorgeek</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/171">#171</a> Add <code>assert.notOk()</code>. <a href="https://github.com/Bartvds">@Bartvds</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/173">#173</a> Fix <code>inspect</code> utility. <a href="https://github.com/domenic">@domenic</a></li>\n</ul>\n<p>Thank you to all who took the time to contribute!</p>\n<h2>1.6.1 / 2013-06-05</h2>\n<p>The following changes are required if you are upgrading from the previous version:</p>\n<ul>\n<li>\n<p><strong>Users:</strong></p>\n<ul>\n<li>No changes required.</li>\n</ul>\n</li>\n<li>\n<p><strong>Plugin Developers:</strong></p>\n<ul>\n<li>No changes required.</li>\n</ul>\n</li>\n<li>\n<p><strong>Core Contributors:</strong></p>\n<ul>\n<li>Refresh <code>node_modules</code> folder for updated developement dependencies.</li>\n</ul>\n</li>\n</ul>\n<h3>Deep Equality</h3>\n<p>Regular Expressions are now tested as part of all deep equality assertions. In previous versions\nthey silently passed for all scenarios. Thanks to <a href="https://github.com/katsgeorgeek">@katsgeorgeek</a> for the contribution.</p>\n<h3>Community Contributions</h3>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/161">#161</a> Fix documented name for assert interface\'s isDefined method. <a href="https://github.com/brandonpayton">@brandonpayton</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/168">#168</a> Fix comparison equality of two regexps for when using deep equality. <a href="https://github.com/katsgeorgeek">@katsgeorgeek</a></li>\n</ul>\n<p>Thank you to all who took the time to contribute!</p>\n<h3>Additional Notes</h3>\n<ul>\n<li>Mocha has been locked at version <code>1.8.x</code> to ensure <code>mocha-phantomjs</code> compatibility.</li>\n</ul>\n<h2>1.6.0 / 2013-04-29</h2>\n<p>The following changes are required if you are upgrading from the previous version:</p>\n<ul>\n<li>\n<p><strong>Users:</strong></p>\n<ul>\n<li>No changes required.</li>\n</ul>\n</li>\n<li>\n<p><strong>Plugin Developers:</strong></p>\n<ul>\n<li>No changes required.</li>\n</ul>\n</li>\n<li>\n<p><strong>Core Contributors:</strong></p>\n<ul>\n<li>Refresh <code>node_modules</code> folder for updated developement dependencies.</li>\n</ul>\n</li>\n</ul>\n<h3>New Assertions</h3>\n<h4>Array Members Inclusion</h4>\n<p>Asserts that the target is a superset of <code>set</code>, or that the target and <code>set</code> have the same members.\nOrder is not taken into account. Thanks to <a href="https://github.com/NickHeiner">@NickHeiner</a> for the contribution.</p>\n<pre><code class="language-js">// (expect/should) full set\nexpect([4, 2]).to.have.members([2, 4]);\nexpect([5, 2]).to.not.have.members([5, 2, 1]);\n\n// (expect/should) inclusion\nexpect([1, 2, 3]).to.include.members([3, 2]);\nexpect([1, 2, 3]).to.not.include.members([3, 2, 8]);\n\n// (assert) full set\nassert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], \'same members\');\n\n// (assert) inclusion\nassert.includeMembers([ 1, 2, 3 ], [ 2, 1 ], \'include members\');\n</code></pre>\n<h4>Non-inclusion for Assert Interface</h4>\n<p>Most <code>assert</code> functions have a negative version, like <code>instanceOf()</code> has a corresponding <code>notInstaceOf()</code>.\nHowever <code>include()</code> did not have a corresponding <code>notInclude()</code>. This has been added.</p>\n<pre><code class="language-js">assert.notInclude([ 1, 2, 3 ], 8);\nassert.notInclude(\'foobar\', \'baz\');\n</code></pre>\n<h3>Community Contributions</h3>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/140">#140</a> Restore <code>call</code>/<code>apply</code> methods for plugin interface. <a href="https://github.com/RubenVerborgh">@RubenVerborgh</a></li>\n<li><a href="https://github.com/chaijs/chai/issues/148">#148</a>/<a href="https://github.com/chaijs/chai/pull/153">#153</a> Add <code>members</code> and <code>include.members</code> assertions. <a href="https://github.com/NickHeiner">#NickHeiner</a></li>\n</ul>\n<p>Thank you to all who took time to contribute!</p>\n<h3>Other Bug Fixes</h3>\n<ul>\n<li><a href="https://github.com/chaijs/chai/issues/142">#142</a> <code>assert#include</code> will no longer silently pass on wrong-type haystack.</li>\n<li><a href="https://github.com/chaijs/chai/issues/158">#158</a> <code>assert#notInclude</code> has been added.</li>\n<li>Travis-CI now tests Node.js <code>v0.10.x</code>. Support for <code>v0.6.x</code> has been removed. <code>v0.8.x</code> is still tested as before.</li>\n</ul>\n<h2>1.5.0 / 2013-02-03</h2>\n<h3>Migration Requirements</h3>\n<p>The following changes are required if you are upgrading from the previous version:</p>\n<ul>\n<li>\n<p><strong>Users:</strong></p>\n<ul>\n<li><em>Update [2013-02-04]:</em> Some users may notice a small subset of deep equality assertions will no longer pass. This is the result of\n<a href="https://github.com/chaijs/chai/issues/120">#120</a>, an improvement to our deep equality algorithm. Users will need to revise their assertions\nto be more granular should this occur. Further information: <a href="https://github.com/chaijs/chai/issues/139">#139</a>.</li>\n</ul>\n</li>\n<li>\n<p><strong>Plugin Developers:</strong></p>\n<ul>\n<li>No changes required.</li>\n</ul>\n</li>\n<li>\n<p><strong>Core Contributors:</strong></p>\n<ul>\n<li>Refresh <code>node_modules</code> folder for updated developement dependencies.</li>\n</ul>\n</li>\n</ul>\n<h3>Community Contributions</h3>\n<ul>\n<li><a href="https://github.com/chaijs/chai/pull/126">#126</a>: Add <code>eqls</code> alias for <code>eql</code>. <a href="https://github.com/RubenVerborgh">@RubenVerborgh</a></li>\n<li><a href="https://github.com/chaijs/chai/issues/127">#127</a>: Performance refactor for chainable methods. <a href="https://github.com/RubenVerborgh">@RubenVerborgh</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/133">#133</a>: Assertion <code>.throw</code> support for primitives. <a href="https://github.com/RubenVerborgh">@RubenVerborgh</a></li>\n<li><a href="https://github.com/chaijs/chai/issues/137">#137</a>: Assertion <code>.throw</code> support for empty messages. <a href="https://github.com/timnew">@timnew</a></li>\n<li><a href="https://github.com/chaijs/chai/pull/136">#136</a>: Fix backward negation messages when using <code>.above()</code> and <code>.below()</code>. <a href="https://github.com/whatthejeff">@whatthejeff</a></li>\n</ul>\n<p>Thank you to all who took time to contribute!</p>\n<h3>Other Bug Fixes</h3>\n<ul>\n<li>Improve type detection of <code>.a()</code>/<code>.an()</code> to work in cross-browser scenarios.</li>\n<li><a href="https://github.com/chaijs/chai/issues/116">#116</a>: <code>.throw()</code> has cleaner display of errors when WebKit browsers.</li>\n<li><a href="https://github.com/chaijs/chai/issues/120">#120</a>: <code>.eql()</code> now works to compare dom nodes in browsers.</li>\n</ul>\n<h3>Usage Updates</h3>\n<h4>For Users</h4>\n<p><strong>1. Component Support:</strong> Chai now included the proper configuration to be installed as a\n<a href="https://github.com/component/component">component</a>. Component users are encouraged to consult\n<a href="http://chaijs.com">chaijs.com</a> for the latest version number as using the master branch\ndoes not gaurantee stability.</p>\n<pre><code class="language-js">// relevant component.json\n  devDependencies: {\n    "chaijs/chai": "1.5.0"\n  }\n</code></pre>\n<p>Alternatively, bleeding-edge is available:</p>\n<pre><code>$ component install chaijs/chai\n</code></pre>\n<p><strong>2. Configurable showDiff:</strong> Some test runners (such as <a href="http://visionmedia.github.com/mocha/">mocha</a>)\ninclude support for showing the diff of strings and objects when an equality error occurs. Chai has\nalready included support for this, however some users may not prefer this display behavior. To revert to\nno diff display, the following configuration is available:</p>\n<pre><code class="language-js">chai.Assertion.showDiff = false; // diff output disabled\nchai.Assertion.showDiff = true; // default, diff output enabled\n</code></pre>\n<h4>For Plugin Developers</h4>\n<p><strong>1. New Utility - type</strong>: The new utility <code>.type()</code> is available as a better implementation of <code>typeof</code>\nthat can be used cross-browser. It handles the inconsistencies of Array, <code>null</code>, and <code>undefined</code> detection.</p>\n<ul>\n<li><strong>@param</strong> <em>{Mixed}</em> object to detect type of</li>\n<li><strong>@return</strong> <em>{String}</em> object type</li>\n</ul>\n<pre><code class="language-js">chai.use(function (c, utils) {\n  // some examples\n  utils.type({}); // \'object\'\n  utils.type(null); // `null\'\n  utils.type(undefined); // `undefined`\n  utils.type([]); // `array`\n});\n</code></pre>\n<h4>For Core Contributors</h4>\n<p><strong>1. Browser Testing</strong>: Browser testing of the <code>./chai.js</code> file is now available in the command line\nvia PhantomJS. <code>make test</code> and Travis-CI will now also rebuild and test <code>./chai.js</code>. Consequently, all\npull requests will now be browser tested in this way.</p>\n<p><em>Note: Contributors opening pull requests should still NOT include the browser build.</em></p>\n<p><strong>2. SauceLabs Testing</strong>: Early SauceLab support has been enabled with the file <code>./support/mocha-cloud.js</code>.\nThose interested in trying it out should create a free <a href="https://saucelabs.com/signup/plan">Open Sauce</a> account\nand include their credentials in <code>./test/auth/sauce.json</code>.</p>',
docPath:"argo-ci/node_modules/chai/releasenotes",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-chai-releasenotes-html-64b94f4dc4ff1b24ad48.js.map