webpackJsonp([0xd04ad7c13a6d],{2862:function(r,e){r.exports={pathContext:{docHtml:'<h1>make-error <a href="http://travis-ci.org/JsCommunity/make-error"><img src="https://img.shields.io/travis/JsCommunity/make-error/master.svg" alt="Build Status"></a></h1>\n<blockquote>\n<p>Make your own error types!</p>\n</blockquote>\n<h2>Features</h2>\n<ul>\n<li>Compatible Node &#x26; browsers</li>\n<li><code>instanceof</code> support</li>\n<li><code>error.name</code> &#x26; <code>error.stack</code> support</li>\n<li>compatible with <a href="https://en.wikipedia.org/wiki/Content_Security_Policy">CSP</a> (i.e. no <code>eval()</code>)</li>\n</ul>\n<h2>Installation</h2>\n<h3>Node &#x26; <a href="http://browserify.org/">Browserify</a>/<a href="https://webpack.js.org/">Webpack</a></h3>\n<p>Installation of the <a href="https://npmjs.org/package/make-error">npm package</a>:</p>\n<pre><code>> npm install --save make-error\n</code></pre>\n<p>Then require the package:</p>\n<pre><code class="language-javascript">var makeError = require(\'make-error\');\n</code></pre>\n<h3>Browser</h3>\n<p>You can directly use the build provided at <a href="https://unpkg.com">unpkg.com</a>:</p>\n<pre><code class="language-html">&#x3C;script src="https://unpkg.com/make-error@1/dist/make-error.js">&#x3C;/script>\n</code></pre>\n<h2>Usage</h2>\n<h3>Basic named error</h3>\n<pre><code class="language-javascript">var CustomError = makeError(\'CustomError\')\n\n// Parameters are forwarded to the super class (here Error).\nthrow new CustomError(\'a message\')\n</code></pre>\n<h3>Advanced error class</h3>\n<pre><code class="language-javascript">function CustomError (customValue) {\n  CustomError.super.call(this, \'custom error message\')\n\n  this.customValue = customValue\n}\nmakeError(CustomError)\n\n// Feel free to extend the prototype.\nCustomError.prototype.myMethod = function CustomError$myMethod () {\n  console.log(\'CustomError.myMethod (%s, %s)\', this.code, this.message)\n}\n\n//-----\n\ntry {\n  throw new CustomError(42)\n} catch (error) {\n  error.myMethod()\n}\n</code></pre>\n<h3>Specialized error</h3>\n<pre><code class="language-javascript">var SpecializedError = makeError(\'SpecializedError\', CustomError);\n\nthrow new SpecializedError(42);\n</code></pre>\n<h3>Inheritance</h3>\n<blockquote>\n<p>Best for ES2015+.</p>\n</blockquote>\n<pre><code class="language-javascript">import {BaseError} from \'make-error\'\n\nclass CustomError extends BaseError {\n  constructor () {\n    super(\'custom error message\')\n  }\n}\n</code></pre>\n<h2>Related</h2>\n<ul>\n<li><a href="https://www.npmjs.com/package/make-error-cause">make-error-cause</a>: Make your own error types, with a cause!</li>\n</ul>\n<h2>Contributions</h2>\n<p>Contributions are <em>very</em> welcomed, either on the documentation or on\nthe code.</p>\n<p>You may:</p>\n<ul>\n<li>report any <a href="https://github.com/JsCommunity/make-error/issues">issue</a>\nyou\'ve encountered;</li>\n<li>fork and create a pull request.</li>\n</ul>\n<h2>License</h2>\n<p>ISC Â© <a href="http://julien.isonoe.net">Julien Fontanet</a></p>',docPath:"argo-ci/node_modules/make-error/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-make-error-readme-html-756ed5a9774c7a67cb9a.js.map