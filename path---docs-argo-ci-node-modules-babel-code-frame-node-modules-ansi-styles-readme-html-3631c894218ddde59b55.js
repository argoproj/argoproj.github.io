webpackJsonp([0x645321b60a7e],{2076:function(e,o){e.exports={pathContext:{docHtml:'<h1>ansi-styles <a href="https://travis-ci.org/chalk/ansi-styles"><img src="https://travis-ci.org/chalk/ansi-styles.svg?branch=master" alt="Build Status"></a></h1>\n<blockquote>\n<p><a href="http://en.wikipedia.org/wiki/ANSI_escape_code#Colors_and_Styles">ANSI escape codes</a> for styling strings in the terminal</p>\n</blockquote>\n<p>You probably want the higher-level <a href="https://github.com/chalk/chalk">chalk</a> module for styling your strings.</p>\n<p><img src="screenshot.png"></p>\n<h2>Install</h2>\n<pre><code>$ npm install --save ansi-styles\n</code></pre>\n<h2>Usage</h2>\n<pre><code class="language-js">var ansi = require(\'ansi-styles\');\n\nconsole.log(ansi.green.open + \'Hello world!\' + ansi.green.close);\n</code></pre>\n<h2>API</h2>\n<p>Each style has an <code>open</code> and <code>close</code> property.</p>\n<h2>Styles</h2>\n<h3>Modifiers</h3>\n<ul>\n<li><code>reset</code></li>\n<li><code>bold</code></li>\n<li><code>dim</code></li>\n<li><code>italic</code> <em>(not widely supported)</em></li>\n<li><code>underline</code></li>\n<li><code>inverse</code></li>\n<li><code>hidden</code></li>\n<li><code>strikethrough</code> <em>(not widely supported)</em></li>\n</ul>\n<h3>Colors</h3>\n<ul>\n<li><code>black</code></li>\n<li><code>red</code></li>\n<li><code>green</code></li>\n<li><code>yellow</code></li>\n<li><code>blue</code></li>\n<li><code>magenta</code></li>\n<li><code>cyan</code></li>\n<li><code>white</code></li>\n<li><code>gray</code></li>\n</ul>\n<h3>Background colors</h3>\n<ul>\n<li><code>bgBlack</code></li>\n<li><code>bgRed</code></li>\n<li><code>bgGreen</code></li>\n<li><code>bgYellow</code></li>\n<li><code>bgBlue</code></li>\n<li><code>bgMagenta</code></li>\n<li><code>bgCyan</code></li>\n<li><code>bgWhite</code></li>\n</ul>\n<h2>Advanced usage</h2>\n<p>By default you get a map of styles, but the styles are also available as groups. They are non-enumerable so they don\'t show up unless you access them explicitly. This makes it easier to expose only a subset in a higher-level module.</p>\n<ul>\n<li><code>ansi.modifiers</code></li>\n<li><code>ansi.colors</code></li>\n<li><code>ansi.bgColors</code></li>\n</ul>\n<h6>Example</h6>\n<pre><code class="language-js">console.log(ansi.colors.green.open);\n</code></pre>\n<h2>License</h2>\n<p>MIT Â© <a href="http://sindresorhus.com">Sindre Sorhus</a></p>',docPath:"argo-ci/node_modules/babel-code-frame/node_modules/ansi-styles/readme",proj:"argo-ci"}}}});
//# sourceMappingURL=path---docs-argo-ci-node-modules-babel-code-frame-node-modules-ansi-styles-readme-html-3631c894218ddde59b55.js.map